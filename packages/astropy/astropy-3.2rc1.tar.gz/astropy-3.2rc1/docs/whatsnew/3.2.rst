.. doctest-skip-all

.. _whatsnew-3.2:

**************************
What's New in Astropy 3.2?
**************************

Overview
========

Astropy 3.2 is a major release that ...  since
the 3.1.x series of releases.

In particular, this release includes:

* :ref:`whatsnew-3.2-timeseries`
* :ref:`whatsnew-3.2-ecliptic`
*

In addition to these major changes, Astropy v3.2 includes a large number of
smaller improvements and bug fixes, which are described in the
:ref:`changelog`. By the numbers:

* xxx issues have been closed since v3.1
* xxx pull requests have been merged since v3.1
* xxx distinct people have contributed code

.. _whatsnew-3.2-timeseries:

New Sub-package for Time Series
===============================

Astropy 3.2 includes a new experimental sub-package: :ref:`astropy-timeseries`.
Currently this sub-package provides classes to represent sampled and binned
time series as well as some basic analysis tasks.

The following example shows a simple example of reading in a Kepler light curve,
finding the period of the transits, and folding the light curve.

.. plot::
   :include-source:
   :context: reset

   import numpy as np
   import matplotlib.pyplot as plt
   from astropy.timeseries import TimeSeries
   from astropy.utils.data import get_pkg_data_filename
   from astropy import units as u

   filename = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
   ts = TimeSeries.read(filename, format='kepler.fits')

   plt.figure(figsize=(10,5))

   # Show the original light curve
   plt.subplot(1, 2, 1)
   plt.plot(ts.time.mjd, ts['sap_flux'], 'k.', markersize=1)
   plt.xlabel('Barycentric Modified Julian Date')
   plt.ylabel('SAP Flux (e-/s)')

   # Find the transit period and fold the light curve
   from astropy.timeseries import BoxLeastSquares
   periodogram = BoxLeastSquares.from_timeseries(ts, 'sap_flux')
   results = periodogram.autopower(0.2 * u.day)
   best = np.argmax(results.power)
   ts_folded = ts.fold(period=results.period[best],
                       midpoint_epoch=results.transit_time[best])

   # Show the folded light curve
   plt.subplot(1, 2, 2)
   plt.plot(ts_folded.time.jd, ts_folded['sap_flux'], 'k.', markersize=1)
   plt.xlabel('Time relative to epoch (days)')
   plt.gca().get_yaxis().set_visible(False)

This sub-package should be considered experimental and subject to API changes in
the future if user feedback calls for it.

Note that the :class:`~astropy.timeseries.LombScargle` and
:class:`~astropy.timeseries.BoxLeastSquares` periodogram classes have now moved
from the :mod:`astropy.stats` to the :mod:`astropy.timeseries` module.

.. _whatsnew-3.2-ecliptic:

Additions and changes to Ecliptic Transformations
=================================================

The Ecliptic frames and associated transformations in ``astropy.coordinates``
have been updated to correctly reflect the "True" and "Mean" terminology. In
this release there are now ``*MeanEcliptic`` frames now which include precession but
not nutation, and ``*TrueEcliptic`` frames which also include nutation.
Additionally, new frames (``HeliocentricEclipticIAU76`` and
``CustomBarycentricEcliptic``) have been added with specific conventions used in
particular fields. For more details on the motivation behind these changes, see
`PR #8394 <https://github.com/astropy/astropy/pull/8394>`_ and the associated
discussion.

Note that this change may break some usage of the previous ``*TrueEcliptic``
frames, as in the last few versions these had a behavior more akin to "mean"
ecliptic frames.  In many cases it will be sufficient to simply replace this
usage with the appropriate ``*MeanEcliptic`` frames.

.. _whatsnew-3.2-tt:

Default time scale for "J2000"-style strings changed to TT
==========================================================

In past versions of astropy, times specified as "equinox-style strings" - e.g.,
``Time('J2000')`` - defaulted to the UTC scale.  This includes default equinoxes
for FK4/FK5 coordinates. To be more consistent with commonly-accepted usage of
terms like "J2000", this strings now default to the TT time scale. This
difference is on the order of 60 seconds, which for e.g. equinox precession is
typically an extremely small differences (picoarcseconds).  However, if the
previous behavior is needed, the easiest work-around is to change any use of
e.g., ``'J2000'`` to ``Time('J2000', scale='utc')``.


Full change log
===============

To see a detailed list of all changes in version v3.2, including changes in
API, please see the :ref:`changelog`.


Renamed/removed functionality
=============================
