(lp0
(ccopy_reg
_reconstructor
p1
(cpygments.token
_TokenType
p2
c__builtin__
tuple
p3
(S'Comment'
p4
S'Multiline'
p5
tp6
tp7
Rp8
(dp9
S'parent'
p10
g1
(g2
g3
(g4
tp11
tp12
Rp13
(dp14
S'Multi'
p15
g1
(g2
g3
(g4
g15
tp16
tp17
Rp18
(dp19
g10
g13
sS'subtypes'
p20
c__builtin__
set
p21
((lp22
tp23
Rp24
sbsg10
g1
(g2
g3
(ttp25
Rp26
(dp27
S'Number'
p28
g1
(g2
g3
(S'Literal'
p29
g28
tp30
tp31
Rp32
(dp33
S'Integer'
p34
g1
(g2
g3
(g29
g28
g34
tp35
tp36
Rp37
(dp38
g10
g32
sS'Long'
p39
g1
(g2
g3
(g29
g28
g34
g39
tp40
tp41
Rp42
(dp43
g10
g37
sg20
g21
((lp44
tp45
Rp46
sbsg20
g21
((lp47
g42
atp48
Rp49
sbsg10
g1
(g2
g3
(g29
tp50
tp51
Rp52
(dp53
S'Scalar'
p54
g1
(g2
g3
(g29
g54
tp55
tp56
Rp57
(dp58
g10
g52
sg20
g21
((lp59
g1
(g2
g3
(g29
g54
S'Plain'
p60
tp61
tp62
Rp63
(dp64
g10
g57
sg20
g21
((lp65
tp66
Rp67
sbatp68
Rp69
sg60
g63
sbsg28
g32
sg10
g26
sS'Other'
p70
g1
(g2
g3
(g29
g70
tp71
tp72
Rp73
(dp74
g10
g52
sg20
g21
((lp75
tp76
Rp77
sbsS'Char'
p78
g1
(g2
g3
(g29
g78
tp79
tp80
Rp81
(dp82
g10
g52
sg20
g21
((lp83
tp84
Rp85
sbsS'String'
p86
g1
(g2
g3
(g29
g86
tp87
tp88
Rp89
(dp90
g78
g1
(g2
g3
(g29
g86
g78
tp91
tp92
Rp93
(dp94
g10
g89
sg20
g21
((lp95
tp96
Rp97
sbsS'Backtick'
p98
g1
(g2
g3
(g29
g86
g98
tp99
tp100
Rp101
(dp102
g10
g89
sg20
g21
((lp103
tp104
Rp105
sbsS'Heredoc'
p106
g1
(g2
g3
(g29
g86
g106
tp107
tp108
Rp109
(dp110
g10
g89
sg20
g21
((lp111
tp112
Rp113
sbsS'Symbol'
p114
g1
(g2
g3
(g29
g86
g114
tp115
tp116
Rp117
(dp118
g10
g89
sg20
g21
((lp119
tp120
Rp121
sbsS'Interpol'
p122
g1
(g2
g3
(g29
g86
g122
tp123
tp124
Rp125
(dp126
g10
g89
sg20
g21
((lp127
tp128
Rp129
sbsS'Delimiter'
p130
g1
(g2
g3
(g29
g86
g130
tp131
tp132
Rp133
(dp134
g10
g89
sg20
g21
((lp135
tp136
Rp137
sbsS'Boolean'
p138
g1
(g2
g3
(g29
g86
g138
tp139
tp140
Rp141
(dp142
g10
g89
sg20
g21
((lp143
tp144
Rp145
sbsS'Character'
p146
g1
(g2
g3
(g29
g86
g146
tp147
tp148
Rp149
(dp150
g10
g89
sg20
g21
((lp151
tp152
Rp153
sbsS'Double'
p154
g1
(g2
g3
(g29
g86
g154
tp155
tp156
Rp157
(dp158
g10
g89
sg20
g21
((lp159
tp160
Rp161
sbsS'Delimeter'
p162
g1
(g2
g3
(g29
g86
g162
tp163
tp164
Rp165
(dp166
g10
g89
sg20
g21
((lp167
tp168
Rp169
sbsS'Atom'
p170
g1
(g2
g3
(g29
g86
g170
tp171
tp172
Rp173
(dp174
g10
g89
sg20
g21
((lp175
tp176
Rp177
sbsS'Affix'
p178
g1
(g2
g3
(g29
g86
g178
tp179
tp180
Rp181
(dp182
g10
g89
sg20
g21
((lp183
tp184
Rp185
sbsS'Name'
p186
g1
(g2
g3
(g29
g86
g186
tp187
tp188
Rp189
(dp190
g10
g89
sg20
g21
((lp191
tp192
Rp193
sbsS'Regex'
p194
g1
(g2
g3
(g29
g86
g194
tp195
tp196
Rp197
(dp198
g10
g89
sg20
g21
((lp199
tp200
Rp201
sbsS'Interp'
p202
g1
(g2
g3
(g29
g86
g202
tp203
tp204
Rp205
(dp206
g10
g89
sg20
g21
((lp207
tp208
Rp209
sbsS'Escape'
p210
g1
(g2
g3
(g29
g86
g210
tp211
tp212
Rp213
(dp214
g10
g89
sg20
g21
((lp215
tp216
Rp217
sbsg20
g21
((lp218
g133
ag117
ag197
ag1
(g2
g3
(g29
g86
S'Doc'
p219
tp220
tp221
Rp222
(dp223
g10
g89
sg20
g21
((lp224
tp225
Rp226
sbag149
ag141
ag157
ag125
ag173
ag165
ag189
ag213
ag1
(g2
g3
(g29
g86
S'Single'
p227
tp228
tp229
Rp230
(dp231
g10
g89
sg20
g21
((lp232
tp233
Rp234
sbag1
(g2
g3
(g29
g86
g70
tp235
tp236
Rp237
(dp238
g10
g89
sg20
g21
((lp239
tp240
Rp241
sbag205
ag101
ag181
ag1
(g2
g3
(g29
g86
S'Moment'
p242
tp243
tp244
Rp245
(dp246
g10
g89
sg20
g21
((lp247
tp248
Rp249
sbag93
ag109
atp250
Rp251
sg227
g230
sg242
g245
sg10
g52
sg70
g237
sg219
g222
sbsg20
g21
((lp252
g89
ag81
ag73
ag1
(g2
g3
(g29
S'Date'
p253
tp254
tp255
Rp256
(dp257
g10
g52
sg20
g21
((lp258
tp259
Rp260
sbag57
ag32
atp261
Rp262
sg253
g256
sbsS'Bin'
p263
g1
(g2
g3
(g29
g28
g263
tp264
tp265
Rp266
(dp267
g10
g32
sg20
g21
((lp268
tp269
Rp270
sbsS'Radix'
p271
g1
(g2
g3
(g29
g28
g271
tp272
tp273
Rp274
(dp275
g10
g32
sg20
g21
((lp276
tp277
Rp278
sbsS'Oct'
p279
g1
(g2
g3
(g29
g28
g279
tp280
tp281
Rp282
(dp283
g10
g32
sg20
g21
((lp284
tp285
Rp286
sbsS'Dec'
p287
g1
(g2
g3
(g29
g28
g287
tp288
tp289
Rp290
(dp291
g10
g32
sg20
g21
((lp292
tp293
Rp294
sbsS'Hex'
p295
g1
(g2
g3
(g29
g28
g295
tp296
tp297
Rp298
(dp299
g10
g32
sg20
g21
((lp300
tp301
Rp302
sbsg20
g21
((lp303
g37
ag274
ag290
ag1
(g2
g3
(g29
g28
S'Decimal'
p304
tp305
tp306
Rp307
(dp308
g10
g32
sg20
g21
((lp309
tp310
Rp311
sbag266
ag1
(g2
g3
(g29
g28
S'Float'
p312
tp313
tp314
Rp315
(dp316
g10
g32
sg20
g21
((lp317
tp318
Rp319
sbag282
ag298
atp320
Rp321
sg304
g307
sg312
g315
sbsS'Generic'
p322
g1
(g2
g3
(g322
tp323
tp324
Rp325
(dp326
g10
g26
sS'Deleted'
p327
g1
(g2
g3
(g322
g327
tp328
tp329
Rp330
(dp331
g10
g325
sg20
g21
((lp332
tp333
Rp334
sbsS'Subheading'
p335
g1
(g2
g3
(g322
g335
tp336
tp337
Rp338
(dp339
g10
g325
sg20
g21
((lp340
tp341
Rp342
sbsS'Heading'
p343
g1
(g2
g3
(g322
g343
tp344
tp345
Rp346
(dp347
g10
g325
sg20
g21
((lp348
tp349
Rp350
sbsS'Emph'
p351
g1
(g2
g3
(g322
g351
tp352
tp353
Rp354
(dp355
g10
g325
sg20
g21
((lp356
tp357
Rp358
sbsS'Prompt'
p359
g1
(g2
g3
(g322
g359
tp360
tp361
Rp362
(dp363
g10
g325
sg20
g21
((lp364
tp365
Rp366
sbsS'Inserted'
p367
g1
(g2
g3
(g322
g367
tp368
tp369
Rp370
(dp371
g10
g325
sg20
g21
((lp372
tp373
Rp374
sbsS'Strong'
p375
g1
(g2
g3
(g322
g375
tp376
tp377
Rp378
(dp379
g10
g325
sg20
g21
((lp380
tp381
Rp382
sbsS'Error'
p383
g1
(g2
g3
(g322
g383
tp384
tp385
Rp386
(dp387
g10
g325
sg20
g21
((lp388
tp389
Rp390
sbsS'Traceback'
p391
g1
(g2
g3
(g322
g391
tp392
tp393
Rp394
(dp395
g10
g325
sg20
g21
((lp396
tp397
Rp398
sbsg20
g21
((lp399
g346
ag338
ag1
(g2
g3
(g322
S'Output'
p400
tp401
tp402
Rp403
(dp404
g10
g325
sg20
g21
((lp405
tp406
Rp407
sbag378
ag354
ag386
ag394
ag370
ag362
ag330
atp408
Rp409
sg400
g403
sbsS'Operator'
p410
g1
(g2
g3
(g410
tp411
tp412
Rp413
(dp414
g10
g26
sS'DBS'
p415
g1
(g2
g3
(g410
g415
tp416
tp417
Rp418
(dp419
g10
g413
sg20
g21
((lp420
tp421
Rp422
sbsg20
g21
((lp423
g418
ag1
(g2
g3
(g410
S'Word'
p424
tp425
tp426
Rp427
(dp428
g10
g413
sg20
g21
((lp429
tp430
Rp431
sbatp432
Rp433
sg424
g427
sbsg86
g89
sg186
g1
(g2
g3
(g186
tp434
tp435
Rp436
(dp437
S'Variable'
p438
g1
(g2
g3
(g186
g438
tp439
tp440
Rp441
(dp442
g10
g436
sS'Class'
p443
g1
(g2
g3
(g186
g438
g443
tp444
tp445
Rp446
(dp447
g10
g441
sg20
g21
((lp448
tp449
Rp450
sbsS'Anonymous'
p451
g1
(g2
g3
(g186
g438
g451
tp452
tp453
Rp454
(dp455
g10
g441
sg20
g21
((lp456
tp457
Rp458
sbsS'Instance'
p459
g1
(g2
g3
(g186
g438
g459
tp460
tp461
Rp462
(dp463
g10
g441
sg20
g21
((lp464
tp465
Rp466
sbsS'Global'
p467
g1
(g2
g3
(g186
g438
g467
tp468
tp469
Rp470
(dp471
g10
g441
sg20
g21
((lp472
tp473
Rp474
sbsg20
g21
((lp475
g454
ag462
ag1
(g2
g3
(g186
g438
S'Magic'
p476
tp477
tp478
Rp479
(dp480
g10
g441
sg20
g21
((lp481
tp482
Rp483
sbag470
ag446
atp484
Rp485
sg476
g479
sbsg410
g1
(g2
g3
(g186
g410
tp486
tp487
Rp488
(dp489
g10
g436
sg20
g21
((lp490
tp491
Rp492
sbsS'Decorator'
p493
g1
(g2
g3
(g186
g493
tp494
tp495
Rp496
(dp497
g10
g436
sg20
g21
((lp498
tp499
Rp500
sbsS'Entity'
p501
g1
(g2
g3
(g186
g501
tp502
tp503
Rp504
(dp505
g10
g436
sg415
g1
(g2
g3
(g186
g501
g415
tp506
tp507
Rp508
(dp509
g10
g504
sg20
g21
((lp510
tp511
Rp512
sbsg20
g21
((lp513
g508
atp514
Rp515
sbsg114
g1
(g2
g3
(g186
g114
tp516
tp517
Rp518
(dp519
g10
g436
sg20
g21
((lp520
tp521
Rp522
sbsS'Property'
p523
g1
(g2
g3
(g186
g523
tp524
tp525
Rp526
(dp527
g10
g436
sg20
g21
((lp528
tp529
Rp530
sbsS'Pseudo'
p531
g1
(g2
g3
(g186
g531
tp532
tp533
Rp534
(dp535
g10
g436
sg20
g21
((lp536
tp537
Rp538
sbsS'Type'
p539
g1
(g2
g3
(g186
g539
tp540
tp541
Rp542
(dp543
g10
g436
sg20
g21
((lp544
tp545
Rp546
sbsS'Classes'
p547
g1
(g2
g3
(g186
g547
tp548
tp549
Rp550
(dp551
g10
g436
sg20
g21
((lp552
tp553
Rp554
sbsS'Tag'
p555
g1
(g2
g3
(g186
g555
tp556
tp557
Rp558
(dp559
g10
g436
sg20
g21
((lp560
tp561
Rp562
sbsS'Constant'
p563
g1
(g2
g3
(g186
g563
tp564
tp565
Rp566
(dp567
g10
g436
sg20
g21
((lp568
tp569
Rp570
sbsS'Function'
p571
g1
(g2
g3
(g186
g571
tp572
tp573
Rp574
(dp575
g10
g436
sg20
g21
((lp576
g1
(g2
g3
(g186
g571
g476
tp577
tp578
Rp579
(dp580
g10
g574
sg20
g21
((lp581
tp582
Rp583
sbatp584
Rp585
sg476
g579
sbsS'Blubb'
p586
g1
(g2
g3
(g186
g586
tp587
tp588
Rp589
(dp590
g10
g436
sg20
g21
((lp591
tp592
Rp593
sbsS'Label'
p594
g1
(g2
g3
(g186
g594
tp595
tp596
Rp597
(dp598
g10
g436
sg20
g21
((lp599
tp600
Rp601
sbsS'Field'
p602
g1
(g2
g3
(g186
g602
tp603
tp604
Rp605
(dp606
g10
g436
sg20
g21
((lp607
tp608
Rp609
sbsS'Exception'
p610
g1
(g2
g3
(g186
g610
tp611
tp612
Rp613
(dp614
g10
g436
sg20
g21
((lp615
tp616
Rp617
sbsS'Namespace'
p618
g1
(g2
g3
(g186
g618
tp619
tp620
Rp621
(dp622
g10
g436
sg20
g21
((lp623
tp624
Rp625
sbsg20
g21
((lp626
g496
ag589
ag534
ag504
ag441
ag613
ag526
ag558
ag574
ag550
ag1
(g2
g3
(g186
g443
tp627
tp628
Rp629
(dp630
g10
g436
sg415
g1
(g2
g3
(g186
g443
g415
tp631
tp632
Rp633
(dp634
g10
g629
sg20
g21
((lp635
tp636
Rp637
sbsg20
g21
((lp638
g1
(g2
g3
(g186
g443
S'Start'
p639
tp640
tp641
Rp642
(dp643
g10
g629
sg20
g21
((lp644
tp645
Rp646
sbag633
atp647
Rp648
sg639
g642
sbag1
(g2
g3
(g186
g70
tp649
tp650
Rp651
(dp652
g10
g436
sS'Member'
p653
g1
(g2
g3
(g186
g70
g653
tp654
tp655
Rp656
(dp657
g10
g651
sg20
g21
((lp658
tp659
Rp660
sbsg20
g21
((lp661
g656
atp662
Rp663
sbag597
ag488
ag621
ag1
(g2
g3
(g186
S'Attribute'
p664
tp665
tp666
Rp667
(dp668
g10
g436
sg438
g1
(g2
g3
(g186
g664
g438
tp669
tp670
Rp671
(dp672
g10
g667
sg20
g21
((lp673
tp674
Rp675
sbsg20
g21
((lp676
g671
atp677
Rp678
sbag566
ag1
(g2
g3
(g186
S'Builtin'
p679
tp680
tp681
Rp682
(dp683
g10
g436
sg539
g1
(g2
g3
(g186
g679
g539
tp684
tp685
Rp686
(dp687
g10
g682
sg20
g21
((lp688
tp689
Rp690
sbsg20
g21
((lp691
g1
(g2
g3
(g186
g679
g531
tp692
tp693
Rp694
(dp695
g10
g682
sg20
g21
((lp696
tp697
Rp698
sbag686
atp699
Rp700
sg531
g694
sbag605
ag542
ag518
atp701
Rp702
sg10
g26
sg443
g629
sg679
g682
sg664
g667
sg70
g651
sbsS'Punctuation'
p703
g1
(g2
g3
(g703
tp704
tp705
Rp706
(dp707
g10
g26
sg20
g21
((lp708
g1
(g2
g3
(g703
S'Indicator'
p709
tp710
tp711
Rp712
(dp713
g10
g706
sg20
g21
((lp714
tp715
Rp716
sbatp717
Rp718
sg709
g712
sbsg4
g13
sg29
g52
sg70
g1
(g2
g3
(g70
tp719
tp720
Rp721
(dp722
g10
g26
sg20
g21
((lp723
tp724
Rp725
sbsg383
g1
(g2
g3
(g383
tp726
tp727
Rp728
(dp729
g10
g26
sg20
g21
((lp730
tp731
Rp732
sbsS'Token'
p733
g26
sg210
g1
(g2
g3
(g210
tp734
tp735
Rp736
(dp737
g10
g26
sg20
g21
((lp738
tp739
Rp740
sbsg20
g21
((lp741
g436
ag721
ag1
(g2
g3
(S'Keyword'
p742
tp743
tp744
Rp745
(dp746
g10
g26
sg539
g1
(g2
g3
(g742
g539
tp747
tp748
Rp749
(dp750
g10
g745
sg20
g21
((lp751
tp752
Rp753
sbsS'Control'
p754
g1
(g2
g3
(g742
g754
tp755
tp756
Rp757
(dp758
g10
g745
sg20
g21
((lp759
tp760
Rp761
sbsg563
g1
(g2
g3
(g742
g563
tp762
tp763
Rp764
(dp765
g10
g745
sg20
g21
((lp766
tp767
Rp768
sbsg618
g1
(g2
g3
(g742
g618
tp769
tp770
Rp771
(dp772
g10
g745
sg20
g21
((lp773
tp774
Rp775
sbsS'PreProc'
p776
g1
(g2
g3
(g742
g776
tp777
tp778
Rp779
(dp780
g10
g745
sg20
g21
((lp781
tp782
Rp783
sbsg531
g1
(g2
g3
(g742
g531
tp784
tp785
Rp786
(dp787
g10
g745
sg20
g21
((lp788
tp789
Rp790
sbsS'Reserved'
p791
g1
(g2
g3
(g742
g791
tp792
tp793
Rp794
(dp795
g10
g745
sg20
g21
((lp796
tp797
Rp798
sbsg20
g21
((lp799
g771
ag1
(g2
g3
(g742
g424
tp800
tp801
Rp802
(dp803
g10
g745
sg20
g21
((lp804
tp805
Rp806
sbag757
ag1
(g2
g3
(g742
S'Declaration'
p807
tp808
tp809
Rp810
(dp811
g10
g745
sg20
g21
((lp812
tp813
Rp814
sbag1
(g2
g3
(g742
g742
tp815
tp816
Rp817
(dp818
g10
g745
sg20
g21
((lp819
tp820
Rp821
sbag786
ag764
ag749
ag794
ag779
atp822
Rp823
sg742
g817
sg807
g810
sg424
g802
sbag325
ag1
(g2
g3
(S'Text'
p824
tp825
tp826
Rp827
(dp828
S'Beer'
p829
g1
(g2
g3
(g824
g829
tp830
tp831
Rp832
(dp833
g10
g827
sg20
g21
((lp834
tp835
Rp836
sbsS'Whitespace'
p837
g1
(g2
g3
(g824
g837
tp838
tp839
Rp840
(dp841
g10
g827
sg20
g21
((lp842
tp843
Rp844
sbsg10
g26
sS'Root'
p845
g1
(g2
g3
(g824
g845
tp846
tp847
Rp848
(dp849
g10
g827
sg20
g21
((lp850
tp851
Rp852
sbsg114
g1
(g2
g3
(g824
g114
tp853
tp854
Rp855
(dp856
g10
g827
sg20
g21
((lp857
tp858
Rp859
sbsg703
g1
(g2
g3
(g824
g703
tp860
tp861
Rp862
(dp863
g10
g827
sg20
g21
((lp864
tp865
Rp866
sbsg20
g21
((lp867
g848
ag855
ag862
ag840
ag832
ag1
(g2
g3
(g824
S'Rag'
p868
tp869
tp870
Rp871
(dp872
g10
g827
sg20
g21
((lp873
tp874
Rp875
sbatp876
Rp877
sg868
g871
sbag413
ag736
ag706
ag13
ag728
ag52
atp878
Rp879
sg742
g745
sg824
g827
sbsS'Special'
p880
g1
(g2
g3
(g4
g880
tp881
tp882
Rp883
(dp884
g10
g13
sg20
g21
((lp885
tp886
Rp887
sbsS'Hashbang'
p888
g1
(g2
g3
(g4
g888
tp889
tp890
Rp891
(dp892
g10
g13
sg20
g21
((lp893
tp894
Rp895
sbsS'Preproc'
p896
g1
(g2
g3
(g4
g896
tp897
tp898
Rp899
(dp900
g10
g13
sg20
g21
((lp901
tp902
Rp903
sbsg227
g1
(g2
g3
(g4
g227
tp904
tp905
Rp906
(dp907
g10
g13
sg20
g21
((lp908
tp909
Rp910
sbsS'Directive'
p911
g1
(g2
g3
(g4
g911
tp912
tp913
Rp914
(dp915
g10
g13
sg20
g21
((lp916
tp917
Rp918
sbsg219
g1
(g2
g3
(g4
g219
tp919
tp920
Rp921
(dp922
g10
g13
sg20
g21
((lp923
tp924
Rp925
sbsS'Singleline'
p926
g1
(g2
g3
(g4
g926
tp927
tp928
Rp929
(dp930
g10
g13
sg20
g21
((lp931
tp932
Rp933
sbsg5
g8
sg20
g21
((lp934
g921
ag914
ag891
ag18
ag929
ag899
ag8
ag906
ag1
(g2
g3
(g4
S'PreprocFile'
p935
tp936
tp937
Rp938
(dp939
g10
g13
sg20
g21
((lp940
tp941
Rp942
sbag1
(g2
g3
(g4
S'SingleLine'
p943
tp944
tp945
Rp946
(dp947
g10
g13
sg20
g21
((lp948
tp949
Rp950
sbag883
atp951
Rp952
sg935
g938
sg943
g946
sbsg20
g21
((lp953
tp954
Rp955
sbV=head1 NAME \u000a\u000aperl5db.pl - the perl debugger\u000a\u000a=head1 SYNOPSIS\u000a\u000a    perl -d  your_Perl_script\u000a\u000a=head1 DESCRIPTION\u000a\u000aAfter this routine is over, we don't have user code executing in the debugger's\u000acontext, so we can use C<my> freely.\u000a\u000a=cut
p956
tp957
a(g827
V\u000a\u000a
p958
tp959
a(g906
V############################################## Begin lexical danger zone
p960
tp961
a(g827
V\u000a\u000a
p962
tp963
a(g906
V# 'my' variables used here could leak into (that is, be visible in)
p964
tp965
a(g827
V\u000a
p966
tp967
a(g906
V# the context that the code being evaluated is executing in. This means that
p968
tp969
a(g827
V\u000a
p970
tp971
a(g906
V# the code could modify the debugger's variables.
p972
tp973
a(g827
V\u000a
p974
tp975
a(g906
V#
p976
tp977
a(g827
V\u000a
p978
tp979
a(g906
V# Fiddling with the debugger's context could be Bad. We insulate things as
p980
tp981
a(g827
V\u000a
p982
tp983
a(g906
V# much as we can.
p984
tp985
a(g827
V\u000a\u000a
p986
tp987
a(g745
Vsub
p988
tp989
a(g827
V 
p990
tp991
a(g574
Veval
p992
tp993
a(g827
g990
tp994
a(g706
V{
p995
tp996
a(g827
V\u000a\u000a    
p997
tp998
a(g906
V# 'my' would make it visible from user code
p999
tp1000
a(g827
V\u000a    
p1001
tp1002
a(g906
V#    but so does local! --tchrist
p1003
tp1004
a(g827
V\u000a    
p1005
tp1006
a(g906
V# Remember: this localizes @DB::res, not @main::res.
p1007
tp1008
a(g827
V\u000a    
p1009
tp1010
a(g682
Vlocal
p1011
tp1012
a(g827
g990
tp1013
a(g441
V@
p1014
tp1015
a(g441
Vres
p1016
tp1017
a(g706
V;
p1018
tp1019
a(g827
V\u000a    
p1020
tp1021
a(g706
g995
tp1022
a(g827
V\u000a\u000a        
p1023
tp1024
a(g906
V# Try to keep the user code from messing  with us. Save these so that
p1025
tp1026
a(g827
V\u000a        
p1027
tp1028
a(g906
V# even if the eval'ed code changes them, we can put them back again.
p1029
tp1030
a(g827
V\u000a        
p1031
tp1032
a(g906
V# Needed because the user could refer directly to the debugger's
p1033
tp1034
a(g827
V\u000a        
p1035
tp1036
a(g906
V# package globals (and any 'my' variables in this containing scope)
p1037
tp1038
a(g827
V\u000a        
p1039
tp1040
a(g906
V# inside the eval(), and we want to try to stay safe.
p1041
tp1042
a(g827
V\u000a        
p1043
tp1044
a(g682
Vlocal
p1045
tp1046
a(g827
g990
tp1047
a(g441
V$
p1048
tp1049
a(g441
Votrace
p1050
tp1051
a(g827
V  
p1052
tp1053
a(g413
V=
p1054
tp1055
a(g827
g990
tp1056
a(g441
g1048
tp1057
a(g441
Vtrace
p1058
tp1059
a(g706
g1018
tp1060
a(g827
V\u000a        
p1061
tp1062
a(g682
Vlocal
p1063
tp1064
a(g827
g990
tp1065
a(g441
g1048
tp1066
a(g441
Vosingle
p1067
tp1068
a(g827
g990
tp1069
a(g413
g1054
tp1070
a(g827
g990
tp1071
a(g441
g1048
tp1072
a(g441
Vsingle
p1073
tp1074
a(g706
g1018
tp1075
a(g827
V\u000a        
p1076
tp1077
a(g682
Vlocal
p1078
tp1079
a(g827
g990
tp1080
a(g441
g1048
tp1081
a(g441
Vod
p1082
tp1083
a(g827
V      
p1084
tp1085
a(g413
g1054
tp1086
a(g827
g990
tp1087
a(g470
V$^D
p1088
tp1089
a(g706
g1018
tp1090
a(g827
V\u000a\u000a        
p1091
tp1092
a(g906
V# Untaint the incoming eval() argument.
p1093
tp1094
a(g827
V\u000a        
p1095
tp1096
a(g706
g995
tp1097
a(g827
g990
tp1098
a(g706
V(
p1099
tp1100
a(g441
g1048
tp1101
a(g441
Vevalarg
p1102
tp1103
a(g706
V)
p1104
tp1105
a(g827
g990
tp1106
a(g413
g1054
tp1107
a(g827
g990
tp1108
a(g441
g1048
tp1109
a(g441
Vevalarg
p1110
tp1111
a(g827
g990
tp1112
a(g413
V=~
p1113
tp1114
a(g197
V /(.*)/s
p1115
tp1116
a(g706
g1018
tp1117
a(g827
g990
tp1118
a(g706
V}
p1119
tp1120
a(g827
V\u000a\u000a        
p1121
tp1122
a(g906
V# $usercontext built in DB::DB near the comment
p1123
tp1124
a(g827
V\u000a        
p1125
tp1126
a(g906
V# "set up the context for DB::eval ..."
p1127
tp1128
a(g827
V\u000a        
p1129
tp1130
a(g906
V# Evaluate and save any results.
p1131
tp1132
a(g827
V\u000a        
p1133
tp1134
a(g441
g1014
tp1135
a(g441
Vres
p1136
tp1137
a(g827
g990
tp1138
a(g413
g1054
tp1139
a(g827
g990
tp1140
a(g682
Veval
p1141
tp1142
a(g827
g990
tp1143
a(g89
V"$usercontext $evalarg;\u005cn"
p1144
tp1145
a(g706
g1018
tp1146
a(g827
V  
p1147
tp1148
a(g906
V# '\u005cn' for nice recursive debug
p1149
tp1150
a(g827
V\u000a\u000a        
p1151
tp1152
a(g906
V# Restore those old values.
p1153
tp1154
a(g827
V\u000a        
p1155
tp1156
a(g441
g1048
tp1157
a(g441
Vtrace
p1158
tp1159
a(g827
V  
p1160
tp1161
a(g413
g1054
tp1162
a(g827
g990
tp1163
a(g441
g1048
tp1164
a(g441
Votrace
p1165
tp1166
a(g706
g1018
tp1167
a(g827
V\u000a        
p1168
tp1169
a(g441
g1048
tp1170
a(g441
Vsingle
p1171
tp1172
a(g827
g990
tp1173
a(g413
g1054
tp1174
a(g827
g990
tp1175
a(g441
g1048
tp1176
a(g441
Vosingle
p1177
tp1178
a(g706
g1018
tp1179
a(g827
V\u000a        
p1180
tp1181
a(g470
V$^D
p1182
tp1183
a(g827
V     
p1184
tp1185
a(g413
g1054
tp1186
a(g827
g990
tp1187
a(g441
g1048
tp1188
a(g441
Vod
p1189
tp1190
a(g706
g1018
tp1191
a(g827
V\u000a    
p1192
tp1193
a(g706
g1119
tp1194
a(g827
V\u000a\u000a    
p1195
tp1196
a(g906
V# Save the current value of $@, and preserve it in the debugger's copy
p1197
tp1198
a(g827
V\u000a    
p1199
tp1200
a(g906
V# of the saved precious globals.
p1201
tp1202
a(g827
V\u000a    
p1203
tp1204
a(g745
Vmy
p1205
tp1206
a(g827
g990
tp1207
a(g441
g1048
tp1208
a(g441
Vat
p1209
tp1210
a(g827
g990
tp1211
a(g413
g1054
tp1212
a(g827
g990
tp1213
a(g470
V$@
p1214
tp1215
a(g706
g1018
tp1216
a(g827
V\u000a\u000a    
p1217
tp1218
a(g906
V# Since we're only saving $@, we only have to localize the array element
p1219
tp1220
a(g827
V\u000a    
p1221
tp1222
a(g906
V# that it will be stored in.
p1223
tp1224
a(g827
V\u000a    
p1225
tp1226
a(g682
Vlocal
p1227
tp1228
a(g827
g990
tp1229
a(g441
g1048
tp1230
a(g441
Vsaved
p1231
tp1232
a(g706
V[
p1233
tp1234
a(g37
V0
p1235
tp1236
a(g706
V]
p1237
tp1238
a(g706
g1018
tp1239
a(g827
V    
p1240
tp1241
a(g906
V# Preserve the old value of $@
p1242
tp1243
a(g827
V\u000a    
p1244
tp1245
a(g682
Veval
p1246
tp1247
a(g827
g990
tp1248
a(g706
g995
tp1249
a(g827
g990
tp1250
a(g413
V&
p1251
tp1252
a(g436
V
p1253
tp1254
a(g621
VDB::
p1255
tp1256
a(g436
g1253
tp1257
a(g436
Vsave
p1258
tp1259
a(g827
g990
tp1260
a(g706
g1119
tp1261
a(g706
g1018
tp1262
a(g827
V\u000a\u000a    
p1263
tp1264
a(g906
V# Now see whether we need to report an error back to the user.
p1265
tp1266
a(g827
V\u000a    
p1267
tp1268
a(g745
Vif
p1269
tp1270
a(g827
g990
tp1271
a(g706
g1099
tp1272
a(g441
g1048
tp1273
a(g441
Vat
p1274
tp1275
a(g706
g1104
tp1276
a(g827
g990
tp1277
a(g706
g995
tp1278
a(g827
V\u000a        
p1279
tp1280
a(g682
Vlocal
p1281
tp1282
a(g827
g990
tp1283
a(g470
V$\u005c
p1284
tp1285
a(g827
g990
tp1286
a(g413
g1054
tp1287
a(g827
g990
tp1288
a(g89
V''
p1289
tp1290
a(g706
g1018
tp1291
a(g827
V\u000a        
p1292
tp1293
a(g745
Vprint
p1294
tp1295
a(g827
g990
tp1296
a(g441
g1048
tp1297
a(g441
VOUT
p1298
tp1299
a(g827
g990
tp1300
a(g441
g1048
tp1301
a(g441
Vat
p1302
tp1303
a(g706
g1018
tp1304
a(g827
V\u000a    
p1305
tp1306
a(g706
g1119
tp1307
a(g827
V\u000a\u000a    
p1308
tp1309
a(g906
V# Display as required by the caller. $onetimeDump and $onetimedumpDepth
p1310
tp1311
a(g827
V\u000a    
p1312
tp1313
a(g906
V# are package globals.
p1314
tp1315
a(g827
V\u000a    
p1316
tp1317
a(g745
Velsif
p1318
tp1319
a(g827
g990
tp1320
a(g706
g1099
tp1321
a(g441
g1048
tp1322
a(g441
VonetimeDump
p1323
tp1324
a(g706
g1104
tp1325
a(g827
g990
tp1326
a(g706
g995
tp1327
a(g827
V\u000a        
p1328
tp1329
a(g745
Vif
p1330
tp1331
a(g827
g990
tp1332
a(g706
g1099
tp1333
a(g827
g990
tp1334
a(g441
g1048
tp1335
a(g441
VonetimeDump
p1336
tp1337
a(g827
g990
tp1338
a(g427
Veq
p1339
tp1340
a(g827
g990
tp1341
a(g89
V'dump'
p1342
tp1343
a(g827
g990
tp1344
a(g706
g1104
tp1345
a(g827
g990
tp1346
a(g706
g995
tp1347
a(g827
V\u000a            
p1348
tp1349
a(g682
Vlocal
p1350
tp1351
a(g827
g990
tp1352
a(g441
g1048
tp1353
a(g441
Voption
p1354
tp1355
a(g706
g995
tp1356
a(g436
g1253
tp1357
a(g436
VdumpDepth
p1358
tp1359
a(g706
g1119
tp1360
a(g827
g990
tp1361
a(g413
g1054
tp1362
a(g827
g990
tp1363
a(g441
g1048
tp1364
a(g441
VonetimedumpDepth
p1365
tp1366
a(g827
V\u000a              
p1367
tp1368
a(g745
Vif
p1369
tp1370
a(g827
g990
tp1371
a(g682
Vdefined
p1372
tp1373
a(g827
g990
tp1374
a(g441
g1048
tp1375
a(g441
VonetimedumpDepth
p1376
tp1377
a(g706
g1018
tp1378
a(g827
V\u000a            
p1379
tp1380
a(g436
g1253
tp1381
a(g436
Vdumpit
p1382
tp1383
a(g706
g1099
tp1384
a(g827
g990
tp1385
a(g441
g1048
tp1386
a(g441
VOUT
p1387
tp1388
a(g706
V,
p1389
tp1390
a(g827
g990
tp1391
a(g413
V\u005c
p1392
tp1393
a(g441
g1014
tp1394
a(g441
Vres
p1395
tp1396
a(g827
g990
tp1397
a(g706
g1104
tp1398
a(g706
g1018
tp1399
a(g827
V\u000a        
p1400
tp1401
a(g706
g1119
tp1402
a(g827
V\u000a        
p1403
tp1404
a(g745
Velsif
p1405
tp1406
a(g827
g990
tp1407
a(g706
g1099
tp1408
a(g827
g990
tp1409
a(g441
g1048
tp1410
a(g441
VonetimeDump
p1411
tp1412
a(g827
g990
tp1413
a(g427
Veq
p1414
tp1415
a(g827
g990
tp1416
a(g89
V'methods'
p1417
tp1418
a(g827
g990
tp1419
a(g706
g1104
tp1420
a(g827
g990
tp1421
a(g706
g995
tp1422
a(g827
V\u000a            
p1423
tp1424
a(g436
g1253
tp1425
a(g436
Vmethods
p1426
tp1427
a(g706
g1099
tp1428
a(g827
g990
tp1429
a(g441
g1048
tp1430
a(g441
Vres
p1431
tp1432
a(g706
g1233
tp1433
a(g37
g1235
tp1434
a(g706
g1237
tp1435
a(g827
g990
tp1436
a(g706
g1104
tp1437
a(g706
g1018
tp1438
a(g827
V\u000a        
p1439
tp1440
a(g706
g1119
tp1441
a(g827
V\u000a    
p1442
tp1443
a(g706
g1119
tp1444
a(g827
g990
tp1445
a(g906
V## end elsif ($onetimeDump)
p1446
tp1447
a(g827
V\u000a    
p1448
tp1449
a(g441
g1014
tp1450
a(g441
Vres
p1451
tp1452
a(g706
g1018
tp1453
a(g827
V\u000a
p1454
tp1455
a(g706
g1119
tp1456
a(g827
g990
tp1457
a(g906
V## end sub eval
p1458
tp1459
a(g827
V\u000a\u000a
p1460
tp1461
a(g906
V############################################## End lexical danger zone
p1462
tp1463
a(g827
V\u000a\u000a
p1464
tp1465
a(g906
V# After this point it is safe to introduce lexicals.
p1466
tp1467
a(g827
V\u000a
p1468
tp1469
a(g906
V# The code being debugged will be executing in its own context, and
p1470
tp1471
a(g827
V\u000a
p1472
tp1473
a(g906
V# can't see the inside of the debugger.
p1474
tp1475
a(g827
V\u000a
p1476
tp1477
a(g906
g976
tp1478
a(g827
V\u000a
p1479
tp1480
a(g906
V# However, one should not overdo it: leave as much control from outside as
p1481
tp1482
a(g827
V\u000a
p1483
tp1484
a(g906
V# possible. If you make something a lexical, it's not going to be addressable
p1485
tp1486
a(g827
V\u000a
p1487
tp1488
a(g906
V# from outside the debugger even if you know its name.
p1489
tp1490
a(g827
V\u000a\u000a
p1491
tp1492
a(g906
V# This file is automatically included if you do perl -d.
p1493
tp1494
a(g827
V\u000a
p1495
tp1496
a(g906
V# It's probably not useful to include this yourself.
p1497
tp1498
a(g827
V\u000a
p1499
tp1500
a(g906
g976
tp1501
a(g827
V\u000a
p1502
tp1503
a(g906
V# Before venturing further into these twisty passages, it is
p1504
tp1505
a(g827
V\u000a
p1506
tp1507
a(g906
V# wise to read the perldebguts man page or risk the ire of dragons.
p1508
tp1509
a(g827
V\u000a
p1510
tp1511
a(g906
g976
tp1512
a(g827
V\u000a
p1513
tp1514
a(g906
V# (It should be noted that perldebguts will tell you a lot about
p1515
tp1516
a(g827
V\u000a
p1517
tp1518
a(g906
V# the underlying mechanics of how the debugger interfaces into the
p1519
tp1520
a(g827
V\u000a
p1521
tp1522
a(g906
V# Perl interpreter, but not a lot about the debugger itself. The new
p1523
tp1524
a(g827
V\u000a
p1525
tp1526
a(g906
V# comments in this code try to address this problem.)
p1527
tp1528
a(g827
V\u000a\u000a
p1529
tp1530
a(g906
V# Note that no subroutine call is possible until &DB::sub is defined
p1531
tp1532
a(g827
V\u000a
p1533
tp1534
a(g906
V# (for subroutines defined outside of the package DB). In fact the same is
p1535
tp1536
a(g827
V\u000a
p1537
tp1538
a(g906
V# true if $deep is not defined.
p1539
tp1540
a(g827
V\u000a\u000a
p1541
tp1542
a(g906
V# Enhanced by ilya@math.ohio-state.edu (Ilya Zakharevich)
p1543
tp1544
a(g827
V\u000a\u000a
p1545
tp1546
a(g906
V# modified Perl debugger, to be run from Emacs in perldb-mode
p1547
tp1548
a(g827
V\u000a
p1549
tp1550
a(g906
V# Ray Lischner (uunet!mntgfx!lisch) as of 5 Nov 1990
p1551
tp1552
a(g827
V\u000a
p1553
tp1554
a(g906
V# Johan Vromans -- upgrade to 4.0 pl 10
p1555
tp1556
a(g827
V\u000a
p1557
tp1558
a(g906
V# Ilya Zakharevich -- patches after 5.001 (and some before ;-)
p1559
tp1560
a(g827
V\u000a\u000a
p1561
tp1562
a(g906
V# (We have made efforts to  clarify the comments in the change log
p1563
tp1564
a(g827
V\u000a
p1565
tp1566
a(g906
V# in other places; some of them may seem somewhat obscure as they
p1567
tp1568
a(g827
V\u000a
p1569
tp1570
a(g906
V# were originally written, and explaining them away from the code
p1571
tp1572
a(g827
V\u000a
p1573
tp1574
a(g906
V# in question seems conterproductive.. -JM)
p1575
tp1576
a(g827
V\u000a\u000a
p1577
tp1578
a(g8
V=head1 DEBUGGER INITIALIZATION\u000a\u000aThe debugger starts up in phases.\u000a\u000a=head2 BASIC SETUP\u000a\u000aFirst, it initializes the environment it wants to run in: turning off\u000awarnings during its own compilation, defining variables which it will need\u000ato avoid warnings later, setting itself up to not exit when the program\u000aterminates, and defaulting to printing return values for the C<r> command.\u000a\u000a=cut
p1579
tp1580
a(g827
V\u000a\u000a
p1581
tp1582
a(g906
V# Needed for the statement after exec():
p1583
tp1584
a(g827
V\u000a
p1585
tp1586
a(g906
g976
tp1587
a(g827
V\u000a
p1588
tp1589
a(g906
V# This BEGIN block is simply used to switch off warnings during debugger
p1590
tp1591
a(g827
V\u000a
p1592
tp1593
a(g906
V# compiliation. Probably it would be better practice to fix the warnings,
p1594
tp1595
a(g827
V\u000a
p1596
tp1597
a(g906
V# but this is how it's done at the moment.
p1598
tp1599
a(g827
V\u000a\u000a
p1600
tp1601
a(g745
VBEGIN
p1602
tp1603
a(g827
g990
tp1604
a(g706
g995
tp1605
a(g827
V\u000a    
p1606
tp1607
a(g441
g1048
tp1608
a(g441
Vini_warn
p1609
tp1610
a(g827
g990
tp1611
a(g413
g1054
tp1612
a(g827
g990
tp1613
a(g470
V$^W
p1614
tp1615
a(g706
g1018
tp1616
a(g827
V\u000a    
p1617
tp1618
a(g470
V$^W
p1619
tp1620
a(g827
V       
p1621
tp1622
a(g413
g1054
tp1623
a(g827
g990
tp1624
a(g37
g1235
tp1625
a(g706
g1018
tp1626
a(g827
V\u000a
p1627
tp1628
a(g706
g1119
tp1629
a(g827
V    
p1630
tp1631
a(g906
V# Switch compilation warnings off until another BEGIN.
p1632
tp1633
a(g827
V\u000a\u000a
p1634
tp1635
a(g906
V# test if assertions are supported and actived:
p1636
tp1637
a(g827
V\u000a
p1638
tp1639
a(g745
VBEGIN
p1640
tp1641
a(g827
g990
tp1642
a(g706
g995
tp1643
a(g827
V\u000a    
p1644
tp1645
a(g441
g1048
tp1646
a(g441
Vini_assertion
p1647
tp1648
a(g827
g990
tp1649
a(g413
g1054
tp1650
a(g827
g990
tp1651
a(g682
Veval
p1652
tp1653
a(g827
g990
tp1654
a(g89
V"sub asserting_test : assertion {1}; 1"
p1655
tp1656
a(g706
g1018
tp1657
a(g827
V\u000a\u000a    
p1658
tp1659
a(g906
V# $ini_assertion = undef => assertions unsupported,
p1660
tp1661
a(g827
V\u000a    
p1662
tp1663
a(g906
V#        "       = 1     => assertions supported
p1664
tp1665
a(g827
V\u000a    
p1666
tp1667
a(g906
V# print "\u005c$ini_assertion=$ini_assertion\u005cn";
p1668
tp1669
a(g827
V\u000a
p1670
tp1671
a(g706
g1119
tp1672
a(g827
V\u000a\u000a
p1673
tp1674
a(g682
Vlocal
p1675
tp1676
a(g827
g990
tp1677
a(g706
g1099
tp1678
a(g470
V$^W
p1679
tp1680
a(g706
g1104
tp1681
a(g827
g990
tp1682
a(g413
g1054
tp1683
a(g827
g990
tp1684
a(g37
g1235
tp1685
a(g706
g1018
tp1686
a(g827
V    
p1687
tp1688
a(g906
V# Switch run-time warnings off during init.
p1689
tp1690
a(g827
V\u000a\u000a
p1691
tp1692
a(g8
V=head2 THREADS SUPPORT\u000a\u000aIf we are running under a threaded Perl, we require threads and threads::shared\u000aif the environment variable C<PERL5DB_THREADED> is set, to enable proper\u000athreaded debugger control.  C<-dt> can also be used to set this.\u000a\u000aEach new thread will be announced and the debugger prompt will always inform\u000ayou of each new thread created.  It will also indicate the thread id in which\u000awe are currently running within the prompt like this:\u000a\u000a	[tid] DB<$i>\u000a\u000aWhere C<[tid]> is an integer thread id and C<$i> is the familiar debugger\u000acommand prompt.  The prompt will show: C<[0]> when running under threads, but\u000anot actually in a thread.  C<[tid]> is consistent with C<gdb> usage.\u000a\u000aWhile running under threads, when you set or delete a breakpoint (etc.), this\u000awill apply to all threads, not just the currently running one.  When you are \u000ain a currently executing thread, you will stay there until it completes.  With\u000athe current implementation it is not currently possible to hop from one thread\u000ato another.\u000a\u000aThe C<e> and C<E> commands are currently fairly minimal - see C<h e> and C<h E>.\u000a\u000aNote that threading support was built into the debugger as of Perl version\u000aC<5.8.6> and debugger version C<1.2.8>.\u000a\u000a=cut
p1693
tp1694
a(g827
V\u000a\u000a
p1695
tp1696
a(g745
VBEGIN
p1697
tp1698
a(g827
g990
tp1699
a(g706
g995
tp1700
a(g827
V\u000a  
p1701
tp1702
a(g906
V# ensure we can share our non-threaded variables or no-op
p1703
tp1704
a(g827
V\u000a  
p1705
tp1706
a(g745
Vif
p1707
tp1708
a(g827
g990
tp1709
a(g706
g1099
tp1710
a(g441
g1048
tp1711
a(g441
VENV
p1712
tp1713
a(g706
g995
tp1714
a(g436
g1253
tp1715
a(g436
VPERL5DB_THREADED
p1716
tp1717
a(g706
g1119
tp1718
a(g706
g1104
tp1719
a(g827
g990
tp1720
a(g706
g995
tp1721
a(g827
V\u000a	
p1722
tp1723
a(g745
Vrequire
p1724
tp1725
a(g827
g990
tp1726
a(g621
Vthreads
p1727
tp1728
a(g706
g1018
tp1729
a(g827
V\u000a	
p1730
tp1731
a(g745
Vrequire
p1732
tp1733
a(g827
g990
tp1734
a(g621
Vthreads::shared
p1735
tp1736
a(g706
g1018
tp1737
a(g827
V\u000a	
p1738
tp1739
a(g682
Vimport
p1740
tp1741
a(g827
g990
tp1742
a(g436
g1253
tp1743
a(g621
Vthreads::
p1744
tp1745
a(g436
g1253
tp1746
a(g436
Vshared
p1747
tp1748
a(g827
g990
tp1749
a(g237
Vqw(
p1750
tp1751
a(g237
Vshare
p1752
tp1753
a(g237
g1104
tp1754
a(g706
g1018
tp1755
a(g827
V\u000a	
p1756
tp1757
a(g441
g1048
tp1758
a(g441
VDBGR
p1759
tp1760
a(g706
g1018
tp1761
a(g827
V\u000a	
p1762
tp1763
a(g436
g1253
tp1764
a(g436
Vshare
p1765
tp1766
a(g706
g1099
tp1767
a(g413
V\u005c
p1768
tp1769
a(g441
g1048
tp1770
a(g441
VDBGR
p1771
tp1772
a(g706
g1104
tp1773
a(g706
g1018
tp1774
a(g827
V\u000a	
p1775
tp1776
a(g436
g1253
tp1777
a(g436
Vlock
p1778
tp1779
a(g706
g1099
tp1780
a(g441
g1048
tp1781
a(g441
VDBGR
p1782
tp1783
a(g706
g1104
tp1784
a(g706
g1018
tp1785
a(g827
V\u000a	
p1786
tp1787
a(g745
Vprint
p1788
tp1789
a(g827
g990
tp1790
a(g89
V"Threads support enabled\u005cn"
p1791
tp1792
a(g706
g1018
tp1793
a(g827
V\u000a  
p1794
tp1795
a(g706
g1119
tp1796
a(g827
g990
tp1797
a(g745
Velse
p1798
tp1799
a(g827
g990
tp1800
a(g706
g995
tp1801
a(g827
V\u000a	
p1802
tp1803
a(g413
V*
p1804
tp1805
a(g436
g1253
tp1806
a(g436
Vlock
p1807
tp1808
a(g827
V  
p1809
tp1810
a(g413
g1054
tp1811
a(g827
g990
tp1812
a(g436
g1253
tp1813
a(g436
Vsub
p1814
tp1815
a(g706
g1099
tp1816
a(g413
g1804
tp1817
a(g706
g1104
tp1818
a(g827
g990
tp1819
a(g706
g995
tp1820
a(g706
g1119
tp1821
a(g706
g1018
tp1822
a(g827
V\u000a	
p1823
tp1824
a(g413
g1804
tp1825
a(g436
g1253
tp1826
a(g436
Vshare
p1827
tp1828
a(g827
g990
tp1829
a(g413
g1054
tp1830
a(g827
g990
tp1831
a(g436
g1253
tp1832
a(g436
Vsub
p1833
tp1834
a(g706
g1099
tp1835
a(g413
g1804
tp1836
a(g706
g1104
tp1837
a(g827
g990
tp1838
a(g706
g995
tp1839
a(g706
g1119
tp1840
a(g706
g1018
tp1841
a(g827
V\u000a  
p1842
tp1843
a(g706
g1119
tp1844
a(g827
V\u000a
p1845
tp1846
a(g706
g1119
tp1847
a(g827
V\u000a\u000a
p1848
tp1849
a(g906
V# This would probably be better done with "use vars", but that wasn't around
p1850
tp1851
a(g827
V\u000a
p1852
tp1853
a(g906
V# when this code was originally written. (Neither was "use strict".) And on
p1854
tp1855
a(g827
V\u000a
p1856
tp1857
a(g906
V# the principle of not fiddling with something that was working, this was
p1858
tp1859
a(g827
V\u000a
p1860
tp1861
a(g906
V# left alone.
p1862
tp1863
a(g827
V\u000a
p1864
tp1865
a(g682
Vwarn
p1866
tp1867
a(g706
g1099
tp1868
a(g827
V               
p1869
tp1870
a(g906
V# Do not ;-)
p1871
tp1872
a(g827
V\u000a    
p1873
tp1874
a(g906
V# These variables control the execution of 'dumpvar.pl'.
p1875
tp1876
a(g827
V\u000a    
p1877
tp1878
a(g441
g1048
tp1879
a(g621
Vdumpvar::
p1880
tp1881
a(g441
VhashDepth
p1882
tp1883
a(g706
g1389
tp1884
a(g827
V\u000a    
p1885
tp1886
a(g441
g1048
tp1887
a(g621
Vdumpvar::
p1888
tp1889
a(g441
VarrayDepth
p1890
tp1891
a(g706
g1389
tp1892
a(g827
V\u000a    
p1893
tp1894
a(g441
g1048
tp1895
a(g621
Vdumpvar::
p1896
tp1897
a(g441
VdumpDBFiles
p1898
tp1899
a(g706
g1389
tp1900
a(g827
V\u000a    
p1901
tp1902
a(g441
g1048
tp1903
a(g621
Vdumpvar::
p1904
tp1905
a(g441
VdumpPackages
p1906
tp1907
a(g706
g1389
tp1908
a(g827
V\u000a    
p1909
tp1910
a(g441
g1048
tp1911
a(g621
Vdumpvar::
p1912
tp1913
a(g441
VquoteHighBit
p1914
tp1915
a(g706
g1389
tp1916
a(g827
V\u000a    
p1917
tp1918
a(g441
g1048
tp1919
a(g621
Vdumpvar::
p1920
tp1921
a(g441
VprintUndef
p1922
tp1923
a(g706
g1389
tp1924
a(g827
V\u000a    
p1925
tp1926
a(g441
g1048
tp1927
a(g621
Vdumpvar::
p1928
tp1929
a(g441
VglobPrint
p1930
tp1931
a(g706
g1389
tp1932
a(g827
V\u000a    
p1933
tp1934
a(g441
g1048
tp1935
a(g621
Vdumpvar::
p1936
tp1937
a(g441
VusageOnly
p1938
tp1939
a(g706
g1389
tp1940
a(g827
V\u000a\u000a    
p1941
tp1942
a(g906
V# used to save @ARGV and extract any debugger-related flags.
p1943
tp1944
a(g827
V\u000a    
p1945
tp1946
a(g441
g1014
tp1947
a(g441
VARGS
p1948
tp1949
a(g706
g1389
tp1950
a(g827
V\u000a\u000a    
p1951
tp1952
a(g906
V# used to control die() reporting in diesignal()
p1953
tp1954
a(g827
V\u000a    
p1955
tp1956
a(g441
g1048
tp1957
a(g621
VCarp::
p1958
tp1959
a(g441
VCarpLevel
p1960
tp1961
a(g706
g1389
tp1962
a(g827
V\u000a\u000a    
p1963
tp1964
a(g906
V# used to prevent multiple entries to diesignal()
p1965
tp1966
a(g827
V\u000a    
p1967
tp1968
a(g906
V# (if for instance diesignal() itself dies)
p1969
tp1970
a(g827
V\u000a    
p1971
tp1972
a(g441
g1048
tp1973
a(g441
Vpanic
p1974
tp1975
a(g706
g1389
tp1976
a(g827
V\u000a\u000a    
p1977
tp1978
a(g906
V# used to prevent the debugger from running nonstop
p1979
tp1980
a(g827
V\u000a    
p1981
tp1982
a(g906
V# after a restart
p1983
tp1984
a(g827
V\u000a    
p1985
tp1986
a(g441
g1048
tp1987
a(g441
Vsecond_time
p1988
tp1989
a(g706
g1389
tp1990
a(g827
V\u000a  
p1991
tp1992
a(g706
g1104
tp1993
a(g827
V\u000a  
p1994
tp1995
a(g745
Vif
p1996
tp1997
a(g827
g990
tp1998
a(g37
g1235
tp1999
a(g706
g1018
tp2000
a(g827
V\u000a\u000a
p2001
tp2002
a(g745
Vforeach
p2003
tp2004
a(g827
g990
tp2005
a(g745
Vmy
p2006
tp2007
a(g827
g990
tp2008
a(g441
g1048
tp2009
a(g441
Vk
p2010
tp2011
a(g827
g990
tp2012
a(g706
g1099
tp2013
a(g682
Vkeys
p2014
tp2015
a(g827
g990
tp2016
a(g706
g1099
tp2017
a(g441
V%
p2018
tp2019
a(g441
VINC
p2020
tp2021
a(g706
g1104
tp2022
a(g706
g1104
tp2023
a(g827
g990
tp2024
a(g706
g995
tp2025
a(g827
V\u000a	
p2026
tp2027
a(g413
g1251
tp2028
a(g436
g1253
tp2029
a(g436
Vshare
p2030
tp2031
a(g706
g1099
tp2032
a(g413
V\u005c
p2033
tp2034
a(g441
g1048
tp2035
a(g621
Vmain::
p2036
tp2037
a(g706
g995
tp2038
a(g89
V'_<'
p2039
tp2040
a(g413
V.
p2041
tp2042
a(g441
g1048
tp2043
a(g441
Vfilename
p2044
tp2045
a(g706
g1119
tp2046
a(g706
g1104
tp2047
a(g706
g1018
tp2048
a(g827
V\u000a
p2049
tp2050
a(g706
g1119
tp2051
a(g706
g1018
tp2052
a(g827
V\u000a\u000a
p2053
tp2054
a(g906
V# Command-line + PERLLIB:
p2055
tp2056
a(g827
V\u000a
p2057
tp2058
a(g906
V# Save the contents of @INC before they are modified elsewhere.
p2059
tp2060
a(g827
V\u000a
p2061
tp2062
a(g441
g1014
tp2063
a(g441
Vini_INC
p2064
tp2065
a(g827
g990
tp2066
a(g413
g1054
tp2067
a(g827
g990
tp2068
a(g441
g1014
tp2069
a(g441
VINC
p2070
tp2071
a(g706
g1018
tp2072
a(g827
V\u000a\u000a
p2073
tp2074
a(g906
V# This was an attempt to clear out the previous values of various
p2075
tp2076
a(g827
V\u000a
p2077
tp2078
a(g906
V# trapped errors. Apparently it didn't help. XXX More info needed!
p2079
tp2080
a(g827
V\u000a
p2081
tp2082
a(g906
V# $prevwarn = $prevdie = $prevbus = $prevsegv = ''; # Does not help?!
p2083
tp2084
a(g827
V\u000a\u000a
p2085
tp2086
a(g906
V# We set these variables to safe values. We don't want to blindly turn
p2087
tp2088
a(g827
V\u000a
p2089
tp2090
a(g906
V# off warnings, because other packages may still want them.
p2091
tp2092
a(g827
V\u000a
p2093
tp2094
a(g441
g1048
tp2095
a(g441
Vtrace
p2096
tp2097
a(g827
g990
tp2098
a(g413
g1054
tp2099
a(g827
g990
tp2100
a(g441
g1048
tp2101
a(g441
Vsignal
p2102
tp2103
a(g827
g990
tp2104
a(g413
g1054
tp2105
a(g827
g990
tp2106
a(g441
g1048
tp2107
a(g441
Vsingle
p2108
tp2109
a(g827
g990
tp2110
a(g413
g1054
tp2111
a(g827
g990
tp2112
a(g37
g1235
tp2113
a(g706
g1018
tp2114
a(g827
V    
p2115
tp2116
a(g906
V# Uninitialized warning suppression
p2117
tp2118
a(g827
V\u000a                                   
p2119
tp2120
a(g906
V# (local $^W cannot help - other packages!).
p2121
tp2122
a(g827
V\u000a\u000a
p2123
tp2124
a(g906
V# Default to not exiting when program finishes; print the return
p2125
tp2126
a(g827
V\u000a
p2127
tp2128
a(g906
V# value when the 'r' command is used to return from a subroutine.
p2129
tp2130
a(g827
V\u000a
p2131
tp2132
a(g441
g1048
tp2133
a(g441
Vinhibit_exit
p2134
tp2135
a(g827
g990
tp2136
a(g413
g1054
tp2137
a(g827
g990
tp2138
a(g441
g1048
tp2139
a(g441
Voption
p2140
tp2141
a(g706
g995
tp2142
a(g436
g1253
tp2143
a(g436
VPrintRet
p2144
tp2145
a(g706
g1119
tp2146
a(g827
g990
tp2147
a(g413
g1054
tp2148
a(g827
g990
tp2149
a(g37
V1
p2150
tp2151
a(g706
g1018
tp2152
a(g827
V\u000a\u000a
p2153
tp2154
a(g8
V=head1 OPTION PROCESSING\u000a\u000aThe debugger's options are actually spread out over the debugger itself and \u000aC<dumpvar.pl>; some of these are variables to be set, while others are \u000asubs to be called with a value. To try to make this a little easier to\u000amanage, the debugger uses a few data structures to define what options\u000aare legal and how they are to be processed.\u000a\u000aFirst, the C<@options> array defines the I<names> of all the options that\u000aare to be accepted.\u000a\u000a=cut
p2155
tp2156
a(g827
V\u000a\u000a
p2157
tp2158
a(g441
g1014
tp2159
a(g441
Voptions
p2160
tp2161
a(g827
g990
tp2162
a(g413
g1054
tp2163
a(g827
g990
tp2164
a(g237
Vqw(
p2165
tp2166
a(g237
V\u000a  CommandSet\u000a  hashDepth    arrayDepth    dumpDepth\u000a  DumpDBFiles  DumpPackages  DumpReused\u000a  compactDump  veryCompact   quote\u000a  HighBit      undefPrint    globPrint\u000a  PrintRet     UsageOnly     frame\u000a  AutoTrace    TTY           noTTY\u000a  ReadLine     NonStop       LineInfo\u000a  maxTraceLen  recallCommand ShellBang\u000a  pager        tkRunning     ornaments\u000a  signalLevel  warnLevel     dieLevel\u000a  inhibit_exit ImmediateStop bareStringify\u000a  CreateTTY    RemotePort    windowSize\u000a  DollarCaretP OnlyAssertions WarnAssertions\u000a
p2167
tp2168
a(g237
g1104
tp2169
a(g706
g1018
tp2170
a(g827
V\u000a\u000a
p2171
tp2172
a(g441
g1014
tp2173
a(g441
VRememberOnROptions
p2174
tp2175
a(g827
g990
tp2176
a(g413
g1054
tp2177
a(g827
g990
tp2178
a(g237
Vqw(
p2179
tp2180
a(g237
VDollarCaretP OnlyAssertions
p2181
tp2182
a(g237
g1104
tp2183
a(g706
g1018
tp2184
a(g827
V\u000a\u000a
p2185
tp2186
a(g8
V=pod\u000a\u000aSecond, C<optionVars> lists the variables that each option uses to save its\u000astate.\u000a\u000a=cut
p2187
tp2188
a(g827
V\u000a\u000a
p2189
tp2190
a(g441
g2018
tp2191
a(g441
VoptionVars
p2192
tp2193
a(g827
g990
tp2194
a(g413
g1054
tp2195
a(g827
g990
tp2196
a(g706
g1099
tp2197
a(g827
V\u000a    
p2198
tp2199
a(g436
g1253
tp2200
a(g436
VhashDepth
p2201
tp2202
a(g827
V     
p2203
tp2204
a(g413
g1054
tp2205
a(g413
V>
p2206
tp2207
a(g827
g990
tp2208
a(g413
V\u005c
p2209
tp2210
a(g441
g1048
tp2211
a(g621
Vdumpvar::
p2212
tp2213
a(g441
VhashDepth
p2214
tp2215
a(g706
g1389
tp2216
a(g827
V\u000a    
p2217
tp2218
a(g436
g1253
tp2219
a(g436
VarrayDepth
p2220
tp2221
a(g827
V    
p2222
tp2223
a(g413
g1054
tp2224
a(g413
g2206
tp2225
a(g827
g990
tp2226
a(g413
V\u005c
p2227
tp2228
a(g441
g1048
tp2229
a(g621
Vdumpvar::
p2230
tp2231
a(g441
VarrayDepth
p2232
tp2233
a(g706
g1389
tp2234
a(g827
V\u000a    
p2235
tp2236
a(g436
g1253
tp2237
a(g436
VCommandSet
p2238
tp2239
a(g827
V    
p2240
tp2241
a(g413
g1054
tp2242
a(g413
g2206
tp2243
a(g827
g990
tp2244
a(g413
V\u005c
p2245
tp2246
a(g441
g1048
tp2247
a(g441
VCommandSet
p2248
tp2249
a(g706
g1389
tp2250
a(g827
V\u000a    
p2251
tp2252
a(g436
g1253
tp2253
a(g436
VDumpDBFiles
p2254
tp2255
a(g827
V   
p2256
tp2257
a(g413
g1054
tp2258
a(g413
g2206
tp2259
a(g827
g990
tp2260
a(g413
V\u005c
p2261
tp2262
a(g441
g1048
tp2263
a(g621
Vdumpvar::
p2264
tp2265
a(g441
VdumpDBFiles
p2266
tp2267
a(g706
g1389
tp2268
a(g827
V\u000a    
p2269
tp2270
a(g436
g1253
tp2271
a(g436
VDumpPackages
p2272
tp2273
a(g827
V  
p2274
tp2275
a(g413
g1054
tp2276
a(g413
g2206
tp2277
a(g827
g990
tp2278
a(g413
V\u005c
p2279
tp2280
a(g441
g1048
tp2281
a(g621
Vdumpvar::
p2282
tp2283
a(g441
VdumpPackages
p2284
tp2285
a(g706
g1389
tp2286
a(g827
V\u000a    
p2287
tp2288
a(g436
g1253
tp2289
a(g436
VDumpReused
p2290
tp2291
a(g827
V    
p2292
tp2293
a(g413
g1054
tp2294
a(g413
g2206
tp2295
a(g827
g990
tp2296
a(g413
V\u005c
p2297
tp2298
a(g441
g1048
tp2299
a(g621
Vdumpvar::
p2300
tp2301
a(g441
VdumpReused
p2302
tp2303
a(g706
g1389
tp2304
a(g827
V\u000a    
p2305
tp2306
a(g436
g1253
tp2307
a(g436
VHighBit
p2308
tp2309
a(g827
V       
p2310
tp2311
a(g413
g1054
tp2312
a(g413
g2206
tp2313
a(g827
g990
tp2314
a(g413
V\u005c
p2315
tp2316
a(g441
g1048
tp2317
a(g621
Vdumpvar::
p2318
tp2319
a(g441
VquoteHighBit
p2320
tp2321
a(g706
g1389
tp2322
a(g827
V\u000a    
p2323
tp2324
a(g436
g1253
tp2325
a(g436
VundefPrint
p2326
tp2327
a(g827
V    
p2328
tp2329
a(g413
g1054
tp2330
a(g413
g2206
tp2331
a(g827
g990
tp2332
a(g413
V\u005c
p2333
tp2334
a(g441
g1048
tp2335
a(g621
Vdumpvar::
p2336
tp2337
a(g441
VprintUndef
p2338
tp2339
a(g706
g1389
tp2340
a(g827
V\u000a    
p2341
tp2342
a(g436
g1253
tp2343
a(g436
VglobPrint
p2344
tp2345
a(g827
V     
p2346
tp2347
a(g413
g1054
tp2348
a(g413
g2206
tp2349
a(g827
g990
tp2350
a(g413
V\u005c
p2351
tp2352
a(g441
g1048
tp2353
a(g621
Vdumpvar::
p2354
tp2355
a(g441
VglobPrint
p2356
tp2357
a(g706
g1389
tp2358
a(g827
V\u000a    
p2359
tp2360
a(g436
g1253
tp2361
a(g436
VUsageOnly
p2362
tp2363
a(g827
V     
p2364
tp2365
a(g413
g1054
tp2366
a(g413
g2206
tp2367
a(g827
g990
tp2368
a(g413
V\u005c
p2369
tp2370
a(g441
g1048
tp2371
a(g621
Vdumpvar::
p2372
tp2373
a(g441
VusageOnly
p2374
tp2375
a(g706
g1389
tp2376
a(g827
V\u000a    
p2377
tp2378
a(g436
g1253
tp2379
a(g436
VCreateTTY
p2380
tp2381
a(g827
V     
p2382
tp2383
a(g413
g1054
tp2384
a(g413
g2206
tp2385
a(g827
g990
tp2386
a(g413
V\u005c
p2387
tp2388
a(g441
g1048
tp2389
a(g441
VCreateTTY
p2390
tp2391
a(g706
g1389
tp2392
a(g827
V\u000a    
p2393
tp2394
a(g436
g1253
tp2395
a(g436
VbareStringify
p2396
tp2397
a(g827
g990
tp2398
a(g413
g1054
tp2399
a(g413
g2206
tp2400
a(g827
g990
tp2401
a(g413
V\u005c
p2402
tp2403
a(g441
g1048
tp2404
a(g621
Vdumpvar::
p2405
tp2406
a(g441
VbareStringify
p2407
tp2408
a(g706
g1389
tp2409
a(g827
V\u000a    
p2410
tp2411
a(g436
g1253
tp2412
a(g436
Vframe
p2413
tp2414
a(g827
V         
p2415
tp2416
a(g413
g1054
tp2417
a(g413
g2206
tp2418
a(g827
g990
tp2419
a(g413
V\u005c
p2420
tp2421
a(g441
g1048
tp2422
a(g441
Vframe
p2423
tp2424
a(g706
g1389
tp2425
a(g827
V\u000a    
p2426
tp2427
a(g436
g1253
tp2428
a(g436
VAutoTrace
p2429
tp2430
a(g827
V     
p2431
tp2432
a(g413
g1054
tp2433
a(g413
g2206
tp2434
a(g827
g990
tp2435
a(g413
V\u005c
p2436
tp2437
a(g441
g1048
tp2438
a(g441
Vtrace
p2439
tp2440
a(g706
g1389
tp2441
a(g827
V\u000a    
p2442
tp2443
a(g436
g1253
tp2444
a(g436
Vinhibit_exit
p2445
tp2446
a(g827
V  
p2447
tp2448
a(g413
g1054
tp2449
a(g413
g2206
tp2450
a(g827
g990
tp2451
a(g413
V\u005c
p2452
tp2453
a(g441
g1048
tp2454
a(g441
Vinhibit_exit
p2455
tp2456
a(g706
g1389
tp2457
a(g827
V\u000a    
p2458
tp2459
a(g436
g1253
tp2460
a(g436
VmaxTraceLen
p2461
tp2462
a(g827
V   
p2463
tp2464
a(g413
g1054
tp2465
a(g413
g2206
tp2466
a(g827
g990
tp2467
a(g413
V\u005c
p2468
tp2469
a(g441
g1048
tp2470
a(g441
Vmaxtrace
p2471
tp2472
a(g706
g1389
tp2473
a(g827
V\u000a    
p2474
tp2475
a(g436
g1253
tp2476
a(g436
VImmediateStop
p2477
tp2478
a(g827
g990
tp2479
a(g413
g1054
tp2480
a(g413
g2206
tp2481
a(g827
g990
tp2482
a(g413
V\u005c
p2483
tp2484
a(g441
g1048
tp2485
a(g441
VImmediateStop
p2486
tp2487
a(g706
g1389
tp2488
a(g827
V\u000a    
p2489
tp2490
a(g436
g1253
tp2491
a(g436
VRemotePort
p2492
tp2493
a(g827
V    
p2494
tp2495
a(g413
g1054
tp2496
a(g413
g2206
tp2497
a(g827
g990
tp2498
a(g413
V\u005c
p2499
tp2500
a(g441
g1048
tp2501
a(g441
Vremoteport
p2502
tp2503
a(g706
g1389
tp2504
a(g827
V\u000a    
p2505
tp2506
a(g436
g1253
tp2507
a(g436
VwindowSize
p2508
tp2509
a(g827
V    
p2510
tp2511
a(g413
g1054
tp2512
a(g413
g2206
tp2513
a(g827
g990
tp2514
a(g413
V\u005c
p2515
tp2516
a(g441
g1048
tp2517
a(g441
Vwindow
p2518
tp2519
a(g706
g1389
tp2520
a(g827
V\u000a    
p2521
tp2522
a(g436
g1253
tp2523
a(g436
VWarnAssertions
p2524
tp2525
a(g827
g990
tp2526
a(g413
g1054
tp2527
a(g413
g2206
tp2528
a(g827
g990
tp2529
a(g413
V\u005c
p2530
tp2531
a(g441
g1048
tp2532
a(g441
Vwarnassertions
p2533
tp2534
a(g706
g1389
tp2535
a(g827
V\u000a
p2536
tp2537
a(g706
g1104
tp2538
a(g706
g1018
tp2539
a(g827
V\u000a\u000a
p2540
tp2541
a(g8
V=pod\u000a\u000aThird, C<%optionAction> defines the subroutine to be called to process each\u000aoption.\u000a\u000a=cut
p2542
tp2543
a(g827
V \u000a\u000a
p2544
tp2545
a(g441
g2018
tp2546
a(g441
VoptionAction
p2547
tp2548
a(g827
g990
tp2549
a(g413
g1054
tp2550
a(g827
g990
tp2551
a(g706
g1099
tp2552
a(g827
V\u000a    
p2553
tp2554
a(g436
g1253
tp2555
a(g436
VcompactDump
p2556
tp2557
a(g827
V   
p2558
tp2559
a(g413
g1054
tp2560
a(g413
g2206
tp2561
a(g827
g990
tp2562
a(g413
V\u005c
p2563
tp2564
a(g413
g1251
tp2565
a(g436
g1253
tp2566
a(g621
Vdumpvar::
p2567
tp2568
a(g436
g1253
tp2569
a(g436
VcompactDump
p2570
tp2571
a(g706
g1389
tp2572
a(g827
V\u000a    
p2573
tp2574
a(g436
g1253
tp2575
a(g436
VveryCompact
p2576
tp2577
a(g827
V   
p2578
tp2579
a(g413
g1054
tp2580
a(g413
g2206
tp2581
a(g827
g990
tp2582
a(g413
V\u005c
p2583
tp2584
a(g413
g1251
tp2585
a(g436
g1253
tp2586
a(g621
Vdumpvar::
p2587
tp2588
a(g436
g1253
tp2589
a(g436
VveryCompact
p2590
tp2591
a(g706
g1389
tp2592
a(g827
V\u000a    
p2593
tp2594
a(g436
g1253
tp2595
a(g436
Vquote
p2596
tp2597
a(g827
V         
p2598
tp2599
a(g413
g1054
tp2600
a(g413
g2206
tp2601
a(g827
g990
tp2602
a(g413
V\u005c
p2603
tp2604
a(g413
g1251
tp2605
a(g436
g1253
tp2606
a(g621
Vdumpvar::
p2607
tp2608
a(g436
g1253
tp2609
a(g436
Vquote
p2610
tp2611
a(g706
g1389
tp2612
a(g827
V\u000a    
p2613
tp2614
a(g436
g1253
tp2615
a(g436
VTTY
p2616
tp2617
a(g827
V           
p2618
tp2619
a(g413
g1054
tp2620
a(g413
g2206
tp2621
a(g827
g990
tp2622
a(g413
V\u005c
p2623
tp2624
a(g413
g1251
tp2625
a(g436
g1253
tp2626
a(g436
VTTY
p2627
tp2628
a(g706
g1389
tp2629
a(g827
V\u000a    
p2630
tp2631
a(g436
g1253
tp2632
a(g436
VnoTTY
p2633
tp2634
a(g827
V         
p2635
tp2636
a(g413
g1054
tp2637
a(g413
g2206
tp2638
a(g827
g990
tp2639
a(g413
V\u005c
p2640
tp2641
a(g413
g1251
tp2642
a(g436
g1253
tp2643
a(g436
VnoTTY
p2644
tp2645
a(g706
g1389
tp2646
a(g827
V\u000a    
p2647
tp2648
a(g436
g1253
tp2649
a(g436
VReadLine
p2650
tp2651
a(g827
V      
p2652
tp2653
a(g413
g1054
tp2654
a(g413
g2206
tp2655
a(g827
g990
tp2656
a(g413
V\u005c
p2657
tp2658
a(g413
g1251
tp2659
a(g436
g1253
tp2660
a(g436
VReadLine
p2661
tp2662
a(g706
g1389
tp2663
a(g827
V\u000a    
p2664
tp2665
a(g436
g1253
tp2666
a(g436
VNonStop
p2667
tp2668
a(g827
V       
p2669
tp2670
a(g413
g1054
tp2671
a(g413
g2206
tp2672
a(g827
g990
tp2673
a(g413
V\u005c
p2674
tp2675
a(g413
g1251
tp2676
a(g436
g1253
tp2677
a(g436
VNonStop
p2678
tp2679
a(g706
g1389
tp2680
a(g827
V\u000a    
p2681
tp2682
a(g436
g1253
tp2683
a(g436
VLineInfo
p2684
tp2685
a(g827
V      
p2686
tp2687
a(g413
g1054
tp2688
a(g413
g2206
tp2689
a(g827
g990
tp2690
a(g413
V\u005c
p2691
tp2692
a(g413
g1251
tp2693
a(g436
g1253
tp2694
a(g436
VLineInfo
p2695
tp2696
a(g706
g1389
tp2697
a(g827
V\u000a    
p2698
tp2699
a(g436
g1253
tp2700
a(g436
VrecallCommand
p2701
tp2702
a(g827
g990
tp2703
a(g413
g1054
tp2704
a(g413
g2206
tp2705
a(g827
g990
tp2706
a(g413
V\u005c
p2707
tp2708
a(g413
g1251
tp2709
a(g436
g1253
tp2710
a(g436
VrecallCommand
p2711
tp2712
a(g706
g1389
tp2713
a(g827
V\u000a    
p2714
tp2715
a(g436
g1253
tp2716
a(g436
VShellBang
p2717
tp2718
a(g827
V     
p2719
tp2720
a(g413
g1054
tp2721
a(g413
g2206
tp2722
a(g827
g990
tp2723
a(g413
V\u005c
p2724
tp2725
a(g413
g1251
tp2726
a(g436
g1253
tp2727
a(g436
VshellBang
p2728
tp2729
a(g706
g1389
tp2730
a(g827
V\u000a    
p2731
tp2732
a(g436
g1253
tp2733
a(g436
Vpager
p2734
tp2735
a(g827
V         
p2736
tp2737
a(g413
g1054
tp2738
a(g413
g2206
tp2739
a(g827
g990
tp2740
a(g413
V\u005c
p2741
tp2742
a(g413
g1251
tp2743
a(g436
g1253
tp2744
a(g436
Vpager
p2745
tp2746
a(g706
g1389
tp2747
a(g827
V\u000a    
p2748
tp2749
a(g436
g1253
tp2750
a(g436
VsignalLevel
p2751
tp2752
a(g827
V   
p2753
tp2754
a(g413
g1054
tp2755
a(g413
g2206
tp2756
a(g827
g990
tp2757
a(g413
V\u005c
p2758
tp2759
a(g413
g1251
tp2760
a(g436
g1253
tp2761
a(g436
VsignalLevel
p2762
tp2763
a(g706
g1389
tp2764
a(g827
V\u000a    
p2765
tp2766
a(g436
g1253
tp2767
a(g436
VwarnLevel
p2768
tp2769
a(g827
V     
p2770
tp2771
a(g413
g1054
tp2772
a(g413
g2206
tp2773
a(g827
g990
tp2774
a(g413
V\u005c
p2775
tp2776
a(g413
g1251
tp2777
a(g436
g1253
tp2778
a(g436
VwarnLevel
p2779
tp2780
a(g706
g1389
tp2781
a(g827
V\u000a    
p2782
tp2783
a(g436
g1253
tp2784
a(g436
VdieLevel
p2785
tp2786
a(g827
V      
p2787
tp2788
a(g413
g1054
tp2789
a(g413
g2206
tp2790
a(g827
g990
tp2791
a(g413
V\u005c
p2792
tp2793
a(g413
g1251
tp2794
a(g436
g1253
tp2795
a(g436
VdieLevel
p2796
tp2797
a(g706
g1389
tp2798
a(g827
V\u000a    
p2799
tp2800
a(g436
g1253
tp2801
a(g436
VtkRunning
p2802
tp2803
a(g827
V     
p2804
tp2805
a(g413
g1054
tp2806
a(g413
g2206
tp2807
a(g827
g990
tp2808
a(g413
V\u005c
p2809
tp2810
a(g413
g1251
tp2811
a(g436
g1253
tp2812
a(g436
VtkRunning
p2813
tp2814
a(g706
g1389
tp2815
a(g827
V\u000a    
p2816
tp2817
a(g436
g1253
tp2818
a(g436
Vornaments
p2819
tp2820
a(g827
V     
p2821
tp2822
a(g413
g1054
tp2823
a(g413
g2206
tp2824
a(g827
g990
tp2825
a(g413
V\u005c
p2826
tp2827
a(g413
g1251
tp2828
a(g436
g1253
tp2829
a(g436
Vornaments
p2830
tp2831
a(g706
g1389
tp2832
a(g827
V\u000a    
p2833
tp2834
a(g436
g1253
tp2835
a(g436
VRemotePort
p2836
tp2837
a(g827
V    
p2838
tp2839
a(g413
g1054
tp2840
a(g413
g2206
tp2841
a(g827
g990
tp2842
a(g413
V\u005c
p2843
tp2844
a(g413
g1251
tp2845
a(g436
g1253
tp2846
a(g436
VRemotePort
p2847
tp2848
a(g706
g1389
tp2849
a(g827
V\u000a    
p2850
tp2851
a(g436
g1253
tp2852
a(g436
VDollarCaretP
p2853
tp2854
a(g827
V  
p2855
tp2856
a(g413
g1054
tp2857
a(g413
g2206
tp2858
a(g827
g990
tp2859
a(g413
V\u005c
p2860
tp2861
a(g413
g1251
tp2862
a(g436
g1253
tp2863
a(g436
VDollarCaretP
p2864
tp2865
a(g706
g1389
tp2866
a(g827
V\u000a    
p2867
tp2868
a(g436
g1253
tp2869
a(g436
VOnlyAssertions
p2870
tp2871
a(g413
g1054
tp2872
a(g413
g2206
tp2873
a(g827
g990
tp2874
a(g413
V\u005c
p2875
tp2876
a(g413
g1251
tp2877
a(g436
g1253
tp2878
a(g436
VOnlyAssertions
p2879
tp2880
a(g706
g1389
tp2881
a(g827
V\u000a
p2882
tp2883
a(g706
g1104
tp2884
a(g706
g1018
tp2885
a(g827
V\u000a\u000a
p2886
tp2887
a(g8
V=pod\u000a\u000aLast, the C<%optionRequire> notes modules that must be C<require>d if an\u000aoption is used.\u000a\u000a=cut
p2888
tp2889
a(g827
V\u000a\u000a
p2890
tp2891
a(g906
V# Note that this list is not complete: several options not listed here
p2892
tp2893
a(g827
V\u000a
p2894
tp2895
a(g906
V# actually require that dumpvar.pl be loaded for them to work, but are
p2896
tp2897
a(g827
V\u000a
p2898
tp2899
a(g906
V# not in the table. A subsequent patch will correct this problem; for
p2900
tp2901
a(g827
V\u000a
p2902
tp2903
a(g906
V# the moment, we're just recommenting, and we are NOT going to change
p2904
tp2905
a(g827
V\u000a
p2906
tp2907
a(g906
V# function.
p2908
tp2909
a(g827
V\u000a
p2910
tp2911
a(g441
g2018
tp2912
a(g441
VoptionRequire
p2913
tp2914
a(g827
g990
tp2915
a(g413
g1054
tp2916
a(g827
g990
tp2917
a(g706
g1099
tp2918
a(g827
V\u000a    
p2919
tp2920
a(g436
g1253
tp2921
a(g436
VcompactDump
p2922
tp2923
a(g827
g990
tp2924
a(g413
g1054
tp2925
a(g413
g2206
tp2926
a(g827
g990
tp2927
a(g89
V'dumpvar.pl'
p2928
tp2929
a(g706
g1389
tp2930
a(g827
V\u000a    
p2931
tp2932
a(g436
g1253
tp2933
a(g436
VveryCompact
p2934
tp2935
a(g827
g990
tp2936
a(g413
g1054
tp2937
a(g413
g2206
tp2938
a(g827
g990
tp2939
a(g89
V'dumpvar.pl'
p2940
tp2941
a(g706
g1389
tp2942
a(g827
V\u000a    
p2943
tp2944
a(g436
g1253
tp2945
a(g436
Vquote
p2946
tp2947
a(g827
V       
p2948
tp2949
a(g413
g1054
tp2950
a(g413
g2206
tp2951
a(g827
g990
tp2952
a(g89
V'dumpvar.pl'
p2953
tp2954
a(g706
g1389
tp2955
a(g827
V\u000a
p2956
tp2957
a(g706
g1104
tp2958
a(g706
g1018
tp2959
a(g827
V\u000a\u000a
p2960
tp2961
a(g8
V=pod\u000a\u000aThere are a number of initialization-related variables which can be set\u000aby putting code to set them in a BEGIN block in the C<PERL5DB> environment\u000avariable. These are:\u000a\u000a=over 4\u000a\u000a=item C<$rl> - readline control XXX needs more explanation\u000a\u000a=item C<$warnLevel> - whether or not debugger takes over warning handling\u000a\u000a=item C<$dieLevel> - whether or not debugger takes over die handling\u000a\u000a=item C<$signalLevel> - whether or not debugger takes over signal handling\u000a\u000a=item C<$pre> - preprompt actions (array reference)\u000a\u000a=item C<$post> - postprompt actions (array reference)\u000a\u000a=item C<$pretype>\u000a\u000a=item C<$CreateTTY> - whether or not to create a new TTY for this debugger\u000a\u000a=item C<$CommandSet> - which command set to use (defaults to new, documented set)\u000a\u000a=back\u000a\u000a=cut
p2962
tp2963
a(g827
V\u000a\u000a
p2964
tp2965
a(g906
V# These guys may be defined in $ENV{PERL5DB} :
p2966
tp2967
a(g827
V\u000a
p2968
tp2969
a(g441
g1048
tp2970
a(g441
Vrl
p2971
tp2972
a(g827
V          
p2973
tp2974
a(g413
g1054
tp2975
a(g827
g990
tp2976
a(g37
g2150
tp2977
a(g827
V     
p2978
tp2979
a(g745
Vunless
p2980
tp2981
a(g827
g990
tp2982
a(g682
Vdefined
p2983
tp2984
a(g827
g990
tp2985
a(g441
g1048
tp2986
a(g441
Vrl
p2987
tp2988
a(g706
g1018
tp2989
a(g827
V\u000a
p2990
tp2991
a(g441
g1048
tp2992
a(g441
VwarnLevel
p2993
tp2994
a(g827
V   
p2995
tp2996
a(g413
g1054
tp2997
a(g827
g990
tp2998
a(g37
g2150
tp2999
a(g827
V     
p3000
tp3001
a(g745
Vunless
p3002
tp3003
a(g827
g990
tp3004
a(g682
Vdefined
p3005
tp3006
a(g827
g990
tp3007
a(g441
g1048
tp3008
a(g441
VwarnLevel
p3009
tp3010
a(g706
g1018
tp3011
a(g827
V\u000a
p3012
tp3013
a(g441
g1048
tp3014
a(g441
VdieLevel
p3015
tp3016
a(g827
V    
p3017
tp3018
a(g413
g1054
tp3019
a(g827
g990
tp3020
a(g37
g2150
tp3021
a(g827
V     
p3022
tp3023
a(g745
Vunless
p3024
tp3025
a(g827
g990
tp3026
a(g682
Vdefined
p3027
tp3028
a(g827
g990
tp3029
a(g441
g1048
tp3030
a(g441
VdieLevel
p3031
tp3032
a(g706
g1018
tp3033
a(g827
V\u000a
p3034
tp3035
a(g441
g1048
tp3036
a(g441
VsignalLevel
p3037
tp3038
a(g827
g990
tp3039
a(g413
g1054
tp3040
a(g827
g990
tp3041
a(g37
g2150
tp3042
a(g827
V     
p3043
tp3044
a(g745
Vunless
p3045
tp3046
a(g827
g990
tp3047
a(g682
Vdefined
p3048
tp3049
a(g827
g990
tp3050
a(g441
g1048
tp3051
a(g441
VsignalLevel
p3052
tp3053
a(g706
g1018
tp3054
a(g827
V\u000a
p3055
tp3056
a(g441
g1048
tp3057
a(g441
Vpre
p3058
tp3059
a(g827
V         
p3060
tp3061
a(g413
g1054
tp3062
a(g827
g990
tp3063
a(g413
V[]
p3064
tp3065
a(g827
V    
p3066
tp3067
a(g745
Vunless
p3068
tp3069
a(g827
g990
tp3070
a(g682
Vdefined
p3071
tp3072
a(g827
g990
tp3073
a(g441
g1048
tp3074
a(g441
Vpre
p3075
tp3076
a(g706
g1018
tp3077
a(g827
V\u000a
p3078
tp3079
a(g441
g1048
tp3080
a(g441
Vpost
p3081
tp3082
a(g827
V        
p3083
tp3084
a(g413
g1054
tp3085
a(g827
g990
tp3086
a(g413
V[]
p3087
tp3088
a(g827
V    
p3089
tp3090
a(g745
Vunless
p3091
tp3092
a(g827
g990
tp3093
a(g682
Vdefined
p3094
tp3095
a(g827
g990
tp3096
a(g441
g1048
tp3097
a(g441
Vpost
p3098
tp3099
a(g706
g1018
tp3100
a(g827
V\u000a
p3101
tp3102
a(g441
g1048
tp3103
a(g441
Vpretype
p3104
tp3105
a(g827
V     
p3106
tp3107
a(g413
g1054
tp3108
a(g827
g990
tp3109
a(g413
V[]
p3110
tp3111
a(g827
V    
p3112
tp3113
a(g745
Vunless
p3114
tp3115
a(g827
g990
tp3116
a(g682
Vdefined
p3117
tp3118
a(g827
g990
tp3119
a(g441
g1048
tp3120
a(g441
Vpretype
p3121
tp3122
a(g706
g1018
tp3123
a(g827
V\u000a
p3124
tp3125
a(g441
g1048
tp3126
a(g441
VCreateTTY
p3127
tp3128
a(g827
V   
p3129
tp3130
a(g413
g1054
tp3131
a(g827
g990
tp3132
a(g37
V3
p3133
tp3134
a(g827
V     
p3135
tp3136
a(g745
Vunless
p3137
tp3138
a(g827
g990
tp3139
a(g682
Vdefined
p3140
tp3141
a(g827
g990
tp3142
a(g441
g1048
tp3143
a(g441
VCreateTTY
p3144
tp3145
a(g706
g1018
tp3146
a(g827
V\u000a
p3147
tp3148
a(g441
g1048
tp3149
a(g441
VCommandSet
p3150
tp3151
a(g827
V  
p3152
tp3153
a(g413
g1054
tp3154
a(g827
g990
tp3155
a(g89
V'580'
p3156
tp3157
a(g827
g990
tp3158
a(g745
Vunless
p3159
tp3160
a(g827
g990
tp3161
a(g682
Vdefined
p3162
tp3163
a(g827
g990
tp3164
a(g441
g1048
tp3165
a(g441
VCommandSet
p3166
tp3167
a(g706
g1018
tp3168
a(g827
V\u000a\u000a
p3169
tp3170
a(g436
g1253
tp3171
a(g436
Vshare
p3172
tp3173
a(g706
g1099
tp3174
a(g441
g1048
tp3175
a(g441
Vrl
p3176
tp3177
a(g706
g1104
tp3178
a(g706
g1018
tp3179
a(g827
V\u000a
p3180
tp3181
a(g436
g1253
tp3182
a(g436
Vshare
p3183
tp3184
a(g706
g1099
tp3185
a(g441
g1048
tp3186
a(g441
VwarnLevel
p3187
tp3188
a(g706
g1104
tp3189
a(g706
g1018
tp3190
a(g827
V\u000a
p3191
tp3192
a(g436
g1253
tp3193
a(g436
Vshare
p3194
tp3195
a(g706
g1099
tp3196
a(g441
g1048
tp3197
a(g441
VdieLevel
p3198
tp3199
a(g706
g1104
tp3200
a(g706
g1018
tp3201
a(g827
V\u000a
p3202
tp3203
a(g436
g1253
tp3204
a(g436
Vshare
p3205
tp3206
a(g706
g1099
tp3207
a(g441
g1048
tp3208
a(g441
VsignalLevel
p3209
tp3210
a(g706
g1104
tp3211
a(g706
g1018
tp3212
a(g827
V\u000a
p3213
tp3214
a(g436
g1253
tp3215
a(g436
Vshare
p3216
tp3217
a(g706
g1099
tp3218
a(g441
g1048
tp3219
a(g441
Vpre
p3220
tp3221
a(g706
g1104
tp3222
a(g706
g1018
tp3223
a(g827
V\u000a
p3224
tp3225
a(g436
g1253
tp3226
a(g436
Vshare
p3227
tp3228
a(g706
g1099
tp3229
a(g441
g1048
tp3230
a(g441
Vpost
p3231
tp3232
a(g706
g1104
tp3233
a(g706
g1018
tp3234
a(g827
V\u000a
p3235
tp3236
a(g436
g1253
tp3237
a(g436
Vshare
p3238
tp3239
a(g706
g1099
tp3240
a(g441
g1048
tp3241
a(g441
Vpretype
p3242
tp3243
a(g706
g1104
tp3244
a(g706
g1018
tp3245
a(g827
V\u000a
p3246
tp3247
a(g436
g1253
tp3248
a(g436
Vshare
p3249
tp3250
a(g706
g1099
tp3251
a(g441
g1048
tp3252
a(g441
Vrl
p3253
tp3254
a(g706
g1104
tp3255
a(g706
g1018
tp3256
a(g827
V\u000a
p3257
tp3258
a(g436
g1253
tp3259
a(g436
Vshare
p3260
tp3261
a(g706
g1099
tp3262
a(g441
g1048
tp3263
a(g441
VCreateTTY
p3264
tp3265
a(g706
g1104
tp3266
a(g706
g1018
tp3267
a(g827
V\u000a
p3268
tp3269
a(g436
g1253
tp3270
a(g436
Vshare
p3271
tp3272
a(g706
g1099
tp3273
a(g441
g1048
tp3274
a(g441
VCommandSet
p3275
tp3276
a(g706
g1104
tp3277
a(g706
g1018
tp3278
a(g827
V\u000a\u000a
p3279
tp3280
a(g8
V=pod\u000a\u000aThe default C<die>, C<warn>, and C<signal> handlers are set up.\u000a\u000a=cut
p3281
tp3282
a(g827
V\u000a\u000a
p3283
tp3284
a(g436
g1253
tp3285
a(g436
VwarnLevel
p3286
tp3287
a(g706
g1099
tp3288
a(g441
g1048
tp3289
a(g441
VwarnLevel
p3290
tp3291
a(g706
g1104
tp3292
a(g706
g1018
tp3293
a(g827
V\u000a
p3294
tp3295
a(g436
g1253
tp3296
a(g436
VdieLevel
p3297
tp3298
a(g706
g1099
tp3299
a(g441
g1048
tp3300
a(g441
VdieLevel
p3301
tp3302
a(g706
g1104
tp3303
a(g706
g1018
tp3304
a(g827
V\u000a
p3305
tp3306
a(g436
g1253
tp3307
a(g436
VsignalLevel
p3308
tp3309
a(g706
g1099
tp3310
a(g441
g1048
tp3311
a(g441
VsignalLevel
p3312
tp3313
a(g706
g1104
tp3314
a(g706
g1018
tp3315
a(g827
V\u000a\u000a
p3316
tp3317
a(g8
V=pod\u000a\u000aThe pager to be used is needed next. We try to get it from the\u000aenvironment first.  if it's not defined there, we try to find it in\u000athe Perl C<Config.pm>.  If it's not there, we default to C<more>. We\u000athen call the C<pager()> function to save the pager name.\u000a\u000a=cut
p3318
tp3319
a(g827
V\u000a\u000a
p3320
tp3321
a(g906
V# This routine makes sure $pager is set up so that '|' can use it.
p3322
tp3323
a(g827
V\u000a
p3324
tp3325
a(g436
g1253
tp3326
a(g436
Vpager
p3327
tp3328
a(g706
g1099
tp3329
a(g827
V\u000a\u000a    
p3330
tp3331
a(g906
V# If PAGER is defined in the environment, use it.
p3332
tp3333
a(g827
V\u000a    
p3334
tp3335
a(g682
Vdefined
p3336
tp3337
a(g827
g990
tp3338
a(g441
g1048
tp3339
a(g441
VENV
p3340
tp3341
a(g706
g995
tp3342
a(g436
g1253
tp3343
a(g436
VPAGER
p3344
tp3345
a(g706
g1119
tp3346
a(g827
V\u000a    
p3347
tp3348
a(g706
V?
p3349
tp3350
a(g827
g990
tp3351
a(g441
g1048
tp3352
a(g441
VENV
p3353
tp3354
a(g706
g995
tp3355
a(g436
g1253
tp3356
a(g436
VPAGER
p3357
tp3358
a(g706
g1119
tp3359
a(g827
V\u000a\u000a      
p3360
tp3361
a(g906
V# If not, see if Config.pm defines it.
p3362
tp3363
a(g827
V\u000a    
p3364
tp3365
a(g706
V:
p3366
tp3367
a(g827
g990
tp3368
a(g682
Veval
p3369
tp3370
a(g827
g990
tp3371
a(g706
g995
tp3372
a(g827
g990
tp3373
a(g745
Vrequire
p3374
tp3375
a(g827
g990
tp3376
a(g621
VConfig
p3377
tp3378
a(g827
g990
tp3379
a(g706
g1119
tp3380
a(g827
V\u000a      
p3381
tp3382
a(g413
V&&
p3383
tp3384
a(g827
g990
tp3385
a(g682
Vdefined
p3386
tp3387
a(g827
g990
tp3388
a(g441
g1048
tp3389
a(g621
VConfig::
p3390
tp3391
a(g441
VConfig
p3392
tp3393
a(g706
g995
tp3394
a(g436
g1253
tp3395
a(g436
Vpager
p3396
tp3397
a(g706
g1119
tp3398
a(g827
V\u000a    
p3399
tp3400
a(g706
g3349
tp3401
a(g827
g990
tp3402
a(g441
g1048
tp3403
a(g621
VConfig::
p3404
tp3405
a(g441
VConfig
p3406
tp3407
a(g706
g995
tp3408
a(g436
g1253
tp3409
a(g436
Vpager
p3410
tp3411
a(g706
g1119
tp3412
a(g827
V\u000a\u000a      
p3413
tp3414
a(g906
V# If not, fall back to 'more'.
p3415
tp3416
a(g827
V\u000a    
p3417
tp3418
a(g706
g3366
tp3419
a(g827
g990
tp3420
a(g89
V'more'
p3421
tp3422
a(g827
V\u000a  
p3423
tp3424
a(g706
g1104
tp3425
a(g827
V\u000a  
p3426
tp3427
a(g745
Vunless
p3428
tp3429
a(g827
g990
tp3430
a(g682
Vdefined
p3431
tp3432
a(g827
g990
tp3433
a(g441
g1048
tp3434
a(g441
Vpager
p3435
tp3436
a(g706
g1018
tp3437
a(g827
V\u000a\u000a
p3438
tp3439
a(g8
V=pod\u000a\u000aWe set up the command to be used to access the man pages, the command\u000arecall character (C<!> unless otherwise defined) and the shell escape\u000acharacter (C<!> unless otherwise defined). Yes, these do conflict, and\u000aneither works in the debugger at the moment.\u000a\u000a=cut
p3440
tp3441
a(g827
V\u000a\u000a
p3442
tp3443
a(g436
g1253
tp3444
a(g436
Vsetman
p3445
tp3446
a(g706
g1099
tp3447
a(g706
g1104
tp3448
a(g706
g1018
tp3449
a(g827
V\u000a\u000a
p3450
tp3451
a(g906
V# Set up defaults for command recall and shell escape (note:
p3452
tp3453
a(g827
V\u000a
p3454
tp3455
a(g906
V# these currently don't work in linemode debugging).
p3456
tp3457
a(g827
V\u000a
p3458
tp3459
a(g413
g1251
tp3460
a(g436
g1253
tp3461
a(g436
VrecallCommand
p3462
tp3463
a(g706
g1099
tp3464
a(g89
V"!"
p3465
tp3466
a(g706
g1104
tp3467
a(g827
g990
tp3468
a(g745
Vunless
p3469
tp3470
a(g827
g990
tp3471
a(g682
Vdefined
p3472
tp3473
a(g827
g990
tp3474
a(g441
g1048
tp3475
a(g441
Vprc
p3476
tp3477
a(g706
g1018
tp3478
a(g827
V\u000a
p3479
tp3480
a(g413
g1251
tp3481
a(g436
g1253
tp3482
a(g436
VshellBang
p3483
tp3484
a(g706
g1099
tp3485
a(g89
V"!"
p3486
tp3487
a(g706
g1104
tp3488
a(g827
V     
p3489
tp3490
a(g745
Vunless
p3491
tp3492
a(g827
g990
tp3493
a(g682
Vdefined
p3494
tp3495
a(g827
g990
tp3496
a(g441
g1048
tp3497
a(g441
Vpsh
p3498
tp3499
a(g706
g1018
tp3500
a(g827
V\u000a\u000a
p3501
tp3502
a(g8
V=pod\u000a\u000aWe then set up the gigantic string containing the debugger help.\u000aWe also set the limit on the number of arguments we'll display during a\u000atrace.\u000a\u000a=cut
p3503
tp3504
a(g827
V\u000a\u000a
p3505
tp3506
a(g436
g1253
tp3507
a(g436
Vsethelp
p3508
tp3509
a(g706
g1099
tp3510
a(g706
g1104
tp3511
a(g706
g1018
tp3512
a(g827
V\u000a\u000a
p3513
tp3514
a(g906
V# If we didn't get a default for the length of eval/stack trace args,
p3515
tp3516
a(g827
V\u000a
p3517
tp3518
a(g906
V# set it here.
p3519
tp3520
a(g827
V\u000a
p3521
tp3522
a(g441
g1048
tp3523
a(g441
Vmaxtrace
p3524
tp3525
a(g827
g990
tp3526
a(g413
g1054
tp3527
a(g827
g990
tp3528
a(g37
V400
p3529
tp3530
a(g827
g990
tp3531
a(g745
Vunless
p3532
tp3533
a(g827
g990
tp3534
a(g682
Vdefined
p3535
tp3536
a(g827
g990
tp3537
a(g441
g1048
tp3538
a(g441
Vmaxtrace
p3539
tp3540
a(g706
g1018
tp3541
a(g827
V\u000a\u000a
p3542
tp3543
a(g8
V=head2 SETTING UP THE DEBUGGER GREETING\u000a\u000aThe debugger I<greeting> helps to inform the user how many debuggers are\u000arunning, and whether the current debugger is the primary or a child.\u000a\u000aIf we are the primary, we just hang onto our pid so we'll have it when\u000aor if we start a child debugger. If we are a child, we'll set things up\u000aso we'll have a unique greeting and so the parent will give us our own\u000aTTY later.\u000a\u000aWe save the current contents of the C<PERLDB_PIDS> environment variable\u000abecause we mess around with it. We'll also need to hang onto it because\u000awe'll need it if we restart.\u000a\u000aChild debuggers make a label out of the current PID structure recorded in\u000aPERLDB_PIDS plus the new PID. They also mark themselves as not having a TTY\u000ayet so the parent will give them one later via C<resetterm()>.\u000a\u000a=cut
p3544
tp3545
a(g827
V\u000a\u000a
p3546
tp3547
a(g906
V# Save the current contents of the environment; we're about to
p3548
tp3549
a(g827
V\u000a
p3550
tp3551
a(g906
V# much with it. We'll need this if we have to restart.
p3552
tp3553
a(g827
V\u000a
p3554
tp3555
a(g441
g1048
tp3556
a(g441
Vini_pids
p3557
tp3558
a(g827
g990
tp3559
a(g413
g1054
tp3560
a(g827
g990
tp3561
a(g441
g1048
tp3562
a(g441
VENV
p3563
tp3564
a(g706
g995
tp3565
a(g436
g1253
tp3566
a(g436
VPERLDB_PIDS
p3567
tp3568
a(g706
g1119
tp3569
a(g706
g1018
tp3570
a(g827
V\u000a\u000a
p3571
tp3572
a(g745
Vif
p3573
tp3574
a(g827
g990
tp3575
a(g706
g1099
tp3576
a(g827
g990
tp3577
a(g682
Vdefined
p3578
tp3579
a(g827
g990
tp3580
a(g441
g1048
tp3581
a(g441
VENV
p3582
tp3583
a(g706
g995
tp3584
a(g436
g1253
tp3585
a(g436
VPERLDB_PIDS
p3586
tp3587
a(g706
g1119
tp3588
a(g827
g990
tp3589
a(g706
g1104
tp3590
a(g827
g990
tp3591
a(g706
g995
tp3592
a(g827
V\u000a\u000a    
p3593
tp3594
a(g906
V# We're a child. Make us a label out of the current PID structure
p3595
tp3596
a(g827
V\u000a    
p3597
tp3598
a(g906
V# recorded in PERLDB_PIDS plus our (new) PID. Mark us as not having
p3599
tp3600
a(g827
V\u000a    
p3601
tp3602
a(g906
V# a term yet so the parent will give us one later via resetterm().
p3603
tp3604
a(g827
V\u000a    
p3605
tp3606
a(g441
g1048
tp3607
a(g441
Vpids
p3608
tp3609
a(g827
g990
tp3610
a(g413
g1054
tp3611
a(g827
g990
tp3612
a(g89
V"[$ENV{PERLDB_PIDS}]"
p3613
tp3614
a(g706
g1018
tp3615
a(g827
V\u000a    
p3616
tp3617
a(g441
g1048
tp3618
a(g441
VENV
p3619
tp3620
a(g706
g995
tp3621
a(g436
g1253
tp3622
a(g436
VPERLDB_PIDS
p3623
tp3624
a(g706
g1119
tp3625
a(g827
g990
tp3626
a(g413
g2041
tp3627
a(g413
g1054
tp3628
a(g827
g990
tp3629
a(g89
V"->$$"
p3630
tp3631
a(g706
g1018
tp3632
a(g827
V\u000a    
p3633
tp3634
a(g441
g1048
tp3635
a(g441
Vterm_pid
p3636
tp3637
a(g827
g990
tp3638
a(g413
g1054
tp3639
a(g827
g990
tp3640
a(g413
V-
p3641
tp3642
a(g37
g2150
tp3643
a(g706
g1018
tp3644
a(g827
V\u000a
p3645
tp3646
a(g706
g1119
tp3647
a(g827
g990
tp3648
a(g906
V## end if (defined $ENV{PERLDB_PIDS...
p3649
tp3650
a(g827
V\u000a
p3651
tp3652
a(g745
Velse
p3653
tp3654
a(g827
g990
tp3655
a(g706
g995
tp3656
a(g827
V\u000a\u000a    
p3657
tp3658
a(g906
V# We're the parent PID. Initialize PERLDB_PID in case we end up with a
p3659
tp3660
a(g827
V\u000a    
p3661
tp3662
a(g906
V# child debugger, and mark us as the parent, so we'll know to set up
p3663
tp3664
a(g827
V\u000a    
p3665
tp3666
a(g906
V# more TTY's is we have to.
p3667
tp3668
a(g827
V\u000a    
p3669
tp3670
a(g441
g1048
tp3671
a(g441
VENV
p3672
tp3673
a(g706
g995
tp3674
a(g436
g1253
tp3675
a(g436
VPERLDB_PIDS
p3676
tp3677
a(g706
g1119
tp3678
a(g827
g990
tp3679
a(g413
g1054
tp3680
a(g827
g990
tp3681
a(g89
V"$$"
p3682
tp3683
a(g706
g1018
tp3684
a(g827
V\u000a    
p3685
tp3686
a(g441
g1048
tp3687
a(g441
Vpids
p3688
tp3689
a(g827
V             
p3690
tp3691
a(g413
g1054
tp3692
a(g827
g990
tp3693
a(g89
V"{pid=$$}"
p3694
tp3695
a(g706
g1018
tp3696
a(g827
V\u000a    
p3697
tp3698
a(g441
g1048
tp3699
a(g441
Vterm_pid
p3700
tp3701
a(g827
V         
p3702
tp3703
a(g413
g1054
tp3704
a(g827
g990
tp3705
a(g470
V$$
p3706
tp3707
a(g706
g1018
tp3708
a(g827
V\u000a
p3709
tp3710
a(g706
g1119
tp3711
a(g827
V\u000a\u000a
p3712
tp3713
a(g441
g1048
tp3714
a(g441
Vpidprompt
p3715
tp3716
a(g827
g990
tp3717
a(g413
g1054
tp3718
a(g827
g990
tp3719
a(g89
V''
p3720
tp3721
a(g706
g1018
tp3722
a(g827
V\u000a\u000a
p3723
tp3724
a(g906
V# Sets up $emacs as a synonym for $slave_editor.
p3725
tp3726
a(g827
V\u000a
p3727
tp3728
a(g413
g1804
tp3729
a(g436
g1253
tp3730
a(g436
Vemacs
p3731
tp3732
a(g827
g990
tp3733
a(g413
g1054
tp3734
a(g827
g990
tp3735
a(g441
g1048
tp3736
a(g441
Vslave_editor
p3737
tp3738
a(g827
g990
tp3739
a(g745
Vif
p3740
tp3741
a(g827
g990
tp3742
a(g441
g1048
tp3743
a(g441
Vslave_editor
p3744
tp3745
a(g706
g1018
tp3746
a(g827
V    
p3747
tp3748
a(g906
V# May be used in afterinit()...
p3749
tp3750
a(g827
V\u000a\u000a
p3751
tp3752
a(g8
V=head2 READING THE RC FILE\u000a\u000aThe debugger will read a file of initialization options if supplied. If    \u000arunning interactively, this is C<.perldb>; if not, it's C<perldb.ini>.\u000a\u000a=cut
p3753
tp3754
a(g827
V      \u000a\u000a
p3755
tp3756
a(g906
V# As noted, this test really doesn't check accurately that the debugger
p3757
tp3758
a(g827
V\u000a
p3759
tp3760
a(g906
V# is running at a terminal or not.
p3761
tp3762
a(g827
V\u000a\u000a
p3763
tp3764
a(g745
Vif
p3765
tp3766
a(g827
g990
tp3767
a(g706
g1099
tp3768
a(g827
g990
tp3769
a(g413
g3641
tp3770
a(g436
g1253
tp3771
a(g436
Ve
p3772
tp3773
a(g827
g990
tp3774
a(g89
V"/dev/tty"
p3775
tp3776
a(g827
g990
tp3777
a(g706
g1104
tp3778
a(g827
g990
tp3779
a(g706
g995
tp3780
a(g827
V                      
p3781
tp3782
a(g906
V# this is the wrong metric!
p3783
tp3784
a(g827
V\u000a    
p3785
tp3786
a(g441
g1048
tp3787
a(g441
Vrcfile
p3788
tp3789
a(g827
g990
tp3790
a(g413
g1054
tp3791
a(g827
g990
tp3792
a(g89
V".perldb"
p3793
tp3794
a(g706
g1018
tp3795
a(g827
V\u000a
p3796
tp3797
a(g706
g1119
tp3798
a(g827
V\u000a
p3799
tp3800
a(g745
Velse
p3801
tp3802
a(g827
g990
tp3803
a(g706
g995
tp3804
a(g827
V\u000a    
p3805
tp3806
a(g441
g1048
tp3807
a(g441
Vrcfile
p3808
tp3809
a(g827
g990
tp3810
a(g413
g1054
tp3811
a(g827
g990
tp3812
a(g89
V"perldb.ini"
p3813
tp3814
a(g706
g1018
tp3815
a(g827
V\u000a
p3816
tp3817
a(g706
g1119
tp3818
a(g827
V\u000a\u000a
p3819
tp3820
a(g8
V=pod\u000a\u000aThe debugger does a safety test of the file to be read. It must be owned\u000aeither by the current user or root, and must only be writable by the owner.\u000a\u000a=cut
p3821
tp3822
a(g827
V\u000a\u000a
p3823
tp3824
a(g906
V# This wraps a safety test around "do" to read and evaluate the init file.
p3825
tp3826
a(g827
V\u000a
p3827
tp3828
a(g906
g976
tp3829
a(g827
V\u000a
p3830
tp3831
a(g906
V# This isn't really safe, because there's a race
p3832
tp3833
a(g827
V\u000a
p3834
tp3835
a(g906
V# between checking and opening.  The solution is to
p3836
tp3837
a(g827
V\u000a
p3838
tp3839
a(g906
V# open and fstat the handle, but then you have to read and
p3840
tp3841
a(g827
V\u000a
p3842
tp3843
a(g906
V# eval the contents.  But then the silly thing gets
p3844
tp3845
a(g827
V\u000a
p3846
tp3847
a(g906
V# your lexical scope, which is unfortunate at best.
p3848
tp3849
a(g827
V\u000a
p3850
tp3851
a(g745
Vsub
p3852
tp3853
a(g827
g990
tp3854
a(g574
Vsafe_do
p3855
tp3856
a(g827
g990
tp3857
a(g706
g995
tp3858
a(g827
V\u000a    
p3859
tp3860
a(g745
Vmy
p3861
tp3862
a(g827
g990
tp3863
a(g441
g1048
tp3864
a(g441
Vfile
p3865
tp3866
a(g827
g990
tp3867
a(g413
g1054
tp3868
a(g827
g990
tp3869
a(g682
Vshift
p3870
tp3871
a(g706
g1018
tp3872
a(g827
V\u000a\u000a    
p3873
tp3874
a(g906
V# Just exactly what part of the word "CORE::" don't you understand?
p3875
tp3876
a(g827
V\u000a    
p3877
tp3878
a(g682
Vlocal
p3879
tp3880
a(g827
g990
tp3881
a(g441
g1048
tp3882
a(g441
VSIG
p3883
tp3884
a(g706
g995
tp3885
a(g694
V__WARN__
p3886
tp3887
a(g706
g1119
tp3888
a(g706
g1018
tp3889
a(g827
V\u000a    
p3890
tp3891
a(g682
Vlocal
p3892
tp3893
a(g827
g990
tp3894
a(g441
g1048
tp3895
a(g441
VSIG
p3896
tp3897
a(g706
g995
tp3898
a(g694
V__DIE__
p3899
tp3900
a(g706
g1119
tp3901
a(g706
g1018
tp3902
a(g827
V\u000a\u000a    
p3903
tp3904
a(g745
Vunless
p3905
tp3906
a(g827
g990
tp3907
a(g706
g1099
tp3908
a(g827
g990
tp3909
a(g436
g1253
tp3910
a(g436
Vis_safe_file
p3911
tp3912
a(g706
g1099
tp3913
a(g441
g1048
tp3914
a(g441
Vfile
p3915
tp3916
a(g706
g1104
tp3917
a(g827
g990
tp3918
a(g706
g1104
tp3919
a(g827
g990
tp3920
a(g706
g995
tp3921
a(g827
V\u000a        
p3922
tp3923
a(g436
g1253
tp3924
a(g621
VCORE::
p3925
tp3926
a(g682
Vwarn
p3927
tp3928
a(g827
g990
tp3929
a(g89
V<<
p3930
tp3931
a(g133
VEO_GRIPE
p3932
tp3933
a(g89
V;\u000aperldb: Must not source insecure rcfile $file.\u000a        You or the superuser must be the owner, and it must not \u000a        be writable by anyone but its owner.\u000a
p3934
tp3935
a(g133
VEO_GRIPE
p3936
tp3937
a(g827
V\u000a
p3938
tp3939
a(g827
V        
p3940
tp3941
a(g745
Vreturn
p3942
tp3943
a(g706
g1018
tp3944
a(g827
V\u000a    
p3945
tp3946
a(g706
g1119
tp3947
a(g827
g990
tp3948
a(g906
V## end unless (is_safe_file($file...
p3949
tp3950
a(g827
V\u000a\u000a    
p3951
tp3952
a(g745
Vdo
p3953
tp3954
a(g827
g990
tp3955
a(g441
g1048
tp3956
a(g441
Vfile
p3957
tp3958
a(g706
g1018
tp3959
a(g827
V\u000a    
p3960
tp3961
a(g436
g1253
tp3962
a(g621
VCORE::
p3963
tp3964
a(g682
Vwarn
p3965
tp3966
a(g706
g1099
tp3967
a(g89
V"perldb: couldn't parse $file: $@"
p3968
tp3969
a(g706
g1104
tp3970
a(g827
g990
tp3971
a(g745
Vif
p3972
tp3973
a(g827
g990
tp3974
a(g470
V$@
p3975
tp3976
a(g706
g1018
tp3977
a(g827
V\u000a
p3978
tp3979
a(g706
g1119
tp3980
a(g827
g990
tp3981
a(g906
V## end sub safe_do
p3982
tp3983
a(g827
V\u000a\u000a
p3984
tp3985
a(g906
V# This is the safety test itself.
p3986
tp3987
a(g827
V\u000a
p3988
tp3989
a(g906
g976
tp3990
a(g827
V\u000a
p3991
tp3992
a(g906
V# Verifies that owner is either real user or superuser and that no
p3993
tp3994
a(g827
V\u000a
p3995
tp3996
a(g906
V# one but owner may write to it.  This function is of limited use
p3997
tp3998
a(g827
V\u000a
p3999
tp4000
a(g906
V# when called on a path instead of upon a handle, because there are
p4001
tp4002
a(g827
V\u000a
p4003
tp4004
a(g906
V# no guarantees that filename (by dirent) whose file (by ino) is
p4005
tp4006
a(g827
V\u000a
p4007
tp4008
a(g906
V# eventually accessed is the same as the one tested.
p4009
tp4010
a(g827
V\u000a
p4011
tp4012
a(g906
V# Assumes that the file's existence is not in doubt.
p4013
tp4014
a(g827
V\u000a
p4015
tp4016
a(g745
Vsub
p4017
tp4018
a(g827
g990
tp4019
a(g574
Vis_safe_file
p4020
tp4021
a(g827
g990
tp4022
a(g706
g995
tp4023
a(g827
V\u000a    
p4024
tp4025
a(g745
Vmy
p4026
tp4027
a(g827
g990
tp4028
a(g441
g1048
tp4029
a(g441
Vpath
p4030
tp4031
a(g827
g990
tp4032
a(g413
g1054
tp4033
a(g827
g990
tp4034
a(g682
Vshift
p4035
tp4036
a(g706
g1018
tp4037
a(g827
V\u000a    
p4038
tp4039
a(g682
Vstat
p4040
tp4041
a(g706
g1099
tp4042
a(g441
g1048
tp4043
a(g441
Vpath
p4044
tp4045
a(g706
g1104
tp4046
a(g827
g990
tp4047
a(g413
V||
p4048
tp4049
a(g827
g990
tp4050
a(g745
Vreturn
p4051
tp4052
a(g706
g1018
tp4053
a(g827
V    
p4054
tp4055
a(g906
V# mysteriously vaporized
p4056
tp4057
a(g827
V\u000a    
p4058
tp4059
a(g745
Vmy
p4060
tp4061
a(g827
g990
tp4062
a(g706
g1099
tp4063
a(g827
g990
tp4064
a(g441
g1048
tp4065
a(g441
Vdev
p4066
tp4067
a(g706
g1389
tp4068
a(g827
g990
tp4069
a(g441
g1048
tp4070
a(g441
Vino
p4071
tp4072
a(g706
g1389
tp4073
a(g827
g990
tp4074
a(g441
g1048
tp4075
a(g441
Vmode
p4076
tp4077
a(g706
g1389
tp4078
a(g827
g990
tp4079
a(g441
g1048
tp4080
a(g441
Vnlink
p4081
tp4082
a(g706
g1389
tp4083
a(g827
g990
tp4084
a(g441
g1048
tp4085
a(g441
Vuid
p4086
tp4087
a(g706
g1389
tp4088
a(g827
g990
tp4089
a(g441
g1048
tp4090
a(g441
Vgid
p4091
tp4092
a(g827
g990
tp4093
a(g706
g1104
tp4094
a(g827
g990
tp4095
a(g413
g1054
tp4096
a(g827
g990
tp4097
a(g682
Vstat
p4098
tp4099
a(g706
g1099
tp4100
a(g436
g1253
tp4101
a(g436
V_
p4102
tp4103
a(g706
g1104
tp4104
a(g706
g1018
tp4105
a(g827
V\u000a\u000a    
p4106
tp4107
a(g745
Vreturn
p4108
tp4109
a(g827
g990
tp4110
a(g37
g1235
tp4111
a(g827
g990
tp4112
a(g745
Vif
p4113
tp4114
a(g827
g990
tp4115
a(g441
g1048
tp4116
a(g441
Vuid
p4117
tp4118
a(g827
g990
tp4119
a(g413
V!=
p4120
tp4121
a(g827
g990
tp4122
a(g37
g1235
tp4123
a(g827
g990
tp4124
a(g413
V&&
p4125
tp4126
a(g827
g990
tp4127
a(g441
g1048
tp4128
a(g441
Vuid
p4129
tp4130
a(g827
g990
tp4131
a(g413
V!=
p4132
tp4133
a(g827
g990
tp4134
a(g470
V$<
p4135
tp4136
a(g706
g1018
tp4137
a(g827
V\u000a    
p4138
tp4139
a(g745
Vreturn
p4140
tp4141
a(g827
g990
tp4142
a(g37
g1235
tp4143
a(g827
g990
tp4144
a(g745
Vif
p4145
tp4146
a(g827
g990
tp4147
a(g441
g1048
tp4148
a(g441
Vmode
p4149
tp4150
a(g827
g990
tp4151
a(g413
g1251
tp4152
a(g827
g990
tp4153
a(g282
V022
p4154
tp4155
a(g706
g1018
tp4156
a(g827
V\u000a    
p4157
tp4158
a(g745
Vreturn
p4159
tp4160
a(g827
g990
tp4161
a(g37
g2150
tp4162
a(g706
g1018
tp4163
a(g827
V\u000a
p4164
tp4165
a(g706
g1119
tp4166
a(g827
g990
tp4167
a(g906
V## end sub is_safe_file
p4168
tp4169
a(g827
V\u000a\u000a
p4170
tp4171
a(g906
V# If the rcfile (whichever one we decided was the right one to read)
p4172
tp4173
a(g827
V\u000a
p4174
tp4175
a(g906
V# exists, we safely do it.
p4176
tp4177
a(g827
V\u000a
p4178
tp4179
a(g745
Vif
p4180
tp4181
a(g827
g990
tp4182
a(g706
g1099
tp4183
a(g827
g990
tp4184
a(g413
g3641
tp4185
a(g436
g1253
tp4186
a(g436
Vf
p4187
tp4188
a(g827
g990
tp4189
a(g441
g1048
tp4190
a(g441
Vrcfile
p4191
tp4192
a(g827
g990
tp4193
a(g706
g1104
tp4194
a(g827
g990
tp4195
a(g706
g995
tp4196
a(g827
V\u000a    
p4197
tp4198
a(g436
g1253
tp4199
a(g436
Vsafe_do
p4200
tp4201
a(g706
g1099
tp4202
a(g89
V"./$rcfile"
p4203
tp4204
a(g706
g1104
tp4205
a(g706
g1018
tp4206
a(g827
V\u000a
p4207
tp4208
a(g706
g1119
tp4209
a(g827
V\u000a\u000a
p4210
tp4211
a(g906
V# If there isn't one here, try the user's home directory.
p4212
tp4213
a(g827
V\u000a
p4214
tp4215
a(g745
Velsif
p4216
tp4217
a(g827
g990
tp4218
a(g706
g1099
tp4219
a(g827
g990
tp4220
a(g682
Vdefined
p4221
tp4222
a(g827
g990
tp4223
a(g441
g1048
tp4224
a(g441
VENV
p4225
tp4226
a(g706
g995
tp4227
a(g436
g1253
tp4228
a(g436
VHOME
p4229
tp4230
a(g706
g1119
tp4231
a(g827
g990
tp4232
a(g413
V&&
p4233
tp4234
a(g827
g990
tp4235
a(g413
g3641
tp4236
a(g436
g1253
tp4237
a(g436
g4187
tp4238
a(g827
g990
tp4239
a(g89
V"$ENV{HOME}/$rcfile"
p4240
tp4241
a(g827
g990
tp4242
a(g706
g1104
tp4243
a(g827
g990
tp4244
a(g706
g995
tp4245
a(g827
V\u000a    
p4246
tp4247
a(g436
g1253
tp4248
a(g436
Vsafe_do
p4249
tp4250
a(g706
g1099
tp4251
a(g89
V"$ENV{HOME}/$rcfile"
p4252
tp4253
a(g706
g1104
tp4254
a(g706
g1018
tp4255
a(g827
V\u000a
p4256
tp4257
a(g706
g1119
tp4258
a(g827
V\u000a\u000a
p4259
tp4260
a(g906
V# Else try the login directory.
p4261
tp4262
a(g827
V\u000a
p4263
tp4264
a(g745
Velsif
p4265
tp4266
a(g827
g990
tp4267
a(g706
g1099
tp4268
a(g827
g990
tp4269
a(g682
Vdefined
p4270
tp4271
a(g827
g990
tp4272
a(g441
g1048
tp4273
a(g441
VENV
p4274
tp4275
a(g706
g995
tp4276
a(g436
g1253
tp4277
a(g436
VLOGDIR
p4278
tp4279
a(g706
g1119
tp4280
a(g827
g990
tp4281
a(g413
V&&
p4282
tp4283
a(g827
g990
tp4284
a(g413
g3641
tp4285
a(g436
g1253
tp4286
a(g436
g4187
tp4287
a(g827
g990
tp4288
a(g89
V"$ENV{LOGDIR}/$rcfile"
p4289
tp4290
a(g827
g990
tp4291
a(g706
g1104
tp4292
a(g827
g990
tp4293
a(g706
g995
tp4294
a(g827
V\u000a    
p4295
tp4296
a(g436
g1253
tp4297
a(g436
Vsafe_do
p4298
tp4299
a(g706
g1099
tp4300
a(g89
V"$ENV{LOGDIR}/$rcfile"
p4301
tp4302
a(g706
g1104
tp4303
a(g706
g1018
tp4304
a(g827
V\u000a
p4305
tp4306
a(g706
g1119
tp4307
a(g827
V\u000a\u000a
p4308
tp4309
a(g906
V# If the PERLDB_OPTS variable has options in it, parse those out next.
p4310
tp4311
a(g827
V\u000a
p4312
tp4313
a(g745
Vif
p4314
tp4315
a(g827
g990
tp4316
a(g706
g1099
tp4317
a(g827
g990
tp4318
a(g682
Vdefined
p4319
tp4320
a(g827
g990
tp4321
a(g441
g1048
tp4322
a(g441
VENV
p4323
tp4324
a(g706
g995
tp4325
a(g436
g1253
tp4326
a(g436
VPERLDB_OPTS
p4327
tp4328
a(g706
g1119
tp4329
a(g827
g990
tp4330
a(g706
g1104
tp4331
a(g827
g990
tp4332
a(g706
g995
tp4333
a(g827
V\u000a    
p4334
tp4335
a(g436
g1253
tp4336
a(g436
Vparse_options
p4337
tp4338
a(g706
g1099
tp4339
a(g827
g990
tp4340
a(g441
g1048
tp4341
a(g441
VENV
p4342
tp4343
a(g706
g995
tp4344
a(g436
g1253
tp4345
a(g436
VPERLDB_OPTS
p4346
tp4347
a(g706
g1119
tp4348
a(g827
g990
tp4349
a(g706
g1104
tp4350
a(g706
g1018
tp4351
a(g827
V\u000a
p4352
tp4353
a(g706
g1119
tp4354
a(g827
V\u000a\u000a
p4355
tp4356
a(g8
V=pod\u000a\u000aThe last thing we do during initialization is determine which subroutine is\u000ato be used to obtain a new terminal when a new debugger is started. Right now,\u000athe debugger only handles X Windows and OS/2.\u000a\u000a=cut
p4357
tp4358
a(g827
V\u000a\u000a
p4359
tp4360
a(g906
V# Set up the get_fork_TTY subroutine to be aliased to the proper routine.
p4361
tp4362
a(g827
V\u000a
p4363
tp4364
a(g906
V# Works if you're running an xterm or xterm-like window, or you're on
p4365
tp4366
a(g827
V\u000a
p4367
tp4368
a(g906
V# OS/2. This may need some expansion: for instance, this doesn't handle
p4369
tp4370
a(g827
V\u000a
p4371
tp4372
a(g906
V# OS X Terminal windows.
p4373
tp4374
a(g827
V\u000a\u000a
p4375
tp4376
a(g745
Vif
p4377
tp4378
a(g827
g990
tp4379
a(g706
g1099
tp4380
a(g827
V\u000a    
p4381
tp4382
a(g427
Vnot
p4383
tp4384
a(g827
g990
tp4385
a(g682
Vdefined
p4386
tp4387
a(g827
g990
tp4388
a(g413
g1251
tp4389
a(g436
g1253
tp4390
a(g436
Vget_fork_TTY
p4391
tp4392
a(g827
V    
p4393
tp4394
a(g906
V# no routine exists,
p4395
tp4396
a(g827
V\u000a    
p4397
tp4398
a(g427
Vand
p4399
tp4400
a(g827
g990
tp4401
a(g682
Vdefined
p4402
tp4403
a(g827
g990
tp4404
a(g441
g1048
tp4405
a(g441
VENV
p4406
tp4407
a(g706
g995
tp4408
a(g436
g1253
tp4409
a(g436
VTERM
p4410
tp4411
a(g706
g1119
tp4412
a(g827
V       
p4413
tp4414
a(g906
V# and we know what kind
p4415
tp4416
a(g827
V\u000a                                 
p4417
tp4418
a(g906
V# of terminal this is,
p4419
tp4420
a(g827
V\u000a    
p4421
tp4422
a(g427
Vand
p4423
tp4424
a(g827
g990
tp4425
a(g441
g1048
tp4426
a(g441
VENV
p4427
tp4428
a(g706
g995
tp4429
a(g436
g1253
tp4430
a(g436
VTERM
p4431
tp4432
a(g706
g1119
tp4433
a(g827
g990
tp4434
a(g427
Veq
p4435
tp4436
a(g827
g990
tp4437
a(g89
V'xterm'
p4438
tp4439
a(g827
V    
p4440
tp4441
a(g906
V# and it's an xterm,
p4442
tp4443
a(g827
V\u000a
p4444
tp4445
a(g906
V#   and defined $ENV{WINDOWID}   # and we know what window this is, <- wrong metric
p4446
tp4447
a(g827
V\u000a    
p4448
tp4449
a(g427
Vand
p4450
tp4451
a(g827
g990
tp4452
a(g682
Vdefined
p4453
tp4454
a(g827
g990
tp4455
a(g441
g1048
tp4456
a(g441
VENV
p4457
tp4458
a(g706
g995
tp4459
a(g436
g1253
tp4460
a(g436
VDISPLAY
p4461
tp4462
a(g706
g1119
tp4463
a(g827
V    
p4464
tp4465
a(g906
V# and what display it's on,
p4466
tp4467
a(g827
V\u000a  
p4468
tp4469
a(g706
g1104
tp4470
a(g827
V\u000a
p4471
tp4472
a(g706
g995
tp4473
a(g827
V\u000a    
p4474
tp4475
a(g413
g1804
tp4476
a(g436
g1253
tp4477
a(g436
Vget_fork_TTY
p4478
tp4479
a(g827
g990
tp4480
a(g413
g1054
tp4481
a(g827
g990
tp4482
a(g413
V\u005c
p4483
tp4484
a(g413
g1251
tp4485
a(g436
g1253
tp4486
a(g436
Vxterm_get_fork_TTY
p4487
tp4488
a(g706
g1018
tp4489
a(g827
V    
p4490
tp4491
a(g906
V# use the xterm version
p4492
tp4493
a(g827
V\u000a
p4494
tp4495
a(g706
g1119
tp4496
a(g827
g990
tp4497
a(g906
V## end if (not defined &get_fork_TTY...
p4498
tp4499
a(g827
V\u000a
p4500
tp4501
a(g745
Velsif
p4502
tp4503
a(g827
g990
tp4504
a(g706
g1099
tp4505
a(g827
g990
tp4506
a(g470
V$^O
p4507
tp4508
a(g827
g990
tp4509
a(g427
Veq
p4510
tp4511
a(g827
g990
tp4512
a(g89
V'os2'
p4513
tp4514
a(g827
g990
tp4515
a(g706
g1104
tp4516
a(g827
g990
tp4517
a(g706
g995
tp4518
a(g827
V                     
p4519
tp4520
a(g906
V# If this is OS/2,
p4521
tp4522
a(g827
V\u000a    
p4523
tp4524
a(g413
g1804
tp4525
a(g436
g1253
tp4526
a(g436
Vget_fork_TTY
p4527
tp4528
a(g827
g990
tp4529
a(g413
g1054
tp4530
a(g827
g990
tp4531
a(g413
V\u005c
p4532
tp4533
a(g413
g1251
tp4534
a(g436
g1253
tp4535
a(g436
Vos2_get_fork_TTY
p4536
tp4537
a(g706
g1018
tp4538
a(g827
V      
p4539
tp4540
a(g906
V# use the OS/2 version
p4541
tp4542
a(g827
V\u000a
p4543
tp4544
a(g706
g1119
tp4545
a(g827
V\u000a\u000a
p4546
tp4547
a(g906
V# untaint $^O, which may have been tainted by the last statement.
p4548
tp4549
a(g827
V\u000a
p4550
tp4551
a(g906
V# see bug [perl #24674]
p4552
tp4553
a(g827
V\u000a
p4554
tp4555
a(g470
V$^O
p4556
tp4557
a(g827
g990
tp4558
a(g413
V=~
p4559
tp4560
a(g827
g990
tp4561
a(g197
Vm/^(.*)\u005cz/
p4562
tp4563
a(g706
g1018
tp4564
a(g827
V\u000a
p4565
tp4566
a(g470
V$^O
p4567
tp4568
a(g827
g990
tp4569
a(g413
g1054
tp4570
a(g827
g990
tp4571
a(g441
g1048
tp4572
a(g441
g2150
tp4573
a(g706
g1018
tp4574
a(g827
V\u000a\u000a
p4575
tp4576
a(g906
V# Here begin the unreadable code.  It needs fixing.
p4577
tp4578
a(g827
V\u000a\u000a
p4579
tp4580
a(g8
V=head2 RESTART PROCESSING\u000a\u000aThis section handles the restart command. When the C<R> command is invoked, it\u000atries to capture all of the state it can into environment variables, and\u000athen sets C<PERLDB_RESTART>. When we start executing again, we check to see\u000aif C<PERLDB_RESTART> is there; if so, we reload all the information that\u000athe R command stuffed into the environment variables.\u000a\u000a  PERLDB_RESTART   - flag only, contains no restart data itself.       \u000a  PERLDB_HIST      - command history, if it's available\u000a  PERLDB_ON_LOAD   - breakpoints set by the rc file\u000a  PERLDB_POSTPONE  - subs that have been loaded/not executed, and have actions\u000a  PERLDB_VISITED   - files that had breakpoints\u000a  PERLDB_FILE_...  - breakpoints for a file\u000a  PERLDB_OPT       - active options\u000a  PERLDB_INC       - the original @INC\u000a  PERLDB_PRETYPE   - preprompt debugger actions\u000a  PERLDB_PRE       - preprompt Perl code\u000a  PERLDB_POST      - post-prompt Perl code\u000a  PERLDB_TYPEAHEAD - typeahead captured by readline()\u000a\u000aWe chug through all these variables and plug the values saved in them\u000aback into the appropriate spots in the debugger.\u000a\u000a=cut
p4581
tp4582
a(g827
V\u000a\u000a
p4583
tp4584
a(g745
Vif
p4585
tp4586
a(g827
g990
tp4587
a(g706
g1099
tp4588
a(g827
g990
tp4589
a(g682
Vexists
p4590
tp4591
a(g827
g990
tp4592
a(g441
g1048
tp4593
a(g441
VENV
p4594
tp4595
a(g706
g995
tp4596
a(g436
g1253
tp4597
a(g436
VPERLDB_RESTART
p4598
tp4599
a(g706
g1119
tp4600
a(g827
g990
tp4601
a(g706
g1104
tp4602
a(g827
g990
tp4603
a(g706
g995
tp4604
a(g827
V\u000a\u000a    
p4605
tp4606
a(g906
V# We're restarting, so we don't need the flag that says to restart anymore.
p4607
tp4608
a(g827
V\u000a    
p4609
tp4610
a(g682
Vdelete
p4611
tp4612
a(g827
g990
tp4613
a(g441
g1048
tp4614
a(g441
VENV
p4615
tp4616
a(g706
g995
tp4617
a(g436
g1253
tp4618
a(g436
VPERLDB_RESTART
p4619
tp4620
a(g706
g1119
tp4621
a(g706
g1018
tp4622
a(g827
V\u000a\u000a    
p4623
tp4624
a(g906
V# $restart = 1;
p4625
tp4626
a(g827
V\u000a    
p4627
tp4628
a(g441
g1014
tp4629
a(g441
Vhist
p4630
tp4631
a(g827
V          
p4632
tp4633
a(g413
g1054
tp4634
a(g827
g990
tp4635
a(g436
g1253
tp4636
a(g436
Vget_list
p4637
tp4638
a(g706
g1099
tp4639
a(g89
V'PERLDB_HIST'
p4640
tp4641
a(g706
g1104
tp4642
a(g706
g1018
tp4643
a(g827
V\u000a    
p4644
tp4645
a(g441
g2018
tp4646
a(g441
Vbreak_on_load
p4647
tp4648
a(g827
g990
tp4649
a(g413
g1054
tp4650
a(g827
g990
tp4651
a(g436
g1253
tp4652
a(g436
Vget_list
p4653
tp4654
a(g706
g1099
tp4655
a(g89
V"PERLDB_ON_LOAD"
p4656
tp4657
a(g706
g1104
tp4658
a(g706
g1018
tp4659
a(g827
V\u000a    
p4660
tp4661
a(g441
g2018
tp4662
a(g441
Vpostponed
p4663
tp4664
a(g827
V     
p4665
tp4666
a(g413
g1054
tp4667
a(g827
g990
tp4668
a(g436
g1253
tp4669
a(g436
Vget_list
p4670
tp4671
a(g706
g1099
tp4672
a(g89
V"PERLDB_POSTPONE"
p4673
tp4674
a(g706
g1104
tp4675
a(g706
g1018
tp4676
a(g827
V\u000a\u000a	
p4677
tp4678
a(g436
g1253
tp4679
a(g436
Vshare
p4680
tp4681
a(g706
g1099
tp4682
a(g441
g1014
tp4683
a(g441
Vhist
p4684
tp4685
a(g706
g1104
tp4686
a(g706
g1018
tp4687
a(g827
V\u000a	
p4688
tp4689
a(g436
g1253
tp4690
a(g436
Vshare
p4691
tp4692
a(g706
g1099
tp4693
a(g441
g1014
tp4694
a(g441
Vtruehist
p4695
tp4696
a(g706
g1104
tp4697
a(g706
g1018
tp4698
a(g827
V\u000a	
p4699
tp4700
a(g436
g1253
tp4701
a(g436
Vshare
p4702
tp4703
a(g706
g1099
tp4704
a(g441
g2018
tp4705
a(g441
Vbreak_on_load
p4706
tp4707
a(g706
g1104
tp4708
a(g706
g1018
tp4709
a(g827
V\u000a	
p4710
tp4711
a(g436
g1253
tp4712
a(g436
Vshare
p4713
tp4714
a(g706
g1099
tp4715
a(g441
g2018
tp4716
a(g441
Vpostponed
p4717
tp4718
a(g706
g1104
tp4719
a(g706
g1018
tp4720
a(g827
V\u000a\u000a    
p4721
tp4722
a(g906
V# restore breakpoints/actions
p4723
tp4724
a(g827
V\u000a    
p4725
tp4726
a(g745
Vmy
p4727
tp4728
a(g827
g990
tp4729
a(g441
g1014
tp4730
a(g441
Vhad_breakpoints
p4731
tp4732
a(g827
g990
tp4733
a(g413
g1054
tp4734
a(g827
g990
tp4735
a(g436
g1253
tp4736
a(g436
Vget_list
p4737
tp4738
a(g706
g1099
tp4739
a(g89
V"PERLDB_VISITED"
p4740
tp4741
a(g706
g1104
tp4742
a(g706
g1018
tp4743
a(g827
V\u000a    
p4744
tp4745
a(g745
Vfor
p4746
tp4747
a(g827
g990
tp4748
a(g706
g1099
tp4749
a(g827
g990
tp4750
a(g37
g1235
tp4751
a(g827
g990
tp4752
a(g413
V..
p4753
tp4754
a(g827
g990
tp4755
a(g441
V$#
p4756
tp4757
a(g441
Vhad_breakpoints
p4758
tp4759
a(g827
g990
tp4760
a(g706
g1104
tp4761
a(g827
g990
tp4762
a(g706
g995
tp4763
a(g827
V\u000a        
p4764
tp4765
a(g745
Vmy
p4766
tp4767
a(g827
g990
tp4768
a(g441
g2018
tp4769
a(g441
Vpf
p4770
tp4771
a(g827
g990
tp4772
a(g413
g1054
tp4773
a(g827
g990
tp4774
a(g436
g1253
tp4775
a(g436
Vget_list
p4776
tp4777
a(g706
g1099
tp4778
a(g89
V"PERLDB_FILE_$_"
p4779
tp4780
a(g706
g1104
tp4781
a(g706
g1018
tp4782
a(g827
V\u000a        
p4783
tp4784
a(g441
g1048
tp4785
a(g441
Vpostponed_file
p4786
tp4787
a(g706
g995
tp4788
a(g827
g990
tp4789
a(g441
g1048
tp4790
a(g441
Vhad_breakpoints
p4791
tp4792
a(g706
g1233
tp4793
a(g441
g1048
tp4794
a(g441
g4102
tp4795
a(g706
g1237
tp4796
a(g827
g990
tp4797
a(g706
g1119
tp4798
a(g827
g990
tp4799
a(g413
g1054
tp4800
a(g827
g990
tp4801
a(g413
V\u005c
p4802
tp4803
a(g441
g2018
tp4804
a(g441
Vpf
p4805
tp4806
a(g827
g990
tp4807
a(g745
Vif
p4808
tp4809
a(g827
g990
tp4810
a(g441
g2018
tp4811
a(g441
Vpf
p4812
tp4813
a(g706
g1018
tp4814
a(g827
V\u000a    
p4815
tp4816
a(g706
g1119
tp4817
a(g827
V\u000a\u000a    
p4818
tp4819
a(g906
V# restore options
p4820
tp4821
a(g827
V\u000a    
p4822
tp4823
a(g745
Vmy
p4824
tp4825
a(g827
g990
tp4826
a(g441
g2018
tp4827
a(g441
Vopt
p4828
tp4829
a(g827
g990
tp4830
a(g413
g1054
tp4831
a(g827
g990
tp4832
a(g436
g1253
tp4833
a(g436
Vget_list
p4834
tp4835
a(g706
g1099
tp4836
a(g89
V"PERLDB_OPT"
p4837
tp4838
a(g706
g1104
tp4839
a(g706
g1018
tp4840
a(g827
V\u000a    
p4841
tp4842
a(g745
Vmy
p4843
tp4844
a(g827
g990
tp4845
a(g706
g1099
tp4846
a(g827
g990
tp4847
a(g441
g1048
tp4848
a(g441
Vopt
p4849
tp4850
a(g706
g1389
tp4851
a(g827
g990
tp4852
a(g441
g1048
tp4853
a(g441
Vval
p4854
tp4855
a(g827
g990
tp4856
a(g706
g1104
tp4857
a(g706
g1018
tp4858
a(g827
V\u000a    
p4859
tp4860
a(g745
Vwhile
p4861
tp4862
a(g827
g990
tp4863
a(g706
g1099
tp4864
a(g827
g990
tp4865
a(g706
g1099
tp4866
a(g827
g990
tp4867
a(g441
g1048
tp4868
a(g441
Vopt
p4869
tp4870
a(g706
g1389
tp4871
a(g827
g990
tp4872
a(g441
g1048
tp4873
a(g441
Vval
p4874
tp4875
a(g827
g990
tp4876
a(g706
g1104
tp4877
a(g827
g990
tp4878
a(g413
g1054
tp4879
a(g827
g990
tp4880
a(g682
Veach
p4881
tp4882
a(g827
g990
tp4883
a(g441
g2018
tp4884
a(g441
Vopt
p4885
tp4886
a(g827
g990
tp4887
a(g706
g1104
tp4888
a(g827
g990
tp4889
a(g706
g995
tp4890
a(g827
V\u000a        
p4891
tp4892
a(g441
g1048
tp4893
a(g441
Vval
p4894
tp4895
a(g827
g990
tp4896
a(g413
V=~
p4897
tp4898
a(g827
g990
tp4899
a(g197
Vs/[\u005c\u005c\u005c']/\u005c\u005c$1/g
p4900
tp4901
a(g706
g1018
tp4902
a(g827
V\u000a        
p4903
tp4904
a(g436
g1253
tp4905
a(g436
Vparse_options
p4906
tp4907
a(g706
g1099
tp4908
a(g89
V"$opt'$val'"
p4909
tp4910
a(g706
g1104
tp4911
a(g706
g1018
tp4912
a(g827
V\u000a    
p4913
tp4914
a(g706
g1119
tp4915
a(g827
V\u000a\u000a    
p4916
tp4917
a(g906
V# restore original @INC
p4918
tp4919
a(g827
V\u000a    
p4920
tp4921
a(g441
g1014
tp4922
a(g441
VINC
p4923
tp4924
a(g827
V     
p4925
tp4926
a(g413
g1054
tp4927
a(g827
g990
tp4928
a(g436
g1253
tp4929
a(g436
Vget_list
p4930
tp4931
a(g706
g1099
tp4932
a(g89
V"PERLDB_INC"
p4933
tp4934
a(g706
g1104
tp4935
a(g706
g1018
tp4936
a(g827
V\u000a    
p4937
tp4938
a(g441
g1014
tp4939
a(g441
Vini_INC
p4940
tp4941
a(g827
g990
tp4942
a(g413
g1054
tp4943
a(g827
g990
tp4944
a(g441
g1014
tp4945
a(g441
VINC
p4946
tp4947
a(g706
g1018
tp4948
a(g827
V\u000a\u000a    
p4949
tp4950
a(g906
V# return pre/postprompt actions and typeahead buffer
p4951
tp4952
a(g827
V\u000a    
p4953
tp4954
a(g441
g1048
tp4955
a(g441
Vpretype
p4956
tp4957
a(g827
V   
p4958
tp4959
a(g413
g1054
tp4960
a(g827
g990
tp4961
a(g706
g1233
tp4962
a(g827
g990
tp4963
a(g436
g1253
tp4964
a(g436
Vget_list
p4965
tp4966
a(g706
g1099
tp4967
a(g89
V"PERLDB_PRETYPE"
p4968
tp4969
a(g706
g1104
tp4970
a(g827
g990
tp4971
a(g706
g1237
tp4972
a(g706
g1018
tp4973
a(g827
V\u000a    
p4974
tp4975
a(g441
g1048
tp4976
a(g441
Vpre
p4977
tp4978
a(g827
V       
p4979
tp4980
a(g413
g1054
tp4981
a(g827
g990
tp4982
a(g706
g1233
tp4983
a(g827
g990
tp4984
a(g436
g1253
tp4985
a(g436
Vget_list
p4986
tp4987
a(g706
g1099
tp4988
a(g89
V"PERLDB_PRE"
p4989
tp4990
a(g706
g1104
tp4991
a(g827
g990
tp4992
a(g706
g1237
tp4993
a(g706
g1018
tp4994
a(g827
V\u000a    
p4995
tp4996
a(g441
g1048
tp4997
a(g441
Vpost
p4998
tp4999
a(g827
V      
p5000
tp5001
a(g413
g1054
tp5002
a(g827
g990
tp5003
a(g706
g1233
tp5004
a(g827
g990
tp5005
a(g436
g1253
tp5006
a(g436
Vget_list
p5007
tp5008
a(g706
g1099
tp5009
a(g89
V"PERLDB_POST"
p5010
tp5011
a(g706
g1104
tp5012
a(g827
g990
tp5013
a(g706
g1237
tp5014
a(g706
g1018
tp5015
a(g827
V\u000a    
p5016
tp5017
a(g441
g1014
tp5018
a(g441
Vtypeahead
p5019
tp5020
a(g827
g990
tp5021
a(g413
g1054
tp5022
a(g827
g990
tp5023
a(g436
g1253
tp5024
a(g436
Vget_list
p5025
tp5026
a(g706
g1099
tp5027
a(g827
g990
tp5028
a(g89
V"PERLDB_TYPEAHEAD"
p5029
tp5030
a(g706
g1389
tp5031
a(g827
g990
tp5032
a(g441
g1014
tp5033
a(g441
Vtypeahead
p5034
tp5035
a(g827
g990
tp5036
a(g706
g1104
tp5037
a(g706
g1018
tp5038
a(g827
V\u000a
p5039
tp5040
a(g706
g1119
tp5041
a(g827
g990
tp5042
a(g906
V## end if (exists $ENV{PERLDB_RESTART...
p5043
tp5044
a(g827
V\u000a\u000a
p5045
tp5046
a(g8
V=head2 SETTING UP THE TERMINAL\u000a\u000aNow, we'll decide how the debugger is going to interact with the user.\u000aIf there's no TTY, we set the debugger to run non-stop; there's not going\u000ato be anyone there to enter commands.\u000a\u000a=cut
p5047
tp5048
a(g827
V\u000a\u000a
p5049
tp5050
a(g745
Vif
p5051
tp5052
a(g827
g990
tp5053
a(g706
g1099
tp5054
a(g441
g1048
tp5055
a(g441
Vnotty
p5056
tp5057
a(g706
g1104
tp5058
a(g827
g990
tp5059
a(g706
g995
tp5060
a(g827
V\u000a    
p5061
tp5062
a(g441
g1048
tp5063
a(g441
Vrunnonstop
p5064
tp5065
a(g827
g990
tp5066
a(g413
g1054
tp5067
a(g827
g990
tp5068
a(g37
g2150
tp5069
a(g706
g1018
tp5070
a(g827
V\u000a	
p5071
tp5072
a(g436
g1253
tp5073
a(g436
Vshare
p5074
tp5075
a(g706
g1099
tp5076
a(g441
g1048
tp5077
a(g441
Vrunnonstop
p5078
tp5079
a(g706
g1104
tp5080
a(g706
g1018
tp5081
a(g827
V\u000a
p5082
tp5083
a(g706
g1119
tp5084
a(g827
V\u000a\u000a
p5085
tp5086
a(g8
V=pod\u000a\u000aIf there is a TTY, we have to determine who it belongs to before we can\u000aproceed. If this is a slave editor or graphical debugger (denoted by\u000athe first command-line switch being '-emacs'), we shift this off and\u000aset C<$rl> to 0 (XXX ostensibly to do straight reads).\u000a\u000a=cut
p5087
tp5088
a(g827
V\u000a\u000a
p5089
tp5090
a(g745
Velse
p5091
tp5092
a(g827
g990
tp5093
a(g706
g995
tp5094
a(g827
V\u000a\u000a    
p5095
tp5096
a(g906
V# Is Perl being run from a slave editor or graphical debugger?
p5097
tp5098
a(g827
V\u000a    
p5099
tp5100
a(g906
V# If so, don't use readline, and set $slave_editor = 1.
p5101
tp5102
a(g827
V\u000a    
p5103
tp5104
a(g441
g1048
tp5105
a(g441
Vslave_editor
p5106
tp5107
a(g827
g990
tp5108
a(g413
g1054
tp5109
a(g827
V\u000a      
p5110
tp5111
a(g706
g1099
tp5112
a(g827
g990
tp5113
a(g706
g1099
tp5114
a(g827
g990
tp5115
a(g682
Vdefined
p5116
tp5117
a(g827
g990
tp5118
a(g441
g1048
tp5119
a(g621
Vmain::
p5120
tp5121
a(g441
VARGV
p5122
tp5123
a(g706
g1233
tp5124
a(g37
g1235
tp5125
a(g706
g1237
tp5126
a(g827
g990
tp5127
a(g706
g1104
tp5128
a(g827
g990
tp5129
a(g427
Vand
p5130
tp5131
a(g827
g990
tp5132
a(g706
g1099
tp5133
a(g827
g990
tp5134
a(g441
g1048
tp5135
a(g621
Vmain::
p5136
tp5137
a(g441
VARGV
p5138
tp5139
a(g706
g1233
tp5140
a(g37
g1235
tp5141
a(g706
g1237
tp5142
a(g827
g990
tp5143
a(g427
Veq
p5144
tp5145
a(g827
g990
tp5146
a(g89
V'-emacs'
p5147
tp5148
a(g827
g990
tp5149
a(g706
g1104
tp5150
a(g827
g990
tp5151
a(g706
g1104
tp5152
a(g706
g1018
tp5153
a(g827
V\u000a    
p5154
tp5155
a(g441
g1048
tp5156
a(g441
Vrl
p5157
tp5158
a(g827
g990
tp5159
a(g413
g1054
tp5160
a(g827
g990
tp5161
a(g37
g1235
tp5162
a(g706
g1389
tp5163
a(g827
g990
tp5164
a(g682
Vshift
p5165
tp5166
a(g706
g1099
tp5167
a(g441
g1014
tp5168
a(g621
Vmain::
p5169
tp5170
a(g441
VARGV
p5171
tp5172
a(g706
g1104
tp5173
a(g827
g990
tp5174
a(g745
Vif
p5175
tp5176
a(g827
g990
tp5177
a(g441
g1048
tp5178
a(g441
Vslave_editor
p5179
tp5180
a(g706
g1018
tp5181
a(g827
V\u000a\u000a    
p5182
tp5183
a(g906
V#require Term::ReadLine;
p5184
tp5185
a(g827
V\u000a\u000a
p5186
tp5187
a(g8
V=pod\u000a\u000aWe then determine what the console should be on various systems:\u000a\u000a=over 4\u000a\u000a=item * Cygwin - We use C<stdin> instead of a separate device.\u000a\u000a=cut
p5188
tp5189
a(g827
V\u000a\u000a    
p5190
tp5191
a(g745
Vif
p5192
tp5193
a(g827
g990
tp5194
a(g706
g1099
tp5195
a(g827
g990
tp5196
a(g470
V$^O
p5197
tp5198
a(g827
g990
tp5199
a(g427
Veq
p5200
tp5201
a(g827
g990
tp5202
a(g89
V'cygwin'
p5203
tp5204
a(g827
g990
tp5205
a(g706
g1104
tp5206
a(g827
g990
tp5207
a(g706
g995
tp5208
a(g827
V\u000a\u000a        
p5209
tp5210
a(g906
V# /dev/tty is binary. use stdin for textmode
p5211
tp5212
a(g827
V\u000a        
p5213
tp5214
a(g682
Vundef
p5215
tp5216
a(g827
g990
tp5217
a(g441
g1048
tp5218
a(g441
Vconsole
p5219
tp5220
a(g706
g1018
tp5221
a(g827
V\u000a    
p5222
tp5223
a(g706
g1119
tp5224
a(g827
V\u000a\u000a
p5225
tp5226
a(g8
V=item * Unix - use C</dev/tty>.\u000a\u000a=cut
p5227
tp5228
a(g827
V\u000a\u000a    
p5229
tp5230
a(g745
Velsif
p5231
tp5232
a(g827
g990
tp5233
a(g706
g1099
tp5234
a(g827
g990
tp5235
a(g413
g3641
tp5236
a(g436
g1253
tp5237
a(g436
g3772
tp5238
a(g827
g990
tp5239
a(g89
V"/dev/tty"
p5240
tp5241
a(g827
g990
tp5242
a(g706
g1104
tp5243
a(g827
g990
tp5244
a(g706
g995
tp5245
a(g827
V\u000a        
p5246
tp5247
a(g441
g1048
tp5248
a(g441
Vconsole
p5249
tp5250
a(g827
g990
tp5251
a(g413
g1054
tp5252
a(g827
g990
tp5253
a(g89
V"/dev/tty"
p5254
tp5255
a(g706
g1018
tp5256
a(g827
V\u000a    
p5257
tp5258
a(g706
g1119
tp5259
a(g827
V\u000a\u000a
p5260
tp5261
a(g8
V=item * Windows or MSDOS - use C<con>.\u000a\u000a=cut
p5262
tp5263
a(g827
V\u000a\u000a    
p5264
tp5265
a(g745
Velsif
p5266
tp5267
a(g827
g990
tp5268
a(g706
g1099
tp5269
a(g827
g990
tp5270
a(g470
V$^O
p5271
tp5272
a(g827
g990
tp5273
a(g427
Veq
p5274
tp5275
a(g827
g990
tp5276
a(g89
V'dos'
p5277
tp5278
a(g827
g990
tp5279
a(g427
Vor
p5280
tp5281
a(g827
g990
tp5282
a(g413
g3641
tp5283
a(g436
g1253
tp5284
a(g436
g3772
tp5285
a(g827
g990
tp5286
a(g89
V"con"
p5287
tp5288
a(g827
g990
tp5289
a(g427
Vor
p5290
tp5291
a(g827
g990
tp5292
a(g470
V$^O
p5293
tp5294
a(g827
g990
tp5295
a(g427
Veq
p5296
tp5297
a(g827
g990
tp5298
a(g89
V'MSWin32'
p5299
tp5300
a(g827
g990
tp5301
a(g706
g1104
tp5302
a(g827
g990
tp5303
a(g706
g995
tp5304
a(g827
V\u000a        
p5305
tp5306
a(g441
g1048
tp5307
a(g441
Vconsole
p5308
tp5309
a(g827
g990
tp5310
a(g413
g1054
tp5311
a(g827
g990
tp5312
a(g89
V"con"
p5313
tp5314
a(g706
g1018
tp5315
a(g827
V\u000a    
p5316
tp5317
a(g706
g1119
tp5318
a(g827
V\u000a\u000a
p5319
tp5320
a(g8
V=item * MacOS - use C<Dev:Console:Perl Debug> if this is the MPW version; C<Dev:\u000aConsole> if not.\u000a\u000aNote that Mac OS X returns C<darwin>, not C<MacOS>. Also note that the debugger doesn't do anything special for C<darwin>. Maybe it should.\u000a\u000a=cut
p5321
tp5322
a(g827
V\u000a\u000a    
p5323
tp5324
a(g745
Velsif
p5325
tp5326
a(g827
g990
tp5327
a(g706
g1099
tp5328
a(g827
g990
tp5329
a(g470
V$^O
p5330
tp5331
a(g827
g990
tp5332
a(g427
Veq
p5333
tp5334
a(g827
g990
tp5335
a(g89
V'MacOS'
p5336
tp5337
a(g827
g990
tp5338
a(g706
g1104
tp5339
a(g827
g990
tp5340
a(g706
g995
tp5341
a(g827
V\u000a        
p5342
tp5343
a(g745
Vif
p5344
tp5345
a(g827
g990
tp5346
a(g706
g1099
tp5347
a(g827
g990
tp5348
a(g441
g1048
tp5349
a(g621
VMacPerl::
p5350
tp5351
a(g441
VVersion
p5352
tp5353
a(g827
g990
tp5354
a(g413
V!~
p5355
tp5356
a(g827
g990
tp5357
a(g197
V/MPW/
p5358
tp5359
a(g827
g990
tp5360
a(g706
g1104
tp5361
a(g827
g990
tp5362
a(g706
g995
tp5363
a(g827
V\u000a            
p5364
tp5365
a(g441
g1048
tp5366
a(g441
Vconsole
p5367
tp5368
a(g827
g990
tp5369
a(g413
g1054
tp5370
a(g827
V\u000a              
p5371
tp5372
a(g89
V"Dev:Console:Perl Debug"
p5373
tp5374
a(g706
g1018
tp5375
a(g827
V    
p5376
tp5377
a(g906
V# Separate window for application
p5378
tp5379
a(g827
V\u000a        
p5380
tp5381
a(g706
g1119
tp5382
a(g827
V\u000a        
p5383
tp5384
a(g745
Velse
p5385
tp5386
a(g827
g990
tp5387
a(g706
g995
tp5388
a(g827
V\u000a            
p5389
tp5390
a(g441
g1048
tp5391
a(g441
Vconsole
p5392
tp5393
a(g827
g990
tp5394
a(g413
g1054
tp5395
a(g827
g990
tp5396
a(g89
V"Dev:Console"
p5397
tp5398
a(g706
g1018
tp5399
a(g827
V\u000a        
p5400
tp5401
a(g706
g1119
tp5402
a(g827
V\u000a    
p5403
tp5404
a(g706
g1119
tp5405
a(g827
g990
tp5406
a(g906
V## end elsif ($^O eq 'MacOS')
p5407
tp5408
a(g827
V\u000a\u000a
p5409
tp5410
a(g8
V=item * VMS - use C<sys$command>.\u000a\u000a=cut
p5411
tp5412
a(g827
V\u000a\u000a    
p5413
tp5414
a(g745
Velse
p5415
tp5416
a(g827
g990
tp5417
a(g706
g995
tp5418
a(g827
V\u000a\u000a        
p5419
tp5420
a(g906
V# everything else is ...
p5421
tp5422
a(g827
V\u000a        
p5423
tp5424
a(g441
g1048
tp5425
a(g441
Vconsole
p5426
tp5427
a(g827
g990
tp5428
a(g413
g1054
tp5429
a(g827
g990
tp5430
a(g89
V"sys\u005c$command"
p5431
tp5432
a(g706
g1018
tp5433
a(g827
V\u000a    
p5434
tp5435
a(g706
g1119
tp5436
a(g827
V\u000a\u000a
p5437
tp5438
a(g8
V=pod\u000a\u000a=back\u000a\u000aSeveral other systems don't use a specific console. We C<undef $console>\u000afor those (Windows using a slave editor/graphical debugger, NetWare, OS/2\u000awith a slave editor, Epoc).\u000a\u000a=cut
p5439
tp5440
a(g827
V\u000a\u000a    
p5441
tp5442
a(g745
Vif
p5443
tp5444
a(g827
g990
tp5445
a(g706
g1099
tp5446
a(g827
g990
tp5447
a(g706
g1099
tp5448
a(g827
g990
tp5449
a(g470
V$^O
p5450
tp5451
a(g827
g990
tp5452
a(g427
Veq
p5453
tp5454
a(g827
g990
tp5455
a(g89
V'MSWin32'
p5456
tp5457
a(g827
g990
tp5458
a(g706
g1104
tp5459
a(g827
g990
tp5460
a(g427
Vand
p5461
tp5462
a(g827
g990
tp5463
a(g706
g1099
tp5464
a(g827
g990
tp5465
a(g441
g1048
tp5466
a(g441
Vslave_editor
p5467
tp5468
a(g827
g990
tp5469
a(g427
Vor
p5470
tp5471
a(g827
g990
tp5472
a(g682
Vdefined
p5473
tp5474
a(g827
g990
tp5475
a(g441
g1048
tp5476
a(g441
VENV
p5477
tp5478
a(g706
g995
tp5479
a(g436
g1253
tp5480
a(g436
VEMACS
p5481
tp5482
a(g706
g1119
tp5483
a(g827
g990
tp5484
a(g706
g1104
tp5485
a(g827
g990
tp5486
a(g706
g1104
tp5487
a(g827
g990
tp5488
a(g706
g995
tp5489
a(g827
V\u000a\u000a        
p5490
tp5491
a(g906
V# /dev/tty is binary. use stdin for textmode
p5492
tp5493
a(g827
V\u000a        
p5494
tp5495
a(g441
g1048
tp5496
a(g441
Vconsole
p5497
tp5498
a(g827
g990
tp5499
a(g413
g1054
tp5500
a(g827
g990
tp5501
a(g682
Vundef
p5502
tp5503
a(g706
g1018
tp5504
a(g827
V\u000a    
p5505
tp5506
a(g706
g1119
tp5507
a(g827
V\u000a\u000a    
p5508
tp5509
a(g745
Vif
p5510
tp5511
a(g827
g990
tp5512
a(g706
g1099
tp5513
a(g827
g990
tp5514
a(g470
V$^O
p5515
tp5516
a(g827
g990
tp5517
a(g427
Veq
p5518
tp5519
a(g827
g990
tp5520
a(g89
V'NetWare'
p5521
tp5522
a(g827
g990
tp5523
a(g706
g1104
tp5524
a(g827
g990
tp5525
a(g706
g995
tp5526
a(g827
V\u000a\u000a        
p5527
tp5528
a(g906
V# /dev/tty is binary. use stdin for textmode
p5529
tp5530
a(g827
V\u000a        
p5531
tp5532
a(g441
g1048
tp5533
a(g441
Vconsole
p5534
tp5535
a(g827
g990
tp5536
a(g413
g1054
tp5537
a(g827
g990
tp5538
a(g682
Vundef
p5539
tp5540
a(g706
g1018
tp5541
a(g827
V\u000a    
p5542
tp5543
a(g706
g1119
tp5544
a(g827
V\u000a\u000a    
p5545
tp5546
a(g906
V# In OS/2, we need to use STDIN to get textmode too, even though
p5547
tp5548
a(g827
V\u000a    
p5549
tp5550
a(g906
V# it pretty much looks like Unix otherwise.
p5551
tp5552
a(g827
V\u000a    
p5553
tp5554
a(g745
Vif
p5555
tp5556
a(g827
g990
tp5557
a(g706
g1099
tp5558
a(g827
g990
tp5559
a(g682
Vdefined
p5560
tp5561
a(g827
g990
tp5562
a(g441
g1048
tp5563
a(g441
VENV
p5564
tp5565
a(g706
g995
tp5566
a(g436
g1253
tp5567
a(g436
VOS2_SHELL
p5568
tp5569
a(g706
g1119
tp5570
a(g827
g990
tp5571
a(g427
Vand
p5572
tp5573
a(g827
g990
tp5574
a(g706
g1099
tp5575
a(g827
g990
tp5576
a(g441
g1048
tp5577
a(g441
Vslave_editor
p5578
tp5579
a(g827
g990
tp5580
a(g427
Vor
p5581
tp5582
a(g827
g990
tp5583
a(g441
g1048
tp5584
a(g441
VENV
p5585
tp5586
a(g706
g995
tp5587
a(g436
g1253
tp5588
a(g436
VWINDOWID
p5589
tp5590
a(g706
g1119
tp5591
a(g827
g990
tp5592
a(g706
g1104
tp5593
a(g827
g990
tp5594
a(g706
g1104
tp5595
a(g827
V\u000a    
p5596
tp5597
a(g706
g995
tp5598
a(g827
V    
p5599
tp5600
a(g906
V# In OS/2
p5601
tp5602
a(g827
V\u000a        
p5603
tp5604
a(g441
g1048
tp5605
a(g441
Vconsole
p5606
tp5607
a(g827
g990
tp5608
a(g413
g1054
tp5609
a(g827
g990
tp5610
a(g682
Vundef
p5611
tp5612
a(g706
g1018
tp5613
a(g827
V\u000a    
p5614
tp5615
a(g706
g1119
tp5616
a(g827
V\u000a\u000a    
p5617
tp5618
a(g906
V# EPOC also falls into the 'got to use STDIN' camp.
p5619
tp5620
a(g827
V\u000a    
p5621
tp5622
a(g745
Vif
p5623
tp5624
a(g827
g990
tp5625
a(g706
g1099
tp5626
a(g827
g990
tp5627
a(g470
V$^O
p5628
tp5629
a(g827
g990
tp5630
a(g427
Veq
p5631
tp5632
a(g827
g990
tp5633
a(g89
V'epoc'
p5634
tp5635
a(g827
g990
tp5636
a(g706
g1104
tp5637
a(g827
g990
tp5638
a(g706
g995
tp5639
a(g827
V\u000a        
p5640
tp5641
a(g441
g1048
tp5642
a(g441
Vconsole
p5643
tp5644
a(g827
g990
tp5645
a(g413
g1054
tp5646
a(g827
g990
tp5647
a(g682
Vundef
p5648
tp5649
a(g706
g1018
tp5650
a(g827
V\u000a    
p5651
tp5652
a(g706
g1119
tp5653
a(g827
V\u000a\u000a
p5654
tp5655
a(g8
V=pod\u000a\u000aIf there is a TTY hanging around from a parent, we use that as the console.\u000a\u000a=cut
p5656
tp5657
a(g827
V\u000a\u000a    
p5658
tp5659
a(g441
g1048
tp5660
a(g441
Vconsole
p5661
tp5662
a(g827
g990
tp5663
a(g413
g1054
tp5664
a(g827
g990
tp5665
a(g441
g1048
tp5666
a(g441
Vtty
p5667
tp5668
a(g827
g990
tp5669
a(g745
Vif
p5670
tp5671
a(g827
g990
tp5672
a(g682
Vdefined
p5673
tp5674
a(g827
g990
tp5675
a(g441
g1048
tp5676
a(g441
Vtty
p5677
tp5678
a(g706
g1018
tp5679
a(g827
V\u000a\u000a
p5680
tp5681
a(g8
V=head2 SOCKET HANDLING   \u000a\u000aThe debugger is capable of opening a socket and carrying out a debugging\u000asession over the socket.\u000a\u000aIf C<RemotePort> was defined in the options, the debugger assumes that it\u000ashould try to start a debugging session on that port. It builds the socket\u000aand then tries to connect the input and output filehandles to it.\u000a\u000a=cut
p5682
tp5683
a(g827
V\u000a\u000a    
p5684
tp5685
a(g906
V# Handle socket stuff.
p5686
tp5687
a(g827
V\u000a\u000a    
p5688
tp5689
a(g745
Vif
p5690
tp5691
a(g827
g990
tp5692
a(g706
g1099
tp5693
a(g827
g990
tp5694
a(g682
Vdefined
p5695
tp5696
a(g827
g990
tp5697
a(g441
g1048
tp5698
a(g441
Vremoteport
p5699
tp5700
a(g827
g990
tp5701
a(g706
g1104
tp5702
a(g827
g990
tp5703
a(g706
g995
tp5704
a(g827
V\u000a\u000a        
p5705
tp5706
a(g906
V# If RemotePort was defined in the options, connect input and output
p5707
tp5708
a(g827
V\u000a        
p5709
tp5710
a(g906
V# to the socket.
p5711
tp5712
a(g827
V\u000a        
p5713
tp5714
a(g745
Vrequire
p5715
tp5716
a(g827
g990
tp5717
a(g621
VIO::Socket
p5718
tp5719
a(g706
g1018
tp5720
a(g827
V\u000a        
p5721
tp5722
a(g441
g1048
tp5723
a(g441
VOUT
p5724
tp5725
a(g827
g990
tp5726
a(g413
g1054
tp5727
a(g827
g990
tp5728
a(g745
Vnew
p5729
tp5730
a(g827
g990
tp5731
a(g436
g1253
tp5732
a(g621
VIO::Socket::
p5733
tp5734
a(g436
g1253
tp5735
a(g436
VINET
p5736
tp5737
a(g706
g1099
tp5738
a(g827
V\u000a            
p5739
tp5740
a(g436
g1253
tp5741
a(g436
VTimeout
p5742
tp5743
a(g827
V  
p5744
tp5745
a(g413
g1054
tp5746
a(g413
g2206
tp5747
a(g827
g990
tp5748
a(g89
V'10'
p5749
tp5750
a(g706
g1389
tp5751
a(g827
V\u000a            
p5752
tp5753
a(g436
g1253
tp5754
a(g436
VPeerAddr
p5755
tp5756
a(g827
g990
tp5757
a(g413
g1054
tp5758
a(g413
g2206
tp5759
a(g827
g990
tp5760
a(g441
g1048
tp5761
a(g441
Vremoteport
p5762
tp5763
a(g706
g1389
tp5764
a(g827
V\u000a            
p5765
tp5766
a(g436
g1253
tp5767
a(g436
VProto
p5768
tp5769
a(g827
V    
p5770
tp5771
a(g413
g1054
tp5772
a(g413
g2206
tp5773
a(g827
g990
tp5774
a(g89
V'tcp'
p5775
tp5776
a(g706
g1389
tp5777
a(g827
V\u000a        
p5778
tp5779
a(g706
g1104
tp5780
a(g706
g1018
tp5781
a(g827
V\u000a        
p5782
tp5783
a(g745
Vif
p5784
tp5785
a(g827
g990
tp5786
a(g706
g1099
tp5787
a(g827
g990
tp5788
a(g413
V!
p5789
tp5790
a(g441
g1048
tp5791
a(g441
VOUT
p5792
tp5793
a(g827
g990
tp5794
a(g706
g1104
tp5795
a(g827
g990
tp5796
a(g706
g995
tp5797
a(g827
g990
tp5798
a(g682
Vdie
p5799
tp5800
a(g827
g990
tp5801
a(g89
V"Unable to connect to remote host: $remoteport\u005cn"
p5802
tp5803
a(g706
g1018
tp5804
a(g827
g990
tp5805
a(g706
g1119
tp5806
a(g827
V\u000a        
p5807
tp5808
a(g441
g1048
tp5809
a(g441
VIN
p5810
tp5811
a(g827
g990
tp5812
a(g413
g1054
tp5813
a(g827
g990
tp5814
a(g441
g1048
tp5815
a(g441
VOUT
p5816
tp5817
a(g706
g1018
tp5818
a(g827
V\u000a    
p5819
tp5820
a(g706
g1119
tp5821
a(g827
g990
tp5822
a(g906
V## end if (defined $remoteport)
p5823
tp5824
a(g827
V\u000a\u000a
p5825
tp5826
a(g8
V=pod\u000a\u000aIf no C<RemotePort> was defined, and we want to create a TTY on startup,\u000athis is probably a situation where multiple debuggers are running (for example,\u000aa backticked command that starts up another debugger). We create a new IN and\u000aOUT filehandle, and do the necessary mojo to create a new TTY if we know how\u000aand if we can.\u000a\u000a=cut
p5827
tp5828
a(g827
V\u000a\u000a    
p5829
tp5830
a(g906
V# Non-socket.
p5831
tp5832
a(g827
V\u000a    
p5833
tp5834
a(g745
Velse
p5835
tp5836
a(g827
g990
tp5837
a(g706
g995
tp5838
a(g827
V\u000a\u000a        
p5839
tp5840
a(g906
V# Two debuggers running (probably a system or a backtick that invokes
p5841
tp5842
a(g827
V\u000a        
p5843
tp5844
a(g906
V# the debugger itself under the running one). create a new IN and OUT
p5845
tp5846
a(g827
V\u000a        
p5847
tp5848
a(g906
V# filehandle, and do the necessary mojo to create a new tty if we
p5849
tp5850
a(g827
V\u000a        
p5851
tp5852
a(g906
V# know how, and we can.
p5853
tp5854
a(g827
V\u000a        
p5855
tp5856
a(g436
g1253
tp5857
a(g436
Vcreate_IN_OUT
p5858
tp5859
a(g706
g1099
tp5860
a(g37
V4
p5861
tp5862
a(g706
g1104
tp5863
a(g827
g990
tp5864
a(g745
Vif
p5865
tp5866
a(g827
g990
tp5867
a(g441
g1048
tp5868
a(g441
VCreateTTY
p5869
tp5870
a(g827
g990
tp5871
a(g413
g1251
tp5872
a(g827
g990
tp5873
a(g37
g5861
tp5874
a(g706
g1018
tp5875
a(g827
V\u000a        
p5876
tp5877
a(g745
Vif
p5878
tp5879
a(g827
g990
tp5880
a(g706
g1099
tp5881
a(g441
g1048
tp5882
a(g441
Vconsole
p5883
tp5884
a(g706
g1104
tp5885
a(g827
g990
tp5886
a(g706
g995
tp5887
a(g827
V\u000a\u000a            
p5888
tp5889
a(g906
V# If we have a console, check to see if there are separate ins and
p5890
tp5891
a(g827
V\u000a            
p5892
tp5893
a(g906
V# outs to open. (They are assumed identiical if not.)
p5894
tp5895
a(g827
V\u000a\u000a            
p5896
tp5897
a(g745
Vmy
p5898
tp5899
a(g827
g990
tp5900
a(g706
g1099
tp5901
a(g827
g990
tp5902
a(g441
g1048
tp5903
a(g441
Vi
p5904
tp5905
a(g706
g1389
tp5906
a(g827
g990
tp5907
a(g441
g1048
tp5908
a(g441
Vo
p5909
tp5910
a(g827
g990
tp5911
a(g706
g1104
tp5912
a(g827
g990
tp5913
a(g413
g1054
tp5914
a(g827
g990
tp5915
a(g682
Vsplit
p5916
tp5917
a(g827
g990
tp5918
a(g197
V/,/
p5919
tp5920
a(g706
g1389
tp5921
a(g827
g990
tp5922
a(g441
g1048
tp5923
a(g441
Vconsole
p5924
tp5925
a(g706
g1018
tp5926
a(g827
V\u000a            
p5927
tp5928
a(g441
g1048
tp5929
a(g441
g5909
tp5930
a(g827
g990
tp5931
a(g413
g1054
tp5932
a(g827
g990
tp5933
a(g441
g1048
tp5934
a(g441
g5904
tp5935
a(g827
g990
tp5936
a(g745
Vunless
p5937
tp5938
a(g827
g990
tp5939
a(g682
Vdefined
p5940
tp5941
a(g827
g990
tp5942
a(g441
g1048
tp5943
a(g441
g5909
tp5944
a(g706
g1018
tp5945
a(g827
V\u000a\u000a            
p5946
tp5947
a(g906
V# read/write on in, or just read, or read on STDIN.
p5948
tp5949
a(g827
V\u000a            
p5950
tp5951
a(g682
Vopen
p5952
tp5953
a(g706
g1099
tp5954
a(g827
g990
tp5955
a(g436
g1253
tp5956
a(g436
VIN
p5957
tp5958
a(g706
g1389
tp5959
a(g827
V      
p5960
tp5961
a(g89
V"+<$i"
p5962
tp5963
a(g827
g990
tp5964
a(g706
g1104
tp5965
a(g827
V\u000a              
p5966
tp5967
a(g413
V||
p5968
tp5969
a(g827
g990
tp5970
a(g682
Vopen
p5971
tp5972
a(g706
g1099
tp5973
a(g827
g990
tp5974
a(g436
g1253
tp5975
a(g436
VIN
p5976
tp5977
a(g706
g1389
tp5978
a(g827
g990
tp5979
a(g89
V"<$i"
p5980
tp5981
a(g827
g990
tp5982
a(g706
g1104
tp5983
a(g827
V\u000a              
p5984
tp5985
a(g413
V||
p5986
tp5987
a(g827
g990
tp5988
a(g682
Vopen
p5989
tp5990
a(g706
g1099
tp5991
a(g827
g990
tp5992
a(g436
g1253
tp5993
a(g436
VIN
p5994
tp5995
a(g706
g1389
tp5996
a(g827
g990
tp5997
a(g89
V"<&STDIN"
p5998
tp5999
a(g827
g990
tp6000
a(g706
g1104
tp6001
a(g706
g1018
tp6002
a(g827
V\u000a\u000a            
p6003
tp6004
a(g906
V# read/write/create/clobber out, or write/create/clobber out,
p6005
tp6006
a(g827
V\u000a            
p6007
tp6008
a(g906
V# or merge with STDERR, or merge with STDOUT.
p6009
tp6010
a(g827
V\u000a                 
p6011
tp6012
a(g682
Vopen
p6013
tp6014
a(g706
g1099
tp6015
a(g827
g990
tp6016
a(g436
g1253
tp6017
a(g436
VOUT
p6018
tp6019
a(g706
g1389
tp6020
a(g827
g990
tp6021
a(g89
V"+>$o"
p6022
tp6023
a(g827
g990
tp6024
a(g706
g1104
tp6025
a(g827
V\u000a              
p6026
tp6027
a(g413
V||
p6028
tp6029
a(g827
g990
tp6030
a(g682
Vopen
p6031
tp6032
a(g706
g1099
tp6033
a(g827
g990
tp6034
a(g436
g1253
tp6035
a(g436
VOUT
p6036
tp6037
a(g706
g1389
tp6038
a(g827
g990
tp6039
a(g89
V">$o"
p6040
tp6041
a(g827
g990
tp6042
a(g706
g1104
tp6043
a(g827
V\u000a              
p6044
tp6045
a(g413
V||
p6046
tp6047
a(g827
g990
tp6048
a(g682
Vopen
p6049
tp6050
a(g706
g1099
tp6051
a(g827
g990
tp6052
a(g436
g1253
tp6053
a(g436
VOUT
p6054
tp6055
a(g706
g1389
tp6056
a(g827
g990
tp6057
a(g89
V">&STDERR"
p6058
tp6059
a(g827
g990
tp6060
a(g706
g1104
tp6061
a(g827
V\u000a              
p6062
tp6063
a(g413
V||
p6064
tp6065
a(g827
g990
tp6066
a(g682
Vopen
p6067
tp6068
a(g706
g1099
tp6069
a(g827
g990
tp6070
a(g436
g1253
tp6071
a(g436
VOUT
p6072
tp6073
a(g706
g1389
tp6074
a(g827
g990
tp6075
a(g89
V">&STDOUT"
p6076
tp6077
a(g827
g990
tp6078
a(g706
g1104
tp6079
a(g706
g1018
tp6080
a(g827
V    
p6081
tp6082
a(g906
V# so we don't dongle stdout
p6083
tp6084
a(g827
V\u000a\u000a        
p6085
tp6086
a(g706
g1119
tp6087
a(g827
g990
tp6088
a(g906
V## end if ($console)
p6089
tp6090
a(g827
V\u000a        
p6091
tp6092
a(g745
Velsif
p6093
tp6094
a(g827
g990
tp6095
a(g706
g1099
tp6096
a(g827
g990
tp6097
a(g427
Vnot
p6098
tp6099
a(g827
g990
tp6100
a(g682
Vdefined
p6101
tp6102
a(g827
g990
tp6103
a(g441
g1048
tp6104
a(g441
Vconsole
p6105
tp6106
a(g827
g990
tp6107
a(g706
g1104
tp6108
a(g827
g990
tp6109
a(g706
g995
tp6110
a(g827
V\u000a\u000a            
p6111
tp6112
a(g906
V# No console. Open STDIN.
p6113
tp6114
a(g827
V\u000a            
p6115
tp6116
a(g682
Vopen
p6117
tp6118
a(g706
g1099
tp6119
a(g827
g990
tp6120
a(g436
g1253
tp6121
a(g436
VIN
p6122
tp6123
a(g706
g1389
tp6124
a(g827
g990
tp6125
a(g89
V"<&STDIN"
p6126
tp6127
a(g827
g990
tp6128
a(g706
g1104
tp6129
a(g706
g1018
tp6130
a(g827
V\u000a\u000a            
p6131
tp6132
a(g906
V# merge with STDERR, or with STDOUT.
p6133
tp6134
a(g827
V\u000a            
p6135
tp6136
a(g682
Vopen
p6137
tp6138
a(g706
g1099
tp6139
a(g827
g990
tp6140
a(g436
g1253
tp6141
a(g436
VOUT
p6142
tp6143
a(g706
g1389
tp6144
a(g827
V      
p6145
tp6146
a(g89
V">&STDERR"
p6147
tp6148
a(g827
g990
tp6149
a(g706
g1104
tp6150
a(g827
V\u000a              
p6151
tp6152
a(g413
V||
p6153
tp6154
a(g827
g990
tp6155
a(g682
Vopen
p6156
tp6157
a(g706
g1099
tp6158
a(g827
g990
tp6159
a(g436
g1253
tp6160
a(g436
VOUT
p6161
tp6162
a(g706
g1389
tp6163
a(g827
g990
tp6164
a(g89
V">&STDOUT"
p6165
tp6166
a(g827
g990
tp6167
a(g706
g1104
tp6168
a(g706
g1018
tp6169
a(g827
V    
p6170
tp6171
a(g906
V# so we don't dongle stdout
p6172
tp6173
a(g827
V\u000a            
p6174
tp6175
a(g441
g1048
tp6176
a(g441
Vconsole
p6177
tp6178
a(g827
g990
tp6179
a(g413
g1054
tp6180
a(g827
g990
tp6181
a(g89
V'STDIN/OUT'
p6182
tp6183
a(g706
g1018
tp6184
a(g827
V\u000a        
p6185
tp6186
a(g706
g1119
tp6187
a(g827
g990
tp6188
a(g906
V## end elsif (not defined $console)
p6189
tp6190
a(g827
V\u000a\u000a        
p6191
tp6192
a(g906
V# Keep copies of the filehandles so that when the pager runs, it
p6193
tp6194
a(g827
V\u000a        
p6195
tp6196
a(g906
V# can close standard input without clobbering ours.
p6197
tp6198
a(g827
V\u000a        
p6199
tp6200
a(g441
g1048
tp6201
a(g441
VIN
p6202
tp6203
a(g827
g990
tp6204
a(g413
g1054
tp6205
a(g827
g990
tp6206
a(g413
V\u005c
p6207
tp6208
a(g413
g1804
tp6209
a(g436
g1253
tp6210
a(g436
VIN
p6211
tp6212
a(g706
g1389
tp6213
a(g827
g990
tp6214
a(g441
g1048
tp6215
a(g441
VOUT
p6216
tp6217
a(g827
g990
tp6218
a(g413
g1054
tp6219
a(g827
g990
tp6220
a(g413
V\u005c
p6221
tp6222
a(g413
g1804
tp6223
a(g436
g1253
tp6224
a(g436
VOUT
p6225
tp6226
a(g827
g990
tp6227
a(g745
Vif
p6228
tp6229
a(g827
g990
tp6230
a(g441
g1048
tp6231
a(g441
Vconsole
p6232
tp6233
a(g827
g990
tp6234
a(g427
Vor
p6235
tp6236
a(g827
g990
tp6237
a(g427
Vnot
p6238
tp6239
a(g827
g990
tp6240
a(g682
Vdefined
p6241
tp6242
a(g827
g990
tp6243
a(g441
g1048
tp6244
a(g441
Vconsole
p6245
tp6246
a(g706
g1018
tp6247
a(g827
V\u000a    
p6248
tp6249
a(g706
g1119
tp6250
a(g827
g990
tp6251
a(g906
V## end elsif (from if(defined $remoteport))
p6252
tp6253
a(g827
V\u000a\u000a    
p6254
tp6255
a(g906
V# Unbuffer DB::OUT. We need to see responses right away.
p6256
tp6257
a(g827
V\u000a    
p6258
tp6259
a(g745
Vmy
p6260
tp6261
a(g827
g990
tp6262
a(g441
g1048
tp6263
a(g441
Vprevious
p6264
tp6265
a(g827
g990
tp6266
a(g413
g1054
tp6267
a(g827
g990
tp6268
a(g682
Vselect
p6269
tp6270
a(g706
g1099
tp6271
a(g441
g1048
tp6272
a(g441
VOUT
p6273
tp6274
a(g706
g1104
tp6275
a(g706
g1018
tp6276
a(g827
V\u000a    
p6277
tp6278
a(g470
V$|
p6279
tp6280
a(g827
g990
tp6281
a(g413
g1054
tp6282
a(g827
g990
tp6283
a(g37
g2150
tp6284
a(g706
g1018
tp6285
a(g827
V                                  
p6286
tp6287
a(g906
V# for DB::OUT
p6288
tp6289
a(g827
V\u000a    
p6290
tp6291
a(g682
Vselect
p6292
tp6293
a(g706
g1099
tp6294
a(g441
g1048
tp6295
a(g441
Vprevious
p6296
tp6297
a(g706
g1104
tp6298
a(g706
g1018
tp6299
a(g827
V\u000a\u000a    
p6300
tp6301
a(g906
V# Line info goes to debugger output unless pointed elsewhere.
p6302
tp6303
a(g827
V\u000a    
p6304
tp6305
a(g906
V# Pointing elsewhere makes it possible for slave editors to
p6306
tp6307
a(g827
V\u000a    
p6308
tp6309
a(g906
V# keep track of file and position. We have both a filehandle
p6310
tp6311
a(g827
V\u000a    
p6312
tp6313
a(g906
V# and a I/O description to keep track of.
p6314
tp6315
a(g827
V\u000a    
p6316
tp6317
a(g441
g1048
tp6318
a(g441
VLINEINFO
p6319
tp6320
a(g827
g990
tp6321
a(g413
g1054
tp6322
a(g827
g990
tp6323
a(g441
g1048
tp6324
a(g441
VOUT
p6325
tp6326
a(g827
V     
p6327
tp6328
a(g745
Vunless
p6329
tp6330
a(g827
g990
tp6331
a(g682
Vdefined
p6332
tp6333
a(g827
g990
tp6334
a(g441
g1048
tp6335
a(g441
VLINEINFO
p6336
tp6337
a(g706
g1018
tp6338
a(g827
V\u000a    
p6339
tp6340
a(g441
g1048
tp6341
a(g441
Vlineinfo
p6342
tp6343
a(g827
g990
tp6344
a(g413
g1054
tp6345
a(g827
g990
tp6346
a(g441
g1048
tp6347
a(g441
Vconsole
p6348
tp6349
a(g827
g990
tp6350
a(g745
Vunless
p6351
tp6352
a(g827
g990
tp6353
a(g682
Vdefined
p6354
tp6355
a(g827
g990
tp6356
a(g441
g1048
tp6357
a(g441
Vlineinfo
p6358
tp6359
a(g706
g1018
tp6360
a(g827
V\u000a	
p6361
tp6362
a(g906
V# share($LINEINFO); # <- unable to share globs
p6363
tp6364
a(g827
V\u000a	
p6365
tp6366
a(g436
g1253
tp6367
a(g436
Vshare
p6368
tp6369
a(g706
g1099
tp6370
a(g441
g1048
tp6371
a(g441
Vlineinfo
p6372
tp6373
a(g706
g1104
tp6374
a(g706
g1018
tp6375
a(g827
V   
p6376
tp6377
a(g906
V# 
p6378
tp6379
a(g827
V\u000a\u000a
p6380
tp6381
a(g8
V=pod\u000a\u000aTo finish initialization, we show the debugger greeting,\u000aand then call the C<afterinit()> subroutine if there is one.\u000a\u000a=cut
p6382
tp6383
a(g827
V\u000a\u000a    
p6384
tp6385
a(g906
V# Show the debugger greeting.
p6386
tp6387
a(g827
V\u000a    
p6388
tp6389
a(g441
g1048
tp6390
a(g441
Vheader
p6391
tp6392
a(g827
g990
tp6393
a(g413
V=~
p6394
tp6395
a(g827
g990
tp6396
a(g197
Vs/.Header: ([^,]+),v(\u005cs+\u005cS+\u005cs+\u005cS+).*$/$1$2/
p6397
tp6398
a(g706
g1018
tp6399
a(g827
V\u000a    
p6400
tp6401
a(g745
Vunless
p6402
tp6403
a(g827
g990
tp6404
a(g706
g1099
tp6405
a(g441
g1048
tp6406
a(g441
Vrunnonstop
p6407
tp6408
a(g706
g1104
tp6409
a(g827
g990
tp6410
a(g706
g995
tp6411
a(g827
V\u000a        
p6412
tp6413
a(g682
Vlocal
p6414
tp6415
a(g827
g990
tp6416
a(g470
V$\u005c
p6417
tp6418
a(g827
g990
tp6419
a(g413
g1054
tp6420
a(g827
g990
tp6421
a(g89
V''
p6422
tp6423
a(g706
g1018
tp6424
a(g827
V\u000a        
p6425
tp6426
a(g682
Vlocal
p6427
tp6428
a(g827
g990
tp6429
a(g470
V$,
p6430
tp6431
a(g827
g990
tp6432
a(g413
g1054
tp6433
a(g827
g990
tp6434
a(g89
V''
p6435
tp6436
a(g706
g1018
tp6437
a(g827
V\u000a        
p6438
tp6439
a(g745
Vif
p6440
tp6441
a(g827
g990
tp6442
a(g706
g1099
tp6443
a(g827
g990
tp6444
a(g441
g1048
tp6445
a(g441
Vterm_pid
p6446
tp6447
a(g827
g990
tp6448
a(g427
Veq
p6449
tp6450
a(g827
g990
tp6451
a(g89
V'-1'
p6452
tp6453
a(g827
g990
tp6454
a(g706
g1104
tp6455
a(g827
g990
tp6456
a(g706
g995
tp6457
a(g827
V\u000a            
p6458
tp6459
a(g745
Vprint
p6460
tp6461
a(g827
g990
tp6462
a(g441
g1048
tp6463
a(g441
VOUT
p6464
tp6465
a(g827
g990
tp6466
a(g89
V"\u005cnDaughter DB session started...\u005cn"
p6467
tp6468
a(g706
g1018
tp6469
a(g827
V\u000a        
p6470
tp6471
a(g706
g1119
tp6472
a(g827
V\u000a        
p6473
tp6474
a(g745
Velse
p6475
tp6476
a(g827
g990
tp6477
a(g706
g995
tp6478
a(g827
V\u000a            
p6479
tp6480
a(g745
Vprint
p6481
tp6482
a(g827
g990
tp6483
a(g441
g1048
tp6484
a(g441
VOUT
p6485
tp6486
a(g827
g990
tp6487
a(g89
V"\u005cnLoading DB routines from $header\u005cn"
p6488
tp6489
a(g706
g1018
tp6490
a(g827
V\u000a            
p6491
tp6492
a(g745
Vprint
p6493
tp6494
a(g827
g990
tp6495
a(g441
g1048
tp6496
a(g441
VOUT
p6497
tp6498
a(g827
g990
tp6499
a(g706
g1099
tp6500
a(g827
V\u000a                
p6501
tp6502
a(g89
V"Editor support "
p6503
tp6504
a(g706
g1389
tp6505
a(g827
V\u000a                
p6506
tp6507
a(g441
g1048
tp6508
a(g441
Vslave_editor
p6509
tp6510
a(g827
g990
tp6511
a(g706
g3349
tp6512
a(g827
g990
tp6513
a(g89
V"enabled"
p6514
tp6515
a(g827
g990
tp6516
a(g706
g3366
tp6517
a(g827
g990
tp6518
a(g89
V"available"
p6519
tp6520
a(g706
g1389
tp6521
a(g827
g990
tp6522
a(g89
V".\u005cn"
p6523
tp6524
a(g827
V\u000a            
p6525
tp6526
a(g706
g1104
tp6527
a(g706
g1018
tp6528
a(g827
V\u000a            
p6529
tp6530
a(g745
Vprint
p6531
tp6532
a(g827
g990
tp6533
a(g441
g1048
tp6534
a(g441
VOUT
p6535
tp6536
a(g827
V\u000a
p6537
tp6538
a(g89
V"\u005cnEnter h or `h h' for help, or `$doccmd perldebug' for more help.\u005cn\u005cn"
p6539
tp6540
a(g706
g1018
tp6541
a(g827
V\u000a        
p6542
tp6543
a(g706
g1119
tp6544
a(g827
g990
tp6545
a(g906
V## end else [ if ($term_pid eq '-1')
p6546
tp6547
a(g827
V\u000a    
p6548
tp6549
a(g706
g1119
tp6550
a(g827
g990
tp6551
a(g906
V## end unless ($runnonstop)
p6552
tp6553
a(g827
V\u000a
p6554
tp6555
a(g706
g1119
tp6556
a(g827
g990
tp6557
a(g906
V## end else [ if ($notty)
p6558
tp6559
a(g827
V\u000a\u000a
p6560
tp6561
a(g906
V# XXX This looks like a bug to me.
p6562
tp6563
a(g827
V\u000a
p6564
tp6565
a(g906
V# Why copy to @ARGS and then futz with @args?
p6566
tp6567
a(g827
V\u000a
p6568
tp6569
a(g441
g1014
tp6570
a(g441
VARGS
p6571
tp6572
a(g827
g990
tp6573
a(g413
g1054
tp6574
a(g827
g990
tp6575
a(g441
g1014
tp6576
a(g441
VARGV
p6577
tp6578
a(g706
g1018
tp6579
a(g827
V\u000a
p6580
tp6581
a(g745
Vfor
p6582
tp6583
a(g827
g990
tp6584
a(g706
g1099
tp6585
a(g441
g1014
tp6586
a(g441
Vargs
p6587
tp6588
a(g706
g1104
tp6589
a(g827
g990
tp6590
a(g706
g995
tp6591
a(g827
V\u000a    
p6592
tp6593
a(g906
V# Make sure backslashes before single quotes are stripped out, and
p6594
tp6595
a(g827
V\u000a    
p6596
tp6597
a(g906
V# keep args unless they are numeric (XXX why?)
p6598
tp6599
a(g827
V\u000a    
p6600
tp6601
a(g906
V# s/\u005c'/\u005c\u005c\u005c'/g;                      # removed while not justified understandably
p6602
tp6603
a(g827
V\u000a    
p6604
tp6605
a(g906
V# s/(.*)/'$1'/ unless /^-?[\u005cd.]+$/; # ditto
p6606
tp6607
a(g827
V\u000a
p6608
tp6609
a(g706
g1119
tp6610
a(g827
V\u000a\u000a
p6611
tp6612
a(g906
V# If there was an afterinit() sub defined, call it. It will get
p6613
tp6614
a(g827
V\u000a
p6615
tp6616
a(g906
V# executed in our scope, so it can fiddle with debugger globals.
p6617
tp6618
a(g827
V\u000a
p6619
tp6620
a(g745
Vif
p6621
tp6622
a(g827
g990
tp6623
a(g706
g1099
tp6624
a(g827
g990
tp6625
a(g682
Vdefined
p6626
tp6627
a(g827
g990
tp6628
a(g413
g1251
tp6629
a(g436
g1253
tp6630
a(g436
Vafterinit
p6631
tp6632
a(g827
g990
tp6633
a(g706
g1104
tp6634
a(g827
g990
tp6635
a(g706
g995
tp6636
a(g827
V    
p6637
tp6638
a(g906
V# May be defined in $rcfile
p6639
tp6640
a(g827
V\u000a    
p6641
tp6642
a(g413
g1251
tp6643
a(g436
g1253
tp6644
a(g436
Vafterinit
p6645
tp6646
a(g706
g1099
tp6647
a(g706
g1104
tp6648
a(g706
g1018
tp6649
a(g827
V\u000a
p6650
tp6651
a(g706
g1119
tp6652
a(g827
V\u000a\u000a
p6653
tp6654
a(g906
V# Inform us about "Stack dump during die enabled ..." in dieLevel().
p6655
tp6656
a(g827
V\u000a
p6657
tp6658
a(g441
g1048
tp6659
a(g441
VI_m_init
p6660
tp6661
a(g827
g990
tp6662
a(g413
g1054
tp6663
a(g827
g990
tp6664
a(g37
g2150
tp6665
a(g706
g1018
tp6666
a(g827
V\u000a
p6667
tp6668
a.