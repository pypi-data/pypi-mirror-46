[tox]
minversion = 2.0
envlist = py35,py27,pypy,pep8

[testenv]
setenv =
    VIRTUAL_ENV={envdir}
    BRANCH_NAME=master
    CLIENT_NAME=oslo.cache
install_command = {toxinidir}/tools/tox_install.sh {env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky} {opts} {packages}
deps = .[dogpile]
       .[mongo]
       .[etcd3gw]
       -r{toxinidir}/test-requirements.txt
commands =
    find . -type f -name "*.pyc" -delete
    stestr run --slowest {posargs}

[testenv:py27-functional-etcd3gw]
commands =
    find . -type f -name "*.pyc" -delete
    {toxinidir}/tools/setup-etcd-env.sh pifpaf -e OSLO_CACHE_TEST run etcd --  stestr run --slowest functional.*

[testenv:py35-functional-etcd3gw]
commands =
    find . -type f -name "*.pyc" -delete
    {toxinidir}/tools/setup-etcd-env.sh pifpaf -e OSLO_CACHE_TEST run etcd --  stestr run --slowest functional.*

[testenv:pep8]
basepython = python3
deps =
  -r{toxinidir}/test-requirements.txt
commands =
  flake8
  # Run security linter
  bandit -r oslo_cache -x tests -n5

[testenv:venv]
commands = {posargs}

[testenv:docs]
whitelist_externals = rm
deps = -r{toxinidir}/doc/requirements.txt
commands =
    rm -fr doc/build
    sphinx-build -b html doc/source doc/build/html

[testenv:cover]
basepython = python3
setenv =
    PYTHON=coverage run --source $project --parallel-mode
commands =
    stestr run '{posargs}'
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[flake8]
show-source = True
ignore = H405
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build

[hacking]
import_exceptions =

[testenv:releasenotes]
deps = -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  .[dogpile,mongo,etcd3gw]
