.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.py.editor

.. highlight:: python



.. _wx.py.editor.EditorFrame:

==========================================================================================================================================
|phoenix_title|  **wx.py.editor.EditorFrame**
==========================================================================================================================================

Frame containing one editor.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>EditorFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.py.editor.EditorFrame_inheritance.png" alt="Inheritance diagram of EditorFrame" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.Window.html" title="wx.Window" alt="" coords="59,237,148,267"/> <area shape="rect" id="node9" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="25,315,183,344"/> <area shape="rect" id="node2" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="43,160,164,189"/> <area shape="rect" id="node3" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="48,83,159,112"/> <area shape="rect" id="node4" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,87,35"/> <area shape="rect" id="node5" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="112,5,213,35"/> <area shape="rect" id="node6" href="wx.Frame.html" title="wx.Frame" alt="" coords="63,469,144,499"/> <area shape="rect" id="node8" href="wx.py.frame.Frame.html" title="wx.py.frame.Frame" alt="" coords="33,547,173,576"/> <area shape="rect" id="node7" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="33,392,175,421"/> <area shape="rect" id="node10" href="wx.py.editor.EditorFrame.html" title="wx.py.editor.EditorFrame" alt="" coords="16,624,192,653"/> </map> 
   </p>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.py.editor.EditorNotebookFrame`

|


|super_classes| Known Superclasses
==================================

:class:`wx.py.frame.Frame`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.py.editor.EditorFrame.__init__`                                       Create EditorFrame instance.
:meth:`~wx.py.editor.EditorFrame.bufferClose`                                    Close buffer.
:meth:`~wx.py.editor.EditorFrame.bufferCreate`                                   Create new buffer.
:meth:`~wx.py.editor.EditorFrame.bufferDestroy`                                  Destroy the current buffer.
:meth:`~wx.py.editor.EditorFrame.bufferHasChanged`                               Return ``True`` if buffer has changed since last save.
:meth:`~wx.py.editor.EditorFrame.bufferNew`                                      Create new buffer.
:meth:`~wx.py.editor.EditorFrame.bufferOpen`                                     Open file in buffer.
:meth:`~wx.py.editor.EditorFrame.bufferSave`                                     Save buffer to its file.
:meth:`~wx.py.editor.EditorFrame.bufferSaveAs`                                   Save buffer to a new filename.
:meth:`~wx.py.editor.EditorFrame.bufferSuggestSave`                              Suggest saving changes.  Return ``True`` if user selected Cancel.
:meth:`~wx.py.editor.EditorFrame.hasBuffer`                                      Return ``True`` if there is a current buffer.
:meth:`~wx.py.editor.EditorFrame.OnAbout`                                        Display an About window.
:meth:`~wx.py.editor.EditorFrame.OnClose`                                        Event handler for closing.
:meth:`~wx.py.editor.EditorFrame.OnIdle`                                         Event handler for idle time.
:meth:`~wx.py.editor.EditorFrame.setEditor`                                      
:meth:`~wx.py.editor.EditorFrame.updateNamespace`                                Update the buffer namespace for autocompletion and calltips.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: EditorFrame(frame.Frame)

   Frame containing one editor.

   .. method:: __init__(self, parent=None, id=-1, title='PyAlaCarte', pos=wx.DefaultPosition, size=(800, 600), style=wx.DEFAULT_FRAME_STYLE | wx.NO_FULL_REPAINT_ON_RESIZE, filename=None)

      Create EditorFrame instance.


   .. method:: bufferClose(self)

      Close buffer.


   .. method:: bufferCreate(self, filename=None)

      Create new buffer.


   .. method:: bufferDestroy(self)

      Destroy the current buffer.


   .. method:: bufferHasChanged(self)

      Return ``True`` if buffer has changed since last save.


   .. method:: bufferNew(self)

      Create new buffer.


   .. method:: bufferOpen(self)

      Open file in buffer.


   .. method:: bufferSave(self)

      Save buffer to its file.


   .. method:: bufferSaveAs(self)

      Save buffer to a new filename.


   .. method:: bufferSuggestSave(self)

      Suggest saving changes.  Return ``True`` if user selected Cancel.


   .. method:: hasBuffer(self)

      Return ``True`` if there is a current buffer.


   .. method:: OnAbout(self, event)

      Display an About window.


   .. method:: OnClose(self, event)

      Event handler for closing.


   .. method:: OnIdle(self, event)

      Event handler for idle time.


   .. method:: setEditor(self, editor)


   .. method:: updateNamespace(self)

      Update the buffer namespace for autocompletion and calltips.


