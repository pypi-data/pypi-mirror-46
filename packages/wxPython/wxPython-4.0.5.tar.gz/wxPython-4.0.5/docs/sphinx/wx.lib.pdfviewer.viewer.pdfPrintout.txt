.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.pdfviewer.viewer

.. highlight:: python



.. _wx.lib.pdfviewer.viewer.pdfPrintout:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pdfviewer.viewer.pdfPrintout**
==========================================================================================================================================

Class encapsulating the functionality of printing out the document. The methods below
over-ride those of the base class and supply document-specific information to the
printing framework that calls them internally.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>pdfPrintout</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.pdfviewer.viewer.pdfPrintout_inheritance.png" alt="Inheritance diagram of pdfPrintout" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.pdfviewer.viewer.pdfPrintout.html" title="wx.lib.pdfviewer.viewer.pdfPrintout" alt="" coords="5,160,240,189"/> <area shape="rect" id="node2" href="wx.Printout.html" title="wx.Printout" alt="" coords="77,83,168,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="81,5,163,35"/> </map> 
   </p>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Printout`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.pdfviewer.viewer.pdfPrintout.__init__`                            Pass in the instance of dpViewer to be printed.
:meth:`~wx.lib.pdfviewer.viewer.pdfPrintout.GetPageInfo`                         Supply maximum range of pages and the range to be printed
:meth:`~wx.lib.pdfviewer.viewer.pdfPrintout.HasPage`                             Report whether pageno exists.
:meth:`~wx.lib.pdfviewer.viewer.pdfPrintout.OnPrintPage`                         Provide the data for page by rendering the drawing commands
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: pdfPrintout(wx.Printout)

   Class encapsulating the functionality of printing out the document. The methods below
   over-ride those of the base class and supply document-specific information to the
   printing framework that calls them internally.

   .. method:: __init__(self, title, view)

      Pass in the instance of dpViewer to be printed.


   .. method:: GetPageInfo(self)

      Supply maximum range of pages and the range to be printed
      These are initial values passed to Printer dialog, where they
      can be amended by user.


   .. method:: HasPage(self, pageno)

      Report whether pageno exists.


   .. method:: OnPrintPage(self, page)

      Provide the data for page by rendering the drawing commands
      to the printer DC, MuPDF returns the page content from an internally
      generated bitmap and sfac sets it to a high enough resolution that
      reduces anti-aliasing blur but keeps it small to minimise printing time


