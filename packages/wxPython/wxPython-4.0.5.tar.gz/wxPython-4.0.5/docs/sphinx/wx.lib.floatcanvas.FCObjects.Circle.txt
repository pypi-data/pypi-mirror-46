.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.floatcanvas.FCObjects

.. highlight:: python



.. _wx.lib.floatcanvas.FCObjects.Circle:

==========================================================================================================================================
|phoenix_title|  **wx.lib.floatcanvas.FCObjects.Circle**
==========================================================================================================================================

Draws a circle



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>Circle</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.floatcanvas.FCObjects.Circle_inheritance.png" alt="Inheritance diagram of Circle" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.floatcanvas.FCObjects.XYObjectMixin.html" title="wx.lib.floatcanvas.FCObjects.XYObjectMixin" alt="" coords="5,83,296,112"/> <area shape="rect" id="node5" href="wx.lib.floatcanvas.FCObjects.Circle.html" title="wx.lib.floatcanvas.FCObjects.Circle" alt="" coords="352,160,592,189"/> <area shape="rect" id="node2" href="wx.lib.floatcanvas.FCObjects.LineAndFillMixin.html" title="wx.lib.floatcanvas.FCObjects.LineAndFillMixin" alt="" coords="321,83,623,112"/> <area shape="rect" id="node3" href="wx.lib.floatcanvas.FCObjects.LineOnlyMixin.html" title="wx.lib.floatcanvas.FCObjects.LineOnlyMixin" alt="" coords="327,5,617,35"/> <area shape="rect" id="node4" href="wx.lib.floatcanvas.FCObjects.DrawObject.html" title="wx.lib.floatcanvas.FCObjects.DrawObject" alt="" coords="647,83,925,112"/> </map> 
   </p>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.floatcanvas.FCObjects.DrawObject`, :class:`wx.lib.floatcanvas.FCObjects.LineAndFillMixin`, :class:`wx.lib.floatcanvas.FCObjects.XYObjectMixin`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.floatcanvas.FCObjects.Circle.__init__`                            Default class constructor.
:meth:`~wx.lib.floatcanvas.FCObjects.Circle.CalcBoundingBox`                     Calculate the bounding box of the object.
:meth:`~wx.lib.floatcanvas.FCObjects.Circle.SetDiameter`                         Set the diameter of the object
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: Circle(XYObjectMixin, LineAndFillMixin, DrawObject)

   Draws a circle

   .. method:: __init__(self, XY, Diameter, LineColor = "Black", LineStyle = "Solid", LineWidth    = 1, FillColor    = None, FillStyle    = "Solid", InForeground = False)

      Default class constructor.
      
      :param `XY`: the (x, y) coordinate of the center of the circle, or a 2-tuple,
       or a (2,) `NumPy <http://www.numpy.org/>`_ array
      :param integer `Diameter`: the diameter for the object
      :param `LineColor`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
      :param `LineStyle`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetLineStyle`
      :param `LineWidth`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetLineWidth`
      :param `FillColor`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
      :param `FillStyle`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetFillStyle`
      :param boolean `InForeground`: should object be in foreground


   .. method:: CalcBoundingBox(self)

      Calculate the bounding box of the object.


   .. method:: SetDiameter(self, Diameter)

      Set the diameter of the object
      
      :param integer `Diameter`: the diameter for the object


