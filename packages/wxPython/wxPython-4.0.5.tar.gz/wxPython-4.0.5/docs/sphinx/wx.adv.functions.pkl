(dp1
S'CreateFileTipProvider'
p2
S'\n.. function:: wx.adv.CreateFileTipProvider(filename, currentTip)\n\n   This function creates a :ref:`wx.adv.TipProvider`  which may be used with :ref:`wx.adv.ShowTip`.                  \n\n\n\n\n   :param `filename`: The name of the file containing the tips, one per line.   \n   :type `filename`: string\n   :param `currentTip`: The index of the first tip to show. Normally this index is remembered between the 2 program runs.  \n   :type `currentTip`: int\n\n\n\n\n\n\n\n\n   :rtype: :ref:`wx.adv.TipProvider`\n\n\n\n\n                  \n\n\n\n   .. seealso:: :ref:`TipProvider Overview <tipprovider overview>`  \n\n\n\n\n\n'
p3
sS'GenericAboutBox'
p4
V\u000a.. function:: wx.adv.GenericAboutBox(info, parent=None)\u000a\u000a   This function does the same thing as :ref:`wx.adv.AboutBox`  except that it always uses the generic wxWidgets version of the dialog instead of the native one.                  \u000a\u000a   This is mainly useful if you need to customize the dialog by e.g. adding custom controls to it (customizing the native dialog is not currently supported). \u000a\u000a   See the :ref:`Dialogs Sample <dialogs sample>`  for an example of about dialog customization. \u000a\u000a\u000a                \u000a\u000a\u000a   :param `info`: \u000a   :type `info`: wx.adv.AboutDialogInfo\u000a   :param `parent`: \u000a   :type `parent`: wx.Window\u000a\u000a\u000a\u000a\u000a\u000a\u000a   .. seealso:: :ref:`wx.adv.AboutDialogInfo`  \u000a\u000a\u000a\u000a\u000a\u000a
p5
sS'AboutBox'
p6
V\u000a.. function:: wx.adv.AboutBox(info, parent=None)\u000a\u000a   This function shows the standard about dialog containing the information specified in `info`.                  \u000a\u000a   If the current platform has a native about dialog which is capable of showing all the fields in `info`, the native dialog is used, otherwise the function falls back to the generic wxWidgets version of the dialog, i.e. does the same thing as GenericAboutBox. \u000a\u000a   Here is an example of how this function may be used: \u000a\u000a   ::\u000a\u000a           def ShowSimpleAboutDialog(self, event):\u000a\u000a               info = wx.adv.AboutDialogInfo()\u000a               info.SetName(_("My Program"))\u000a               info.SetVersion(_("1.2.3 Beta"))\u000a               info.SetDescription(_("This program does something great."))\u000a               info.SetCopyright(wx.T("(C) 2007 Me <my@email.addre.ss>"))\u000a\u000a               wx.adv.AboutBox(info)\u000a\u000a\u000a\u000a   Please see the :ref:`Dialogs Sample <dialogs sample>`  for more examples of using this function and :ref:`wx.adv.AboutDialogInfo`  for the description of the information which can be shown in the about dialog. \u000a\u000a                \u000a\u000a\u000a   :param `info`: \u000a   :type `info`: wx.adv.AboutDialogInfo\u000a   :param `parent`: \u000a   :type `parent`: wx.Window\u000a\u000a\u000a\u000a\u000a
p7
sS'ShowTip'
p8
V\u000a.. function:: wx.adv.ShowTip(parent, tipProvider, showAtStartup=True)\u000a\u000a   This function shows a "startup tip" to the user.                  \u000a\u000a   The return value is the state of the "Show tips at startup" checkbox. \u000a\u000a\u000a\u000a\u000a   :param `parent`: The parent window for the modal dialog.   \u000a   :type `parent`: wx.Window\u000a   :param `tipProvider`: An object which is used to get the text of the tips. It may be created with the :ref:`wx.adv.CreateFileTipProvider`  function.   \u000a   :type `tipProvider`: wx.adv.TipProvider\u000a   :param `showAtStartup`: Should be ``True`` if startup tips are shown, ``False`` otherwise. This is used as the initial value for "Show tips at startup" checkbox which is shown in the tips dialog.  \u000a   :type `showAtStartup`: bool\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a   :rtype: `bool`\u000a\u000a\u000a\u000a\u000a                  \u000a\u000a\u000a\u000a   .. seealso:: :ref:`TipProvider Overview <tipprovider overview>`  \u000a\u000a\u000a\u000a\u000a\u000a
p9
s.