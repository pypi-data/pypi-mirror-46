.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.floatcanvas.FCObjects

.. highlight:: python



.. _wx.lib.floatcanvas.FCObjects.ArrowLine:

==========================================================================================================================================
|phoenix_title|  **wx.lib.floatcanvas.FCObjects.ArrowLine**
==========================================================================================================================================

Draws an arrow line.

It will draw a set of arrows from point to point.

It takes a list of 2-tuples, or a NX2 NumPy Float array of point coordinates.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ArrowLine</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.floatcanvas.FCObjects.ArrowLine_inheritance.png" alt="Inheritance diagram of ArrowLine" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.floatcanvas.FCObjects.DrawObject.html" title="wx.lib.floatcanvas.FCObjects.DrawObject" alt="" coords="5,5,283,35"/> <area shape="rect" id="node3" href="wx.lib.floatcanvas.FCObjects.ArrowLine.html" title="wx.lib.floatcanvas.FCObjects.ArrowLine" alt="" coords="320,83,587,112"/> <area shape="rect" id="node2" href="wx.lib.floatcanvas.FCObjects.LineOnlyMixin.html" title="wx.lib.floatcanvas.FCObjects.LineOnlyMixin" alt="" coords="308,5,599,35"/> <area shape="rect" id="node4" href="wx.lib.floatcanvas.FCObjects.PointsObjectMixin.html" title="wx.lib.floatcanvas.FCObjects.PointsObjectMixin" alt="" coords="623,5,940,35"/> </map> 
   </p>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.floatcanvas.FCObjects.DrawObject`, :class:`wx.lib.floatcanvas.FCObjects.LineOnlyMixin`, :class:`wx.lib.floatcanvas.FCObjects.PointsObjectMixin`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.floatcanvas.FCObjects.ArrowLine.__init__`                         Default class constructor.
:meth:`~wx.lib.floatcanvas.FCObjects.ArrowLine.CalcArrowPoints`                  Calculate the arrow points.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: ArrowLine(PointsObjectMixin, LineOnlyMixin, DrawObject)

   Draws an arrow line.
   
   It will draw a set of arrows from point to point.
   
   It takes a list of 2-tuples, or a NX2 NumPy Float array of point coordinates.

   .. method:: __init__(self, Points, LineColor = "Black", LineStyle = "Solid", LineWidth    = 1, ArrowHeadSize = 8, ArrowHeadAngle = 30, InForeground = False)

      Default class constructor.
      
      :param `Points`: takes a 2-tuple, or a (2,)
       `NumPy <http://www.numpy.org/>`_ array of point coordinates
      :param `LineColor`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
      :param `LineStyle`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetLineStyle`
      :param `LineWidth`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetLineWidth`
      :param `ArrowHeadSize`: size of arrow head in pixels
      :param `ArrowHeadAngle`: angle of arrow head in degrees
      :param boolean `InForeground`: should object be in foreground


   .. method:: CalcArrowPoints(self)

      Calculate the arrow points.


