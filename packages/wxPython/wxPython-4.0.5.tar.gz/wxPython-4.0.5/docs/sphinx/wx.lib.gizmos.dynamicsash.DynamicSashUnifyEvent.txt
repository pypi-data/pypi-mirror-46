.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.gizmos.dynamicsash

.. highlight:: python



.. _wx.lib.gizmos.dynamicsash.DynamicSashUnifyEvent:

==========================================================================================================================================
|phoenix_title|  **wx.lib.gizmos.dynamicsash.DynamicSashUnifyEvent**
==========================================================================================================================================

DynamicSashUnifyEvents are sent to your view by DynamicSashWindow whenever
the sash which splits your view and its sibling is being reunified such
that your view is expanding to replace its sibling. You needn't do
anything with this event if you are allowing DynamicSashWindow to manage
your view's scrollbars, but it is useful if you are managing the
scrollbars yourself so that you can keep the scrollbars' event handlers
connected to your view's event handler class.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DynamicSashUnifyEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.gizmos.dynamicsash.DynamicSashUnifyEvent_inheritance.png" alt="Inheritance diagram of DynamicSashUnifyEvent" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.CommandEvent.html" title="wx.CommandEvent" alt="" coords="110,160,255,189"/> <area shape="rect" id="node5" href="wx.PyCommandEvent.html" title="wx.PyCommandEvent" alt="" coords="103,237,261,267"/> <area shape="rect" id="node2" href="wx.Event.html" title="wx.Event" alt="" coords="143,83,221,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="141,5,223,35"/> <area shape="rect" id="node4" href="wx.lib.gizmos.dynamicsash.DynamicSashUnifyEvent.html" title="wx.lib.gizmos.dynamicsash.DynamicSashUnifyEvent" alt="" coords="5,315,360,344"/> </map> 
   </p>

|


|super_classes| Known Superclasses
==================================

:class:`wx.PyCommandEvent`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.gizmos.dynamicsash.DynamicSashUnifyEvent.__init__`                
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: DynamicSashUnifyEvent(wx.PyCommandEvent)

   DynamicSashUnifyEvents are sent to your view by DynamicSashWindow whenever
   the sash which splits your view and its sibling is being reunified such
   that your view is expanding to replace its sibling. You needn't do
   anything with this event if you are allowing DynamicSashWindow to manage
   your view's scrollbars, but it is useful if you are managing the
   scrollbars yourself so that you can keep the scrollbars' event handlers
   connected to your view's event handler class.

   .. method:: __init__(self, arg=None)


