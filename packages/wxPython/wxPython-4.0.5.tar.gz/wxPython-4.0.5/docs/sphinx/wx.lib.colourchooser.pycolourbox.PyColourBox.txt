.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.colourchooser.pycolourbox

.. highlight:: python



.. _wx.lib.colourchooser.pycolourbox.PyColourBox:

==========================================================================================================================================
|phoenix_title|  **wx.lib.colourchooser.pycolourbox.PyColourBox**
==========================================================================================================================================

A Colour Selection Box

The Colour selection box implements button like behavior but contains
a solid-filled, coloured sub-box. Placing the colour in a sub-box allows
for filling in the main panel's background for a high-lighting effect.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PyColourBox</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.colourchooser.pycolourbox.PyColourBox_inheritance.png" alt="Inheritance diagram of PyColourBox" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.Window.html" title="wx.Window" alt="" coords="118,237,207,267"/> <area shape="rect" id="node4" href="wx.Panel.html" title="wx.Panel" alt="" coords="125,315,200,344"/> <area shape="rect" id="node2" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="102,160,223,189"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="64,5,145,35"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="107,83,217,112"/> <area shape="rect" id="node7" href="wx.lib.colourchooser.pycolourbox.PyColourBox.html" title="wx.lib.colourchooser.pycolourbox.PyColourBox" alt="" coords="5,392,320,421"/> <area shape="rect" id="node5" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="171,5,272,35"/> </map> 
   </p>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Panel`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.__init__`                   Creates a new colour box instance and initializes the colour
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.GetColour`                  Returns a wxColour object indicating the box's current colour.
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.GetColourBox`               Returns a reference to the internal box object containing the
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.SetColour`                  Accepts a wxColour object and sets the box's current color.
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.SetColourTuple`             Sets the box's current couple to the given tuple.
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.SetHighlight`               Accepts a boolean 'val' toggling the box's highlighting.
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.Update`                     
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: PyColourBox(wx.Panel)

   A Colour Selection Box
   
   The Colour selection box implements button like behavior but contains
   a solid-filled, coloured sub-box. Placing the colour in a sub-box allows
   for filling in the main panel's background for a high-lighting effect.

   .. method:: __init__(self, parent, id, colour=(0, 0, 0), size=(25, 20))

      Creates a new colour box instance and initializes the colour
      content.


   .. method:: GetColour(self)

      Returns a wxColour object indicating the box's current colour.


   .. method:: GetColourBox(self)

      Returns a reference to the internal box object containing the
      color. This function is useful for setting up event handlers for
      the box.


   .. method:: SetColour(self, colour)

      Accepts a wxColour object and sets the box's current color.


   .. method:: SetColourTuple(self, colour)

      Sets the box's current couple to the given tuple.


   .. method:: SetHighlight(self, val)

      Accepts a boolean 'val' toggling the box's highlighting.


   .. method:: Update(self)


