.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.cubecolourdialog

.. highlight:: python



.. _wx.lib.agw.cubecolourdialog.BrightCtrl:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.cubecolourdialog.BrightCtrl**
==========================================================================================================================================

Implements the drawing, mouse handling and sizing routines for the brightness
palette control.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>BrightCtrl</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.cubecolourdialog.BrightCtrl_inheritance.png" alt="Inheritance diagram of BrightCtrl" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="37,5,139,35"/> <area shape="rect" id="node2" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="89,83,200,112"/> <area shape="rect" id="node6" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="85,160,205,189"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="163,5,244,35"/> <area shape="rect" id="node4" href="wx.lib.agw.cubecolourdialog.BrightCtrl.html" title="wx.lib.agw.cubecolourdialog.BrightCtrl" alt="" coords="15,469,275,499"/> <area shape="rect" id="node5" href="wx.lib.agw.cubecolourdialog.BaseLineCtrl.html" title="wx.lib.agw.cubecolourdialog.BaseLineCtrl" alt="" coords="5,392,285,421"/> <area shape="rect" id="node8" href="wx.Window.html" title="wx.Window" alt="" coords="101,237,189,267"/> <area shape="rect" id="node7" href="wx.Control.html" title="wx.Control" alt="" coords="101,315,189,344"/> </map> 
   </p>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.agw.cubecolourdialog.BaseLineCtrl`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.cubecolourdialog.BrightCtrl.__init__`                         Default class constructor.
:meth:`~wx.lib.agw.cubecolourdialog.BrightCtrl.DrawMarkers`                      Draws square markers used with mouse gestures.
:meth:`~wx.lib.agw.cubecolourdialog.BrightCtrl.OnPaint`                          Handles the ``wx.EVT_PAINT`` for :class:`BrightCtrl`.
:meth:`~wx.lib.agw.cubecolourdialog.BrightCtrl.TrackPoint`                       Tracks a mouse action inside the palette control.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: BrightCtrl(BaseLineCtrl)

   Implements the drawing, mouse handling and sizing routines for the brightness
   palette control.

   .. method:: __init__(self, parent)

      Default class constructor.
      Used internally. Do not call it in your code!
      
      :param `parent`: the control parent window.


   .. method:: DrawMarkers(self, dc=None)

      Draws square markers used with mouse gestures.
      
      :param `dc`: an instance of :class:`wx.DC`.


   .. method:: OnPaint(self, event)

      Handles the ``wx.EVT_PAINT`` for :class:`BrightCtrl`.
      
      :param `event`: a :class:`PaintEvent` event to be processed.


   .. method:: TrackPoint(self, pt)

      Tracks a mouse action inside the palette control.
      
      :param `pt`: an instance of :class:`wx.Point`.


