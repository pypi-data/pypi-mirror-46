.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.sized_controls

.. highlight:: python



.. _wx.lib.sized_controls.SizedScrolledPanel:

==========================================================================================================================================
|phoenix_title|  **wx.lib.sized_controls.SizedScrolledPanel**
==========================================================================================================================================

A sized scrolled panel.

Controls added to it will automatically be added to its sizer.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>SizedScrolledPanel</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.sized_controls.SizedScrolledPanel_inheritance.png" alt="Inheritance diagram of SizedScrolledPanel" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="13,5,115,35"/> <area shape="rect" id="node2" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="65,83,176,112"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="61,160,181,189"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="139,5,220,35"/> <area shape="rect" id="node8" href="wx.Window.html" title="wx.Window" alt="" coords="77,237,165,267"/> <area shape="rect" id="node5" href="wx.lib.sized_controls.SizedParent.html" title="wx.lib.sized_controls.SizedParent" alt="" coords="262,469,492,499"/> <area shape="rect" id="node6" href="wx.lib.sized_controls.SizedScrolledPanel.html" title="wx.lib.sized_controls.SizedScrolledPanel" alt="" coords="112,547,387,576"/> <area shape="rect" id="node7" href="wx.lib.scrolledpanel.ScrolledPanel.html" title="wx.lib.scrolledpanel.ScrolledPanel" alt="" coords="5,469,237,499"/> <area shape="rect" id="node9" href="wx.ScrolledWindow.html" title="wx.ScrolledWindow" alt="" coords="51,392,191,421"/> </map> 
   </p>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.scrolledpanel.ScrolledPanel`, :class:`wx.lib.sized_controls.SizedParent`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.sized_controls.SizedScrolledPanel.__init__`                       `self` in the following sample is a :class:`wx.SizedScrolledPanel` instance.
:meth:`~wx.lib.sized_controls.SizedScrolledPanel.AddChild`                       Called automatically by wx, should not be called from user code.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: SizedScrolledPanel(sp.ScrolledPanel, SizedParent)

   A sized scrolled panel.
   
   Controls added to it will automatically be added to its sizer.

   .. method:: __init__(self, \*args, \*\*kwargs)

      `self` in the following sample is a :class:`wx.SizedScrolledPanel` instance.
      
      Sample usage::
      
          self.SetSizerType("horizontal")
      
          b1 = wx.Button(self, wx.ID_ANY)
          t1 = wx.TextCtrl(self, -1)
          t1.SetSizerProps(expand=True)


   .. method:: AddChild(self, child)

      Called automatically by wx, should not be called from user code.
      
      :param `child`: child (window or another sizer) to be added to sizer.


