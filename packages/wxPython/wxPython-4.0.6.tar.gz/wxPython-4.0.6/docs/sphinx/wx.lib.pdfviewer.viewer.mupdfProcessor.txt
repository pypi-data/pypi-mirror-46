.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.pdfviewer.viewer

.. highlight:: python



.. _wx.lib.pdfviewer.viewer.mupdfProcessor:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pdfviewer.viewer.mupdfProcessor**
==========================================================================================================================================

Create an instance of this class to open a PDF file, process the contents of
each page and render each one on demand using the GPL mupdf library, which is
accessed via the python-fitz package bindings (version 1.9.1 or later)



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>mupdfProcessor</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.pdfviewer.viewer.mupdfProcessor_inheritance.png" alt="Inheritance diagram of mupdfProcessor" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.pdfviewer.viewer.mupdfProcessor.html" title="wx.lib.pdfviewer.viewer.mupdfProcessor" alt="" coords="5,5,275,35"/> </map> 
   </p>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.pdfviewer.viewer.mupdfProcessor.__init__`                         :param `pdf_file`: a File object or an object that supports the standard
:meth:`~wx.lib.pdfviewer.viewer.mupdfProcessor.DrawFile`                         This is a no-op for mupdf. Each page is scaled and drawn on
:meth:`~wx.lib.pdfviewer.viewer.mupdfProcessor.RenderPage`                       Render the set of pagedrawings into gc for specified page
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: mupdfProcessor(object)

   Create an instance of this class to open a PDF file, process the contents of
   each page and render each one on demand using the GPL mupdf library, which is
   accessed via the python-fitz package bindings (version 1.9.1 or later)

   .. method:: __init__(self, parent, pdf_file)

      :param `pdf_file`: a File object or an object that supports the standard
      read and seek methods similar to a File object.
      Could also be a string representing a path to a PDF file.


   .. method:: DrawFile(self, frompage, topage)

      This is a no-op for mupdf. Each page is scaled and drawn on
      demand during RenderPage directly via a call to page.getPixmap()


   .. method:: RenderPage(self, gc, pageno, scale=1.0)

      Render the set of pagedrawings into gc for specified page 


