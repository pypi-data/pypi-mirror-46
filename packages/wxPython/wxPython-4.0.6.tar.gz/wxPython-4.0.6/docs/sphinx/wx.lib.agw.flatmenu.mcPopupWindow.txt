.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.flatmenu

.. highlight:: python



.. _wx.lib.agw.flatmenu.mcPopupWindow:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.flatmenu.mcPopupWindow**
==========================================================================================================================================

Since Max OS does not support :class:`PopupWindow`, this is an alternative. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>mcPopupWindow</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.flatmenu.mcPopupWindow_inheritance.png" alt="Inheritance diagram of mcPopupWindow" usemap="#dummy" class="inheritance"/></center>
   </div>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="62,392,204,421"/> <area shape="rect" id="node5" href="wx.Frame.html" title="wx.Frame" alt="" coords="92,469,173,499"/> <area shape="rect" id="node2" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="54,315,212,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="89,237,177,267"/> <area shape="rect" id="node4" href="wx.MiniFrame.html" title="wx.MiniFrame" alt="" coords="80,547,187,576"/> <area shape="rect" id="node10" href="wx.lib.agw.flatmenu.mcPopupWindow.html" title="wx.lib.agw.flatmenu.mcPopupWindow" alt="" coords="5,624,261,653"/> <area shape="rect" id="node6" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="25,5,127,35"/> <area shape="rect" id="node7" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="77,83,188,112"/> <area shape="rect" id="node9" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="73,160,193,189"/> <area shape="rect" id="node8" href="wx.Object.html" title="wx.Object" alt="" coords="151,5,232,35"/> </map> 
   </p>

|


|super_classes| Known Superclasses
==================================

:class:`wx.MiniFrame`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.flatmenu.mcPopupWindow.__init__`                              Default class constructor.
:meth:`~wx.lib.agw.flatmenu.mcPopupWindow.OnLeaveWindow`                         Handles the ``wx.EVT_LEAVE_WINDOW`` event for :class:`mcPopupWindow`.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: mcPopupWindow(wx.MiniFrame)

   Since Max OS does not support :class:`PopupWindow`, this is an alternative. 

   .. method:: __init__(self, parent)

      Default class constructor.
      
      :param `parent`: the :class:`mcPopupWindow` parent window.


   .. method:: OnLeaveWindow(self, event)

      Handles the ``wx.EVT_LEAVE_WINDOW`` event for :class:`mcPopupWindow`.
      
      :param `event`: a :class:`MouseEvent` event to be processed.


