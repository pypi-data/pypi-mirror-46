Metadata-Version: 2.1
Name: kidx-core
Version: 0.0.1a4
Summary: Machine learning based dialogue engine for conversational software.
Home-page: https://rasa.com
Author: Kidx AI Technologies Education
Author-email: nlp@mykidx.com
Maintainer: Colin Gao
Maintainer-email: colin.gao@mykidx.com
License: Apache 2.0
Download-URL: http://git.mykidx.com/nlp/kidx_core/-/archive/0.0.1a4/kidx_core-0.0.1a4.tar.gz
Project-URL: Bug Reports, http://redmine.mykidx.com/projects/kidx-nlu/issues
Project-URL: Source, http://git.mykidx.com/nlp/kidx_core
Keywords: nlp machine-learning machine-learning-library bot bots botkit kidx conversational-agents conversational-ai chatbotchatbot-framework bot-framework
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries
Description-Content-Type: text/markdown
Provides-Extra: test
Requires-Dist: jsonpickle (~=1.0)
Requires-Dist: redis (~=2.0)
Requires-Dist: fakeredis (~=0.10.0)
Requires-Dist: pymongo (~=3.7)
Requires-Dist: numpy (~=1.16)
Requires-Dist: scipy (~=1.2)
Requires-Dist: typing (~=3.0)
Requires-Dist: requests (~=2.20)
Requires-Dist: tensorflow (~=1.12.0)
Requires-Dist: apscheduler (~=3.0)
Requires-Dist: tqdm (~=4.0)
Requires-Dist: networkx (~=2.2)
Requires-Dist: fbmessenger (~=5.0)
Requires-Dist: pykwalify (~=1.7.0)
Requires-Dist: coloredlogs (~=10.0)
Requires-Dist: ruamel.yaml (~=0.15.0)
Requires-Dist: scikit-learn (~=0.20.0)
Requires-Dist: slackclient (~=1.0)
Requires-Dist: python-telegram-bot (~=11.0)
Requires-Dist: twilio (~=6.0)
Requires-Dist: webexteamssdk (~=1.0)
Requires-Dist: mattermostwrapper (~=2.0)
Requires-Dist: rocketchat-API (~=0.6.0)
Requires-Dist: colorhash (~=1.0)
Requires-Dist: pika (~=0.12.0)
Requires-Dist: jsonschema (~=2.6)
Requires-Dist: packaging (~=18.0)
Requires-Dist: gevent (~=1.4)
Requires-Dist: pytz (~=2018.9)
Requires-Dist: python-dateutil (~=2.7)
Requires-Dist: kidx-nlu (~=0.0.1a6)
Requires-Dist: kidx-core-sdk (~=0.0.1a2)
Requires-Dist: colorclass (~=2.2)
Requires-Dist: terminaltables (~=3.1)
Requires-Dist: questionary (>=1.0.1)
Requires-Dist: sanic (~=0.8.0)
Requires-Dist: sanic-cors (~=0.9.0)
Requires-Dist: sanic-jwt (~=1.2)
Requires-Dist: aiohttp (~=3.3)
Requires-Dist: python-socketio (~=3.0)
Requires-Dist: pydot (~=1.4)
Requires-Dist: keras-applications (==1.0.6)
Requires-Dist: keras-preprocessing (==1.0.5)
Provides-Extra: test
Requires-Dist: pytest (~=3.0); extra == 'test'
Requires-Dist: pytest-pycodestyle (~=1.3); extra == 'test'
Requires-Dist: pytest-cov (~=2.0); extra == 'test'
Requires-Dist: pytest-localserver (~=0.4.0); extra == 'test'
Requires-Dist: pytest-asyncio (~=0.9.0); extra == 'test'
Requires-Dist: treq (~=17.0); extra == 'test'
Requires-Dist: freezegun (~=0.3.0); extra == 'test'
Requires-Dist: nbsphinx (>=0.3); extra == 'test'
Requires-Dist: matplotlib (~=2.0); extra == 'test'
Requires-Dist: responses (~=0.9.0); extra == 'test'
Requires-Dist: httpretty (~=0.9.0); extra == 'test'

# Rasa Core 


[![Join the chat on Rasa Community Forum](https://img.shields.io/badge/forum-join%20discussions-brightgreen.svg)](https://forum.rasa.com/?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![PyPI version](https://img.shields.io/pypi/v/rasa_core.svg)](https://pypi.python.org/pypi/rasa-core)
[![Supported Python Versions](https://img.shields.io/pypi/pyversions/rasa_core.svg)](https://pypi.python.org/pypi/rasa_core)
[![Build Status](https://travis-ci.com/RasaHQ/rasa_core.svg?branch=master)](https://travis-ci.com/RasaHQ/rasa_core)
[![Coverage Status](https://coveralls.io/repos/github/RasaHQ/rasa_core/badge.svg?branch=master)](https://coveralls.io/github/RasaHQ/rasa_core?branch=master)
[![Documentation Status](https://img.shields.io/badge/docs-stable-brightgreen.svg)](https://rasa.com/docs/core)


- **What do Rasa Core & NLU do? ü§î**
  [Read About the Rasa Stack](https://rasa.com/products/rasa-stack/)

- **I'd like to read the detailed docs ü§ì**
  [Read The Docs](https://rasa.com/docs/core)

- **I'm ready to install Rasa Core! üöÄ**
  [Installation](https://rasa.com/docs/core/installation.html)

- **I have a question ‚ùì**
  [Rasa Community Forum](https://forum.rasa.com)

- **I would like to contribute ü§ó**
  [How to contribute](#how-to-contribute)

## Introduction

Rasa Core is a framework for building conversational software, which includes
Chat Bots on :
- Facebook Messenger
- Slack
- Microsoft Bot Framework
- Rocket.Chat
- Mattermost
- Telegram
- Twilio

But you can also build assistants as
- Alexa Skills
- Google Home Actions

Rasa Core's primary purpose is to help you build contextual, layered
conversations with lots of back-and-forth. To have a real conversation,
you need to have some memory and build on things that were said earlier.
Rasa Core lets you do that in a scalable way.

There's a lot more background information in this
[blog post](https://medium.com/rasa-blog/a-new-approach-to-conversational-software-2e64a5d05f2a)

## Where to get help

There is extensive documentation:

- [master](https://rasa.com/docs/core/master/)&nbsp;
  (if you install from **github**) or
- [stable](https://rasa.com/docs/core)&nbsp;&nbsp;
  (if you install from **pypi**)


Please use [Rasa Community Forum](https://forum.rasa.com) for quick answers to
questions.



### README Contents:
- [How to contribute](#how-to-contribute)
- [Development Internals](#development-internals)
- [License](#license)

### How to contribute
We are very happy to receive and merge your contributions. There is
some more information about the style of the code and docs in the
[documentation](https://nlu.rasa.com/contribute.html).

In general the process is rather simple:
1. create an issue describing the feature you want to work on (or
   have a look at issues with the label
   [help wanted](https://github.com/RasaHQ/rasa_core/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22))
2. write your code, tests and documentation
3. create a pull request describing your changes

You pull request will be reviewed by a maintainer, who might get
back to you about any necessary changes or questions. You will
also be asked to sign a
[Contributor License Agreement](https://cla-assistant.io/RasaHQ/rasa_core)


## Development Internals
### Running and changing the documentation
To build & edit the docs, first install all necessary dependencies:

```
brew install sphinx
pip install -r dev-requirements.txt
```

After the installation has finished, you can run and view the documentation
locally using
```
make livedocs
```

Visit the local version of the docs at http://localhost:8000 in your browser.
You can now change the docs locally and the web page will automatically reload
and apply your changes.

### Running and changing the unit test
To build & edit the docs, first install all necessary dependencies:

```
docker build -f Dockerfile.dev . -t kidx_core_dev

docker run --name kidx_core_dev -v "$PWD":/app -it kidx_core_dev bash
```

After the docker container start run command in docker
```
pip install -e . --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple/
make lint
make test
```

Look the coverage should be no failure and pass 100%

## License
Licensed under the Apache License, Version 2.0.
Copyright 2018 Kidx AI Technologies Education. [Copy of the license](LICENSE.txt).

A list of the Licenses of the dependencies of the project can be found at
the bottom of the
[Libraries Summary](https://libraries.io/github/RasaHQ/rasa_core).


