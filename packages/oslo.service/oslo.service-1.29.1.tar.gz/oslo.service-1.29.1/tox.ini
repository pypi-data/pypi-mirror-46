[tox]
minversion = 2.0
envlist = py35,py27,pypy,pep8,bandit

[testenv]
setenv =
    VIRTUAL_ENV={envdir}
    BRANCH_NAME=master
    CLIENT_NAME=oslo.service
install_command = pip install {opts} {packages}
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/queens}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
whitelist_externals = find
commands =
    find . -type f -name "*.py[co]" -delete
    python setup.py testr --slowest --testr-args='{posargs}'

[testenv:pep8]
commands =
    flake8
    bandit -r oslo_service -n5 -x tests

[testenv:py27]
commands =
    find . -type f -name "*.py[co]" -delete
    python setup.py testr --slowest --testr-args='{posargs}'
    doc8 --ignore-path "doc/source/history.rst" doc/source

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:cover]
commands = python setup.py test --coverage --coverage-package-name=oslo_service --testr-args='{posargs}'

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build

[hacking]
import_exceptions = oslo_service._i18n

[testenv:pip-missing-reqs]
# do not install test-requirements as that will pollute the virtualenv for
# determining missing packages
# this also means that pip-missing-reqs must be installed separately, outside
# of the requirements.txt files
deps = pip_missing_reqs
commands = pip-missing-reqs -d --ignore-module=oslo_service* --ignore-module=pkg_resources --ignore-file=oslo_service/tests/* oslo_service

[testenv:debug]
commands = oslo_debug_helper -t oslo_service/tests {posargs}

[testenv:bandit]
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/queens}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
commands = bandit -r oslo_service -n5 -x tests {posargs}

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html
