!function(){var e=(0,eval)("this");void 0===e.BOWERDEPS&&(e.BOWERDEPS={})}();class ConsoleState{constructor(e,i,t){var s="console";i.addGroup({name:s,caption:"Console View",icon:"exclamation-circle",order:5});var a={group:s,caption:"Console View"},l={controller:"".concat(s,"Controller"),controllerAs:"c",templateUrl:"console_view/views/".concat(s,".html"),name:s,url:"/".concat(s),data:a};e.state(l),t.addSettingsGroup({name:"Console",caption:"Console related settings",items:[{type:"integer",name:"buildLimit",caption:"Number of builds to fetch",default_value:200},{type:"integer",name:"changeLimit",caption:"Number of changes to fetch",default_value:30}]})}}class Console{constructor(e,i,t,s,a,l,r,n){this.onChange=this.onChange.bind(this),this._onChange=this._onChange.bind(this),this.matchBuildWithChange=this.matchBuildWithChange.bind(this),this.makeFakeChange=this.makeFakeChange.bind(this),this.$scope=e,this.$window=t,this.$uibModal=r,this.$timeout=n,angular.extend(this,l);var o=a.getSettingsGroup("Console");if(this.buildLimit=o.buildLimit.value,this.changeLimit=o.changeLimit.value,this.dataAccessor=s.open().closeOnDestroy(this.$scope),this._infoIsExpanded={},this.$scope.all_builders=this.all_builders=this.dataAccessor.getBuilders(),this.$scope.builders=this.builders=[],"undefined"!=typeof Intl&&null!==Intl){var d=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"});this.strcompare=d.compare}else this.strcompare=function(e,i){return e<i?-1:e===i?0:1};this.$scope.builds=this.builds=this.dataAccessor.getBuilds({property:["got_revision"],limit:this.buildLimit,order:"-started_at"}),this.changes=this.dataAccessor.getChanges({limit:this.changeLimit,order:"-changeid"}),this.buildrequests=this.dataAccessor.getBuildrequests({limit:this.buildLimit,order:"-submitted_at"}),this.buildsets=this.dataAccessor.getBuildsets({limit:this.buildLimit,order:"-submitted_at"}),this.builds.onChange=this.changes.onChange=this.buildrequests.onChange=this.buildsets.onChange=this.onChange}onChange(e){if(0!==this.builds.length&&0!==this.all_builders.length&&this.changes.$resolved&&0!==this.buildsets.length&&0!==this.buildrequests)return null==this.onchange_debounce?this.onchange_debounce=this.$timeout(this._onChange,100):void 0}_onChange(){var e,i;this.onchange_debounce=void 0;for(var t=0,s=Array.from(this.builds);t<s.length;t++)e=s[t],this.all_builders.get(e.builderid).hasBuild=!0;this.sortBuildersByTags(this.all_builders),null==this.changesBySSID&&(this.changesBySSID={}),null==this.changesByRevision&&(this.changesByRevision={});for(var a=0,l=Array.from(this.changes);a<l.length;a++)i=l[a],this.changesBySSID[i.sourcestamp.ssid]=i,this.changesByRevision[i.revision]=i,this.populateChange(i);for(var r=0,n=Array.from(this.builds);r<n.length;r++)e=n[r],this.matchBuildWithChange(e);for(var o in this.filtered_changes=[],this.changesBySSID){(i=this.changesBySSID[o]).comments&&(i.subject=i.comments.split("\n")[0]);for(var d=0,h=Array.from(i.builders);d<h.length;d++){if(h[d].builds.length>0){this.filtered_changes.push(i);break}}}}sortBuildersByTags(e){for(var i=[],t="",s=0,a=Array.from(e);s<a.length;s++){var l=a[s];l.hasBuild&&(i.push(l),t+=".".concat(l.builderid))}if(t!==this.last_builderids_with_builds){for(var r=this._sortBuildersByTags(i),n=[],o=[],d=function(e,i,t){var s=n[e];if(null==s)s=n[e]=[];else{var a=s[s.length-1];if(a.tag===i)return void(a.colspan+=t)}return s.push({tag:i,colspan:t})},h=this,u=function e(i,t){if(d(t,i.tag,i.builders.length),null!=i.tag_line&&0!==i.tag_line.length)return Array.from(i.tag_line).map(i=>e(i,t+1));i.builders.sort((e,i)=>h.strcompare(e.name,i.name)),o=o.concat(i.builders);for(var s=1;s<=100;s++)d(t+s,"",i.builders.length)},c=0,g=Array.from(r);c<g.length;c++)u(g[c],0);this.builders=o,this.tag_lines=[];for(var b=0,m=Array.from(n);b<m.length;b++)1===(r=m[b]).length&&""===r[0].tag||this.tag_lines.push(r);return this.last_builderids_with_builds=t}}_sortBuildersByTags(e){for(var i,t,s,a={},l=0,r=Array.from(e);l<r.length;l++)if(null!=(i=r[l]).tags)for(var n=0,o=Array.from(i.tags);n<o.length;n++)null==a[s=o[n]]&&(a[s]=[]),a[s].push(i);var d=[];for(s in a)(t=a[s]).length<e.length&&d.push({tag:s,builders:t});d.sort((e,i)=>i.builders.length-e.builders.length);for(var h=[],u={},c=0,g=Array.from(d);c<g.length;c++){s=g[c];for(var b=!1,m=0,p=Array.from(s.builders);m<p.length;m++)if(i=p[m],u.hasOwnProperty(i.builderid)){b=!0;break}if(!b){for(var f=0,v=Array.from(s.builders);f<v.length;f++)u[(i=v[f]).builderid]=s.tag;h.push(s)}}for(var y=[],_=0,w=Array.from(e);_<w.length;_++)i=w[_],u.hasOwnProperty(i.builderid)||y.push(i);if(y.length&&h.push({tag:"",builders:y}),h.length>1)for(var B=0,C=Array.from(h);B<C.length;B++)(s=C[B]).tag_line=this._sortBuildersByTags(s.builders);return h}populateChange(e){e.builders=[],e.buildersById={};for(var i=0,t=Array.from(this.builders);i<t.length;i++){var s=t[i];s={builderid:s.builderid,name:s.name,builds:[]},e.builders.push(s),e.buildersById[s.builderid]=s}}matchBuildWithChange(e){var i,t,s=this.buildrequests.get(e.buildrequestid);if(null!=s){var a=this.buildsets.get(s.buildsetid);if(null!=a){if(null!=a&&null!=a.sourcestamps)for(var l=0,r=Array.from(a.sourcestamps);l<r.length;l++){var n=r[l];if(null!=(i=this.changesBySSID[n.ssid]))break}if(null==i&&null!=(null!=e.properties?e.properties.got_revision:void 0)){var o=e.properties.got_revision[0];if("string"==typeof o)null==(i=this.changesByRevision[o])&&(i=this.makeFakeChange("",o,e.started_at));else{var d;for(d in o)if(t=o[d],null!=(i=this.changesByRevision[t]))break;null==i&&(t=o==={}?"":o[o.keys()[0]],i=this.makeFakeChange(d,t,e.started_at))}}return null==i&&(t="unknown revision ".concat(e.builderid,"-").concat(e.buildid),i=this.makeFakeChange("unknown codebase",t,e.started_at)),i.buildersById[e.builderid].builds.push(e)}}}makeFakeChange(e,i,t){var s=this.changesBySSID[i];return null==s&&(s={codebase:e,revision:i,changeid:i,when_timestamp:t,author:"unknown author for ".concat(i),comments:i+"\n\nFake comment for revision: No change for this revision, please setup a changesource in Buildbot"},this.changesBySSID[i]=s,this.populateChange(s)),s}openAll(){return Array.from(this.filtered_changes).map(e=>e.show_details=!0)}closeAll(){return Array.from(this.filtered_changes).map(e=>e.show_details=!1)}getRowHeaderWidth(){return this.hasExpanded()?400:200}getColHeaderHeight(){for(var e=0,i=0,t=Array.from(this.builders);i<t.length;i++){var s=t[i];e=Math.max(s.name.length,e)}return Math.max(100,3*e)}isBigTable(){var e=this.getRowHeaderWidth();return(this.$window.innerWidth-e)/this.builders.length<40}hasExpanded(){for(var e=0,i=Array.from(this.changes);e<i.length;e++){var t=i[e];if(this.infoIsExpanded(t))return!0}return!1}selectBuild(e){return this.$uibModal.open({templateUrl:"console_view/views/modal.html",controller:"consoleModalController as modal",windowClass:"modal-big",resolve:{selectedBuild:()=>e}})}toggleInfo(e){return e.show_details=!e.show_details}infoIsExpanded(e){return e.show_details}}angular.module("console_view",["ui.router","ui.bootstrap","ngAnimate","guanlecoja.ui","bbData"]).config(["$stateProvider","glMenuServiceProvider","bbSettingsServiceProvider",ConsoleState]).controller("consoleController",["$scope","$q","$window","dataService","bbSettingsService","resultsService","$uibModal","$timeout",Console]);class ConsoleModal{constructor(e,i,t){this.$uibModalInstance=i,this.selectedBuild=t,e.$on("$stateChangeStart",()=>this.close())}close(){return this.$uibModalInstance.close()}}angular.module("console_view").controller("consoleModalController",["$scope","$uibModalInstance","selectedBuild",ConsoleModal]),angular.module("console_view").run(["$templateCache",function(e){e.put("console_view/views/console.html",'<div class="console"><div class="load-indicator" ng-hide="c.builds.$resolved &amp;&amp; c.changes.$resolved &amp;&amp; c.buildrequests.$resolved &amp;&amp; c.buildsets.$resolved"><div class="spinner"><i class="fa fa-circle-o-notch fa-spin fa-2x"></i><p>loading</p></div></div><div ng-show="c.changes.$resolved &amp;&amp; c.filtered_changes.length==0"><p>No changes. Console view needs changesource to be setup, and<a href="#changes">changes</a>to be in the system.</p></div><table class="table table-striped table-bordered" ng-hide="c.filtered_changes.length==0" ng-class="{\'table-fixedwidth\': c.isBigTable()}"><tr class="first-row"><th class="row-header" ng-style="{\'width\': c.getRowHeaderWidth()}"><i class="fa fa-plus-circle pull-left" ng-click="c.openAll()" uib-tooltip="Open information for all changes" uib-tooltip-placement="right"></i><i class="fa fa-minus-circle pull-left" ng-click="c.closeAll()" uib-tooltip="Close information for all changes" uib-tooltip-placement="right"></i></th><th class="column" ng-repeat="builder in c.builders"><span class="builder" ng-style="{\'margin-top\': c.getColHeaderHeight()}"><a ng-href="#/builders/{{ builder.builderid }}" ng-bind="builder.name"></a></span></th></tr><tr class="tag_row" ng-repeat="tag_line in c.tag_lines"><td class="row-header"></td><td ng-repeat="tag in tag_line" colspan="{{tag.colspan}}"><span uib-tooltip="{{ tag.tag }}" ng-style="{width: tag.colspan*50}">{{tag.tag}}</span></td></tr><tr ng-repeat="change in c.filtered_changes | orderBy: [\'-when_timestamp\'] track by change.changeid"><td><changedetails change="change"></changedetails></td><td class="column" ng-repeat="builder in change.builders" title="{{builder.name}}"><a ng-repeat="build in builder.builds | orderBy: [\'number\']"><span class="badge-status" ng-if="build.buildid" ng-class="c.results2class(build, \'pulse\')" ng-click="c.selectBuild(build)">{{ build.number }}</span></a></td></tr></table></div>'),e.put("console_view/views/modal.html",'\x3c!-- Show build summary for the selected build in a modal window--\x3e<div class="modal-header"><i class="fa fa-times pull-right" ng-click="modal.close()"></i><h4 class="modal-title">Build summary</h4></div><div class="modal-body"><buildsummary ng-if="modal.selectedBuild" buildid="modal.selectedBuild.buildid"></buildsummary></div>')}]);