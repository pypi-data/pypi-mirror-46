stages:
  - build
  - test
  - release
  - deploy

variables:
  DEVO_IMAGE: daddz/devo:0.2.0
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE-test:$CI_COMMIT_REF_SLUG
  CONTAINER_PROD_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
  NAMESPACE_TEST: {{ cookiecutter.project_name }}-$CI_COMMIT_REF_SLUG


build:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE


test:lint:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - /scripts/lint


test:integration:
  stage: test
  image: $DEVO_IMAGE
  before_script:
    - devo kube init --name $NAMESPACE_TEST --url $KUBE_URL --user $KUBE_USER --token $KUBE_TOKEN
    - devo kube before-test $NAMESPACE_TEST
  script:
    - devo kube test $NAMESPACE_TEST
  after_script:
    - devo kube after-test $NAMESPACE_TEST


release:
  stage: release
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CONTAINER_PROD_IMAGE -t $CONTAINER_LATEST_IMAGE --build-arg REQUIREMENTS=prod .
    - docker push $CONTAINER_PROD_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
