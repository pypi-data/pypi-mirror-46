doc:
  short_help: Installs Python packages into a Virtualenv.
  help: |
    The virtualenv needs to already exist. Use the 'python-virtualenv' frecklet to ensure the
    virtualenv is already created.

args:
  _import: python-virtualenv-exists
  system_dependencies:
    doc:
      short_help: System packages the application depends on.
    type: list
    empty: true
    required: false
    default: []
    cli:
      param_decls:
        - "--system-dependency"
        - "-s"
  python_packages:
    doc:
      short_help: All necessary Python packages.
    type: list
    empty: true
    required: true
    default: []
    schema:
      type: string
    cli:
      param_decls:
        - "--python-pkg"
        - "-p"
  pip_extra_args:
    doc:
      short_help: "Extra arguments forwarded to 'pip'."
    type: string
    required: false
  update:
    doc:
      short_help: "Update packages if already installed."
    type: boolean
    default: false
    cli:
      param_decls:
        - "--update"
frecklets:
  - packages-installed:
      frecklet::skip: "{{:: system_dependencies | true_if_empty ::}}"
      packages: "{{:: system_dependencies ::}}"

  - frecklet:
      name: freckfrackery.python
      type: ansible-role
      idempotent: true
      internet: true
      elevated: "{{:: user | true_if_not_empty ::}}"
      references:
        "pyenv homepage": "https://github.com/pyenv/pyenv"
    task:
      include-type: include
      roles:
        - freckfrackery.install-pkgs
        - freckfrackery.install-pkg-mgrs
    vars:
      frecklet::skip: "{{:: python_packages | true_if_empty ::}}"
      python_owner: "{{:: user ::}}"
      python_virtualenv_name: "{{:: venv_name ::}}"
      python_virtualenv_base: "{{:: venv_base_path ::}}"
      python_version: "{{:: python_version ::}}"
      python_type: "{{:: python_type ::}}"
      python_virtualenv_exe: "{{:: venv_python_exe ::}}"
      python_tasks:
        - install-packages
      python_pip_extra_args: "{{:: pip_extra_args ::}}"
      python_pip_packages: "{{:: python_packages ::}}"
      python_pip_packages_state: "{%:: if update ::%}latest{%:: else ::%}present{%:: endif ::%}"


