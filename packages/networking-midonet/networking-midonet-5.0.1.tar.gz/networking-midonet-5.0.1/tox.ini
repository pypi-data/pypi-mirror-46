[tox]
envlist = docs,py35,py27,pep8
minversion = 1.8
skipsdist = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
         PYTHONWARNINGS=default::DeprecationWarning
usedevelop = True
install_command = {toxinidir}/tools/tox_install.sh {env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/pike} {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = ostestr --regex '{posargs}'

[tox:jenkins]
sitepackages = True

[testenv:pep8]
commands =
  flake8
  {toxinidir}/tools/coding-checks.sh --pylint '{posargs}'
  neutron-db-manage --subproject networking-midonet check_migration
  {[testenv:bashate]commands}
  {[testenv:bandit]commands}
whitelist_externals = bash

[testenv:cover]
basepython = python2.7
commands =
  python setup.py test --coverage --coverage-package-name=midonet --testr-args='{posargs}'
  coverage report --fail-under=70 --skip-covered

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands = sphinx-build -W -b html doc/source doc/build/html

[testenv:api-ref]
whitelist_externals = rm
commands =
  rm -rf api-ref/build
  sphinx-build -W -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html

[testenv:bandit]
deps = -r{toxinidir}/test-requirements.txt
commands = bandit -r midonet -x midonet/neutron/tests -n5

[testenv:bashate]
commands = bash -c "find {toxinidir}             \
         -not \( -type d -name .tox\* -prune \)  \
         -not \( -type d -name .venv\* -prune \) \
         -not \( -type d -name .tmp\* -prune \) \
         -type f                                 \
         -name \*.sh                             \
# E005 file does not begin with #! or have a .sh prefix
# E006 check for lines longer than 79 columns
# E042 local declaration hides errors
# E043 Arithmetic compound has inconsistent return semantics
         -print0 | xargs -0 bashate -v -iE006 -eE005,E042,E043"
whitelist_externals = bash

[testenv:genconfig]
deps = -r{toxinidir}/requirements.txt
commands =
    mkdir -p etc/midonet
    oslo-config-generator --output-file etc/midonet/midonet.ini.v2.sample \
    --namespace midonet_v2
whitelist_externals = mkdir

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[flake8]
# TODO(dougwig) -- uncomment this to test for remaining linkages
# N530 direct neutron imports not allowed
# W503 line break before binary operator
# E402 module level import not at top of file
ignore = N530,W503,E402
# H106: Don't put vim configuration in source files
# H203: Use assertIs(Not)None to check for None
# H904: Delay string interpolations at logging calls
enable-extensions=H106,H203,H904
show-source = true
exclude = ./.*,build,dist,rally-jobs/plugins
# flake8-import-order configurations
import-order-style = pep8
application-import-names = midonet
# REVISIT(yamamoto): The pep8 style ignores application-package-names.
# Right now this is only for documentation purpose.
# https://github.com/PyCQA/flake8-import-order/pull/108
application-package-names = neutron,neutronclient,networking_l2gw,neutron_fwaas,neutron_lbaas,neutron_vpnaas,neutron_taas,neutron_dynamic_routing

[hacking]
import_exceptions = midonet.neutron._i18n
local-check-factory = neutron_lib.hacking.checks.factory
