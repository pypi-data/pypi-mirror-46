# address-ar.cfg - Gramática libre de contexto NLTK para georef-ar-address

# Sintaxis:
#   LHS -> RHS
# donde:
#   LHS es un nombre (no terminales)
#   RHS es uno o más no terminales o tokens

# Son equivalentes:
#   a -> B | C
# y:
#   a -> B
#   a -> C

# Producción inicial - debe ser 'address'
# Se definen tres tipos posibles de direcciones:
#  - simple:       nombre de calle + altura opcional
#  - intersection: intersección entre dos calles + altura opcional
#  - between:      calle entre otras dos calles + altura opcional

address -> between | intersection | simple

# Definición de tipos de direcciones

and -> 'AND_WORD' | 'AND_NUM'
isct_separator -> 'ISCT_SEP' | 'AND_WORD' 'ISCT_SEP' | and
btwn_separator -> 'BTWN_SEP' | 'BETWEEN'
location_part -> 'WORD' | 'OF' | 'BETWEEN'
location_part_recursive -> location_part_recursive location_part
location_part_recursive -> location_part
location -> location_part_recursive

between -> street_with_num btwn_separator street_no_num and street_no_num
between -> street_no_num btwn_separator street_no_num and street_with_num
between -> street_no_num btwn_separator street_no_num and street_no_num

intersection -> street_with_num isct_separator street_no_num
intersection -> street_no_num isct_separator street_with_num
intersection -> street_no_num isct_separator street_no_num

simple -> street_with_num
simple -> street_with_num location
simple -> street_no_num

# Nombre de calle con altura opcional

street_no_num -> street
street_with_num -> street door_number
street_with_num -> street door_number floor

# Piso

floor_part -> 'FLOOR' | 'NUM' | 'ORDINAL' | 'GROUNDL' | 'DOOR_TYPE'
floor_part -> 'LETTER' | 'NUMS_LETTER'
floor_part_recursive -> floor_part_recursive floor_part
floor_part_recursive -> floor_part
floor_long -> floor_part_recursive floor_part
floor_short -> 'GROUNDL' | 'NUMS_LETTER'

floor -> floor_long | floor_short

# Nombre de calles

street_name_part -> 'WORD' | 'NUM' | 'ORDINAL' | 'LETTER' | 'NUMS_LETTER'
street_name_part_nonfinal -> 'N' | 'AND_WORD' | 'BETWEEN' | 'OF'
street_name_part_any -> street_name_part | street_name_part_nonfinal
street_name_part_any_recursive -> street_name_part_any_recursive street_name_part_any
street_name_part_any_recursive -> street_name_part_any

street_name -> street_name_part
street_name -> street_name_part_any_recursive street_name_part

street_type -> 'STREET_TYPE_S' | 'STREET_TYPE_L'
missing_name -> 'MISSING_NAME' | 'S_N'
number_indicator -> 'N' | 'NUM_LABEL_S' | 'NUM_LABEL_L'
street_number -> number_indicator 'NUM' | 'NUM'

named_street -> street_name
named_street -> street_type street_name
named_street -> street_name street_type
named_street -> 'ROUTE' street_name

numbered_street -> street_type street_number
numbered_street -> 'NUM'

numbered_route -> 'ROUTE' street_number
numbered_route -> 'ROUTE' 'WORD' street_number
numbered_route -> street_name 'ROUTE' street_number

unnamed_street -> numbered_street
unnamed_street -> numbered_route
unnamed_street -> street_type missing_name
unnamed_street -> missing_name

street -> unnamed_street
street -> named_street

# Altura

door_number_value -> 'NUM' | 'DECIMAL' | 'NUM_RANGE' | 'NUM' 'NUM_RANGE'
door_number_value -> 'MISSING_NUM' | 'S_N'
door_number_unit -> 'KM' | number_indicator

door_number -> door_number_unit door_number_value
door_number -> door_number_value