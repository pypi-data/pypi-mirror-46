# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import thermal_model_pb2 as thermal__model__pb2


class ThermalModelStub(object):
  """The temperature service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetPrediction = channel.unary_unary(
        '/thermal_model.ThermalModel/GetPrediction',
        request_serializer=thermal__model__pb2.PredictionRequest.SerializeToString,
        response_deserializer=thermal__model__pb2.PredictedTemperatureReply.FromString,
        )


class ThermalModelServicer(object):
  """The temperature service definition.
  """

  def GetPrediction(self, request, context):
    """A simple RPC.

    Predicts indoor temperatures.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ThermalModelServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetPrediction': grpc.unary_unary_rpc_method_handler(
          servicer.GetPrediction,
          request_deserializer=thermal__model__pb2.PredictionRequest.FromString,
          response_serializer=thermal__model__pb2.PredictedTemperatureReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'thermal_model.ThermalModel', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
