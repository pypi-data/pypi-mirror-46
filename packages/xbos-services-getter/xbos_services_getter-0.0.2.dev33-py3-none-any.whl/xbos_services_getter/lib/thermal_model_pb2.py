# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: thermal_model.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='thermal_model.proto',
  package='thermal_model',
  syntax='proto3',
  serialized_pb=_b('\n\x13thermal_model.proto\x12\rthermal_model\"\xdb\x02\n\x11PredictionRequest\x12\x10\n\x08\x62uilding\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x14\n\x0c\x63urrent_time\x18\x03 \x01(\x03\x12\x0e\n\x06\x61\x63tion\x18\x04 \x01(\x03\x12\x1a\n\x12indoor_temperature\x18\x05 \x01(\x01\x12\x1b\n\x13outside_temperature\x18\x06 \x01(\x01\x12\\\n\x17other_zone_temperatures\x18\x07 \x03(\x0b\x32;.thermal_model.PredictionRequest.OtherZoneTemperaturesEntry\x12\x18\n\x10temperature_unit\x18\x08 \x01(\t\x12\x11\n\toccupancy\x18\t \x01(\x03\x1a<\n\x1aOtherZoneTemperaturesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\"L\n\x19PredictedTemperatureReply\x12\x0c\n\x04time\x18\x01 \x01(\x03\x12\x13\n\x0btemperature\x18\x02 \x01(\x01\x12\x0c\n\x04unit\x18\x03 \x01(\t2m\n\x0cThermalModel\x12]\n\rGetPrediction\x12 .thermal_model.PredictionRequest\x1a(.thermal_model.PredictedTemperatureReply\"\x00\x42\x02P\x01\x62\x06proto3')
)




_PREDICTIONREQUEST_OTHERZONETEMPERATURESENTRY = _descriptor.Descriptor(
  name='OtherZoneTemperaturesEntry',
  full_name='thermal_model.PredictionRequest.OtherZoneTemperaturesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='thermal_model.PredictionRequest.OtherZoneTemperaturesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='thermal_model.PredictionRequest.OtherZoneTemperaturesEntry.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=326,
  serialized_end=386,
)

_PREDICTIONREQUEST = _descriptor.Descriptor(
  name='PredictionRequest',
  full_name='thermal_model.PredictionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='building', full_name='thermal_model.PredictionRequest.building', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='zone', full_name='thermal_model.PredictionRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='current_time', full_name='thermal_model.PredictionRequest.current_time', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='action', full_name='thermal_model.PredictionRequest.action', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='indoor_temperature', full_name='thermal_model.PredictionRequest.indoor_temperature', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='outside_temperature', full_name='thermal_model.PredictionRequest.outside_temperature', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='other_zone_temperatures', full_name='thermal_model.PredictionRequest.other_zone_temperatures', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='temperature_unit', full_name='thermal_model.PredictionRequest.temperature_unit', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='occupancy', full_name='thermal_model.PredictionRequest.occupancy', index=8,
      number=9, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_PREDICTIONREQUEST_OTHERZONETEMPERATURESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=386,
)


_PREDICTEDTEMPERATUREREPLY = _descriptor.Descriptor(
  name='PredictedTemperatureReply',
  full_name='thermal_model.PredictedTemperatureReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='time', full_name='thermal_model.PredictedTemperatureReply.time', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='temperature', full_name='thermal_model.PredictedTemperatureReply.temperature', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unit', full_name='thermal_model.PredictedTemperatureReply.unit', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=388,
  serialized_end=464,
)

_PREDICTIONREQUEST_OTHERZONETEMPERATURESENTRY.containing_type = _PREDICTIONREQUEST
_PREDICTIONREQUEST.fields_by_name['other_zone_temperatures'].message_type = _PREDICTIONREQUEST_OTHERZONETEMPERATURESENTRY
DESCRIPTOR.message_types_by_name['PredictionRequest'] = _PREDICTIONREQUEST
DESCRIPTOR.message_types_by_name['PredictedTemperatureReply'] = _PREDICTEDTEMPERATUREREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PredictionRequest = _reflection.GeneratedProtocolMessageType('PredictionRequest', (_message.Message,), dict(

  OtherZoneTemperaturesEntry = _reflection.GeneratedProtocolMessageType('OtherZoneTemperaturesEntry', (_message.Message,), dict(
    DESCRIPTOR = _PREDICTIONREQUEST_OTHERZONETEMPERATURESENTRY,
    __module__ = 'thermal_model_pb2'
    # @@protoc_insertion_point(class_scope:thermal_model.PredictionRequest.OtherZoneTemperaturesEntry)
    ))
  ,
  DESCRIPTOR = _PREDICTIONREQUEST,
  __module__ = 'thermal_model_pb2'
  # @@protoc_insertion_point(class_scope:thermal_model.PredictionRequest)
  ))
_sym_db.RegisterMessage(PredictionRequest)
_sym_db.RegisterMessage(PredictionRequest.OtherZoneTemperaturesEntry)

PredictedTemperatureReply = _reflection.GeneratedProtocolMessageType('PredictedTemperatureReply', (_message.Message,), dict(
  DESCRIPTOR = _PREDICTEDTEMPERATUREREPLY,
  __module__ = 'thermal_model_pb2'
  # @@protoc_insertion_point(class_scope:thermal_model.PredictedTemperatureReply)
  ))
_sym_db.RegisterMessage(PredictedTemperatureReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('P\001'))
_PREDICTIONREQUEST_OTHERZONETEMPERATURESENTRY.has_options = True
_PREDICTIONREQUEST_OTHERZONETEMPERATURESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))

_THERMALMODEL = _descriptor.ServiceDescriptor(
  name='ThermalModel',
  full_name='thermal_model.ThermalModel',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=466,
  serialized_end=575,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetPrediction',
    full_name='thermal_model.ThermalModel.GetPrediction',
    index=0,
    containing_service=None,
    input_type=_PREDICTIONREQUEST,
    output_type=_PREDICTEDTEMPERATUREREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_THERMALMODEL)

DESCRIPTOR.services_by_name['ThermalModel'] = _THERMALMODEL

# @@protoc_insertion_point(module_scope)
