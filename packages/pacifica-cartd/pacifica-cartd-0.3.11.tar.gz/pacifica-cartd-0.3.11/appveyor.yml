version: 0.1.{build}
pull_requests:
  do_not_increment_build_number: true

environment:
  BROKER_URL: redis://127.0.0.1:6379/0
  BACKEND_URL: redis://127.0.0.1:6379/0

  matrix:
    - PYTHON: C:\Python27-x64
      MSVC_VERSION: "Visual Studio 10 Win64"
    - PYTHON: C:\Python36-x64
      MSVC_VERSION: "Visual Studio 10 Win64"

before_test:
- ps: >
    . C:\pacifica\Scripts\activate.ps1;
    $env:PATH = "${env:MYSQL_PATH}\bin;C:\pacifica\Scripts;${env:PATH}";
    mkdir ~/.pacifica-cartd; Set-Content -Path ~/.pacifica-cartd/config.ini -Value "[database]\npeewee_url = sqliteext:///db.sqlite3\n";
    $env:CART_CPCONFIG = "$PWD/server.conf";
    $env:ARCHIVEINTERFACE_CPCONFIG = "$PWD/travis/server.conf";
    mkdir C:\tmp;
    Start-Process C:\pacifica\Scripts\pacifica-archiveinterface.exe -WorkingDirectory travis -ArgumentList "--config config.cfg" -RedirectStandardError archive-error.log -RedirectStandardOutput archive-output.log;
    sleep 3;
    python travis\archiveinterfacepreload.py;
    nuget install redis-64 -excludeversion;
    redis-64\tools\redis-server.exe --service-install;
    redis-64\tools\redis-server.exe --service-start;

install:
- ps: >
    & "$env:PYTHON\python.exe" -m virtualenv C:\pacifica;
    . C:\pacifica\Scripts\activate.ps1;
    python -m pip install --upgrade pip setuptools wheel;
    Invoke-WebRequest -OutFile sqlite.zip https://www.sqlite.org/2018/sqlite-dll-win64-x64-3240000.zip;
    Invoke-WebRequest -OutFile sqlite-devel.zip https://www.sqlite.org/2018/sqlite-amalgamation-3240000.zip;
    Expand-Archive sqlite.zip -DestinationPath sqlite3;
    Expand-Archive sqlite-devel.zip -DestinationPath sqlite3;
    cd sqlite3;
    & "C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\amd64\link.exe" /lib /def:sqlite3.def;
    cd ..;
    cp sqlite3\sqlite3.dll "$env:PYTHON\DLLs\sqlite3.dll";
    cp sqlite3\sqlite3.lib "$env:PYTHON\libs\sqlite3.lib";
    cp sqlite3\sqlite-amalgamation-3240000\sqlite3.h "$env:PYTHON\include\sqlite3.h";
    cp "c:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdint.h" "C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\include\stdint.h";
    pip install -r requirements-dev.txt;
    pip install celery[redis] eventlet redis;
    echo 'done';

build: off

test_script:
- ps: >
    . C:\pacifica\Scripts\activate.ps1;
    $env:CARTD_CPCONFIG = "$PWD/server.conf";
    pre-commit run -a;
    cd tests;
    pip install pacifica-cartd==0.2.0;
    pacifica-cart-cmd dbsync;
    pip install ..;
    echo "This command should fail";
    coverage run --include '*/site-packages/pacifica/cartd/*' -p -m pacifica.cartd;
    if ($LastExitCode -eq 0) { $host.SetShouldExit(-1); };
    coverage run --include '*/site-packages/pacifica/cartd/*' -p test/cmd_test.py dbchk --equal;
    if ($LastExitCode -eq 0) { $host.SetShouldExit(-1); };
    coverage run --include '*/site-packages/pacifica/cartd/*' -p test/cmd_test.py dbchk;
    if ($LastExitCode -eq 0) { $host.SetShouldExit(-1); };
    coverage run --include '*/site-packages/pacifica/cartd/*' -p test/cmd_test.py dbsync;
    coverage run --include '*/site-packages/pacifica/cartd/*' -p -m pytest -xv test;
    rm -Force db.sqlite3;
    coverage run --include '*/site-packages/pacifica/cartd/*' -p test/cmd_test.py dbsync;
    coverage run --include '*/site-packages/pacifica/cartd/*' -p test/cmd_test.py dbchk --equal;
    coverage run --include '*/site-packages/pacifica/cartd/*' -p test/cmd_test.py dbchk;
    $back_proc = Start-Process C:\pacifica\Scripts\coverage.exe -ArgumentList "run --include='*/site-packages/pacifica/cartd/*' -p -m celery -A pacifica.cartd.tasks worker -l info -P solo -c 1" -PassThru -RedirectStandardError celery-error.log -RedirectStandardOutput celery-output.log;
    $front_proc = Start-Process C:\pacifica\Scripts\coverage.exe -ArgumentList "run --include='*/site-packages/pacifica/cartd/*' -p -m pacifica.cartd --stop-after-a-moment" -PassThru -RedirectStandardError server-error.log -RedirectStandardOutput server-output.log;
    sleep 1;
    coverage run --include="*/site-packages/pacifica/cartd/*" -p -m pytest -xv e2e;
    $test_rc = $?;
    if ( ! $test_rc ) {
              echo "================ Server Error ================";
              cat server-error.log;
              echo "================ Celery Error ================";
              cat celery-error.log;
              echo "================ Archive Error ================";
              cat ../travis/archive-error.log;
              echo "================ Server Output ================";
              cat server-output.log;
              echo "================ Celery Output ================";
              cat celery-output.log;
              echo "================ Archive Output ================";
              cat ../travis/archive-output.log;
              echo "================ End Logs ================";
              exit $test_rc;
    }
    echo 'Asking Celery to Shutdown';
    celery -A pacifica.cartd.tasks control shutdown;
    echo "Waiting for Server to Exit";
    $front_proc | Wait-Process;
    ls .coverage* | %{ coverage combine -a $_.name };
    coverage report -m --fail-under=100;
