[tox]
minversion = 2.0
envlist = py36,py27,pep8

[testenv]
install_command = pip install {opts} {packages}
whitelist_externals = find
                      rm
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
commands = stestr run --slowest {posargs}

[testenv:pep8]
basepython = python3
commands =
  flake8
  # Run security linter
  bandit -r oslo_vmware

[testenv:pylint]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
       pylint>=1.3.0
commands = pylint oslo

[testenv:bandit]
basepython = python3
commands = bandit -r oslo_vmware

[testenv:docs]
basepython = python3
commands = python setup.py build_sphinx

[testenv:cover]
basepython = python3
commands =
  coverage erase
  find . -type f -name "*.pyc" -delete
  python setup.py test --coverage --coverage-package-name=oslo_vmware --testr-args='{posargs}'
  coverage report

[testenv:venv]
basepython = python3
commands = {posargs}

[flake8]
show-source = True
ignore = H405
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,__init__.py

[hacking]
import_exceptions = oslo_vmware.tests.base
                    tests.base
local-check-factory = oslo_vmware.hacking.checks.factory

[testenv:releasenotes]
basepython = python3
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
