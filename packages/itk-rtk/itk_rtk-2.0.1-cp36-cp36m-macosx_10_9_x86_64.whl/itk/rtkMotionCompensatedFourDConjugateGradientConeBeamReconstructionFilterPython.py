# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython
            return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import rtkFourDConjugateGradientConeBeamReconstructionFilterPython
import itkImageToImageFilterRTKPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import vnl_matrixPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrix_fixedPython
import itkPointPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkVectorPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkIndexPython
import itkRGBPixelPython
import itkImageRegionPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageRTKPython
import itkImageBaseRTKPython
import itkMatrixRTKPython
import itkPointRTKPython
import itkCovariantVectorRTKPython
import itkImageRegionRTKPython
import itkImageSourceRTKPython
import itkImageToImageFilterCommonPython
import itkArray2DPython
import rtkForwardProjectionImageFilterPython
import rtkThreeDCircularProjectionGeometryPython
import rtkProjectionGeometryPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageToImageFilterAPython
import rtkBackProjectionImageFilterPython

def rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_New():
  return rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.New()

class rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3(rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3):
    """Proxy of C++ rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Pointer":
        """__New_orig__() -> rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Pointer":
        """Clone(rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 self) -> rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Clone(self)


    def SetDisplacementField(self, DVFs: 'itkImageCVF34') -> "void":
        """SetDisplacementField(rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 self, itkImageCVF34 DVFs)"""
        return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetDisplacementField(self, DVFs)


    def SetInverseDisplacementField(self, DVFs: 'itkImageCVF34') -> "void":
        """SetInverseDisplacementField(rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 self, itkImageCVF34 DVFs)"""
        return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetInverseDisplacementField(self, DVFs)


    def GetDisplacementField(self) -> "itkImageCVF34_ConstPointer":
        """GetDisplacementField(rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 self) -> itkImageCVF34_ConstPointer"""
        return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetDisplacementField(self)


    def GetInverseDisplacementField(self) -> "itkImageCVF34_ConstPointer":
        """GetInverseDisplacementField(rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 self) -> itkImageCVF34_ConstPointer"""
        return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetInverseDisplacementField(self)


    def SetUseCudaCyclicDeformation(self, _arg: 'bool const') -> "void":
        """SetUseCudaCyclicDeformation(rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 self, bool const _arg)"""
        return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetUseCudaCyclicDeformation(self, _arg)


    def GetUseCudaCyclicDeformation(self) -> "bool":
        """GetUseCudaCyclicDeformation(rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 self) -> bool"""
        return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetUseCudaCyclicDeformation(self)

    __swig_destroy__ = _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.delete_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3

    def cast(obj: 'itkLightObject') -> "rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 *":
        """cast(itkLightObject obj) -> rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3"""
        return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3

        Create a new object of the class rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.Clone = new_instancemethod(_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Clone, None, rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3)
rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.SetDisplacementField = new_instancemethod(_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetDisplacementField, None, rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3)
rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.SetInverseDisplacementField = new_instancemethod(_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetInverseDisplacementField, None, rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3)
rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.GetDisplacementField = new_instancemethod(_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetDisplacementField, None, rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3)
rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.GetInverseDisplacementField = new_instancemethod(_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetInverseDisplacementField, None, rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3)
rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.SetUseCudaCyclicDeformation = new_instancemethod(_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_SetUseCudaCyclicDeformation, None, rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3)
rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3.GetUseCudaCyclicDeformation = new_instancemethod(_rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_GetUseCudaCyclicDeformation, None, rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3)
rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_swigregister = _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_swigregister
rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_swigregister(rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3)

def rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3___New_orig__() -> "rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Pointer":
    """rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3___New_orig__() -> rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Pointer"""
    return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3___New_orig__()

def rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_cast(obj: 'itkLightObject') -> "rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3 *":
    """rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_cast(itkLightObject obj) -> rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3"""
    return _rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython.rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_cast(obj)


def motion_compensated_four_d_conjugate_gradient_cone_beam_reconstruction_filter(*args, **kwargs):
    """Procedural interface for MotionCompensatedFourDConjugateGradientConeBeamReconstructionFilter"""
    import itk
    instance = itk.MotionCompensatedFourDConjugateGradientConeBeamReconstructionFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def motion_compensated_four_d_conjugate_gradient_cone_beam_reconstruction_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.MotionCompensatedFourDConjugateGradientConeBeamReconstructionFilter, itkTemplate.itkTemplate):
        motion_compensated_four_d_conjugate_gradient_cone_beam_reconstruction_filter.__doc__ = itk.MotionCompensatedFourDConjugateGradientConeBeamReconstructionFilter.values()[0].__doc__
    else:
        motion_compensated_four_d_conjugate_gradient_cone_beam_reconstruction_filter.__doc__ = itk.MotionCompensatedFourDConjugateGradientConeBeamReconstructionFilter.__doc__




