# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkIterativeConeBeamReconstructionFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkIterativeConeBeamReconstructionFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkIterativeConeBeamReconstructionFilterPython
            return _rtkIterativeConeBeamReconstructionFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkIterativeConeBeamReconstructionFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkIterativeConeBeamReconstructionFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkIterativeConeBeamReconstructionFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterRTKPython
import itkImageSourcePython
import itkImageSourceCommonPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import vnl_matrixPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrix_fixedPython
import itkPointPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkVectorPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkIndexPython
import itkRGBPixelPython
import itkImageRegionPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageRTKPython
import itkImageBaseRTKPython
import itkMatrixRTKPython
import itkPointRTKPython
import itkCovariantVectorRTKPython
import itkImageRegionRTKPython
import itkImageSourceRTKPython
import itkImageToImageFilterCommonPython
import rtkForwardProjectionImageFilterPython
import rtkThreeDCircularProjectionGeometryPython
import rtkProjectionGeometryPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageToImageFilterAPython
import rtkBackProjectionImageFilterPython

def rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_New():
  return rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33.New()


def rtkIterativeConeBeamReconstructionFilterIF4IF3_New():
  return rtkIterativeConeBeamReconstructionFilterIF4IF3.New()


def rtkIterativeConeBeamReconstructionFilterIF3_New():
  return rtkIterativeConeBeamReconstructionFilterIF3.New()

class rtkIterativeConeBeamReconstructionFilterIF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ rtkIterativeConeBeamReconstructionFilterIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    FP_UNKNOWN = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_FP_UNKNOWN
    FP_JOSEPH = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_FP_JOSEPH
    FP_CUDARAYCAST = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_FP_CUDARAYCAST
    FP_JOSEPHATTENUATED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_FP_JOSEPHATTENUATED
    BP_UNKNOWN = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_BP_UNKNOWN
    BP_VOXELBASED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_BP_VOXELBASED
    BP_JOSEPH = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_BP_JOSEPH
    BP_CUDAVOXELBASED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_BP_CUDAVOXELBASED
    BP_CUDARAYCAST = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_BP_CUDARAYCAST
    BP_JOSEPHATTENUATED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_BP_JOSEPHATTENUATED

    def __New_orig__() -> "rtkIterativeConeBeamReconstructionFilterIF3_Pointer":
        """__New_orig__() -> rtkIterativeConeBeamReconstructionFilterIF3_Pointer"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkIterativeConeBeamReconstructionFilterIF3_Pointer":
        """Clone(rtkIterativeConeBeamReconstructionFilterIF3 self) -> rtkIterativeConeBeamReconstructionFilterIF3_Pointer"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_Clone(self)


    def SetForwardProjectionFilter(self, fwtype: 'rtkIterativeConeBeamReconstructionFilterIF3::ForwardProjectionType') -> "void":
        """SetForwardProjectionFilter(rtkIterativeConeBeamReconstructionFilterIF3 self, rtkIterativeConeBeamReconstructionFilterIF3::ForwardProjectionType fwtype)"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_SetForwardProjectionFilter(self, fwtype)


    def GetForwardProjectionFilter(self) -> "rtkIterativeConeBeamReconstructionFilterIF3::ForwardProjectionType":
        """GetForwardProjectionFilter(rtkIterativeConeBeamReconstructionFilterIF3 self) -> rtkIterativeConeBeamReconstructionFilterIF3::ForwardProjectionType"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_GetForwardProjectionFilter(self)


    def SetBackProjectionFilter(self, bptype: 'rtkIterativeConeBeamReconstructionFilterIF3::BackProjectionType') -> "void":
        """SetBackProjectionFilter(rtkIterativeConeBeamReconstructionFilterIF3 self, rtkIterativeConeBeamReconstructionFilterIF3::BackProjectionType bptype)"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_SetBackProjectionFilter(self, bptype)


    def GetBackProjectionFilter(self) -> "rtkIterativeConeBeamReconstructionFilterIF3::BackProjectionType":
        """GetBackProjectionFilter(rtkIterativeConeBeamReconstructionFilterIF3 self) -> rtkIterativeConeBeamReconstructionFilterIF3::BackProjectionType"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_GetBackProjectionFilter(self)

    __swig_destroy__ = _rtkIterativeConeBeamReconstructionFilterPython.delete_rtkIterativeConeBeamReconstructionFilterIF3

    def cast(obj: 'itkLightObject') -> "rtkIterativeConeBeamReconstructionFilterIF3 *":
        """cast(itkLightObject obj) -> rtkIterativeConeBeamReconstructionFilterIF3"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkIterativeConeBeamReconstructionFilterIF3

        Create a new object of the class rtkIterativeConeBeamReconstructionFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkIterativeConeBeamReconstructionFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkIterativeConeBeamReconstructionFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkIterativeConeBeamReconstructionFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkIterativeConeBeamReconstructionFilterIF3.Clone = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_Clone, None, rtkIterativeConeBeamReconstructionFilterIF3)
rtkIterativeConeBeamReconstructionFilterIF3.SetForwardProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_SetForwardProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIF3)
rtkIterativeConeBeamReconstructionFilterIF3.GetForwardProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_GetForwardProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIF3)
rtkIterativeConeBeamReconstructionFilterIF3.SetBackProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_SetBackProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIF3)
rtkIterativeConeBeamReconstructionFilterIF3.GetBackProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_GetBackProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIF3)
rtkIterativeConeBeamReconstructionFilterIF3_swigregister = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_swigregister
rtkIterativeConeBeamReconstructionFilterIF3_swigregister(rtkIterativeConeBeamReconstructionFilterIF3)

def rtkIterativeConeBeamReconstructionFilterIF3___New_orig__() -> "rtkIterativeConeBeamReconstructionFilterIF3_Pointer":
    """rtkIterativeConeBeamReconstructionFilterIF3___New_orig__() -> rtkIterativeConeBeamReconstructionFilterIF3_Pointer"""
    return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3___New_orig__()

def rtkIterativeConeBeamReconstructionFilterIF3_cast(obj: 'itkLightObject') -> "rtkIterativeConeBeamReconstructionFilterIF3 *":
    """rtkIterativeConeBeamReconstructionFilterIF3_cast(itkLightObject obj) -> rtkIterativeConeBeamReconstructionFilterIF3"""
    return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3_cast(obj)

class rtkIterativeConeBeamReconstructionFilterIF4IF3(itkImageToImageFilterRTKPython.itkImageToImageFilterIF4IF4):
    """Proxy of C++ rtkIterativeConeBeamReconstructionFilterIF4IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    FP_UNKNOWN = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_FP_UNKNOWN
    FP_JOSEPH = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_FP_JOSEPH
    FP_CUDARAYCAST = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_FP_CUDARAYCAST
    FP_JOSEPHATTENUATED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_FP_JOSEPHATTENUATED
    BP_UNKNOWN = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_BP_UNKNOWN
    BP_VOXELBASED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_BP_VOXELBASED
    BP_JOSEPH = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_BP_JOSEPH
    BP_CUDAVOXELBASED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_BP_CUDAVOXELBASED
    BP_CUDARAYCAST = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_BP_CUDARAYCAST
    BP_JOSEPHATTENUATED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_BP_JOSEPHATTENUATED

    def __New_orig__() -> "rtkIterativeConeBeamReconstructionFilterIF4IF3_Pointer":
        """__New_orig__() -> rtkIterativeConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkIterativeConeBeamReconstructionFilterIF4IF3_Pointer":
        """Clone(rtkIterativeConeBeamReconstructionFilterIF4IF3 self) -> rtkIterativeConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_Clone(self)


    def SetForwardProjectionFilter(self, fwtype: 'rtkIterativeConeBeamReconstructionFilterIF4IF3::ForwardProjectionType') -> "void":
        """SetForwardProjectionFilter(rtkIterativeConeBeamReconstructionFilterIF4IF3 self, rtkIterativeConeBeamReconstructionFilterIF4IF3::ForwardProjectionType fwtype)"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_SetForwardProjectionFilter(self, fwtype)


    def GetForwardProjectionFilter(self) -> "rtkIterativeConeBeamReconstructionFilterIF4IF3::ForwardProjectionType":
        """GetForwardProjectionFilter(rtkIterativeConeBeamReconstructionFilterIF4IF3 self) -> rtkIterativeConeBeamReconstructionFilterIF4IF3::ForwardProjectionType"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_GetForwardProjectionFilter(self)


    def SetBackProjectionFilter(self, bptype: 'rtkIterativeConeBeamReconstructionFilterIF4IF3::BackProjectionType') -> "void":
        """SetBackProjectionFilter(rtkIterativeConeBeamReconstructionFilterIF4IF3 self, rtkIterativeConeBeamReconstructionFilterIF4IF3::BackProjectionType bptype)"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_SetBackProjectionFilter(self, bptype)


    def GetBackProjectionFilter(self) -> "rtkIterativeConeBeamReconstructionFilterIF4IF3::BackProjectionType":
        """GetBackProjectionFilter(rtkIterativeConeBeamReconstructionFilterIF4IF3 self) -> rtkIterativeConeBeamReconstructionFilterIF4IF3::BackProjectionType"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_GetBackProjectionFilter(self)

    __swig_destroy__ = _rtkIterativeConeBeamReconstructionFilterPython.delete_rtkIterativeConeBeamReconstructionFilterIF4IF3

    def cast(obj: 'itkLightObject') -> "rtkIterativeConeBeamReconstructionFilterIF4IF3 *":
        """cast(itkLightObject obj) -> rtkIterativeConeBeamReconstructionFilterIF4IF3"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkIterativeConeBeamReconstructionFilterIF4IF3

        Create a new object of the class rtkIterativeConeBeamReconstructionFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkIterativeConeBeamReconstructionFilterIF4IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkIterativeConeBeamReconstructionFilterIF4IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkIterativeConeBeamReconstructionFilterIF4IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkIterativeConeBeamReconstructionFilterIF4IF3.Clone = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_Clone, None, rtkIterativeConeBeamReconstructionFilterIF4IF3)
rtkIterativeConeBeamReconstructionFilterIF4IF3.SetForwardProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_SetForwardProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIF4IF3)
rtkIterativeConeBeamReconstructionFilterIF4IF3.GetForwardProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_GetForwardProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIF4IF3)
rtkIterativeConeBeamReconstructionFilterIF4IF3.SetBackProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_SetBackProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIF4IF3)
rtkIterativeConeBeamReconstructionFilterIF4IF3.GetBackProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_GetBackProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIF4IF3)
rtkIterativeConeBeamReconstructionFilterIF4IF3_swigregister = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_swigregister
rtkIterativeConeBeamReconstructionFilterIF4IF3_swigregister(rtkIterativeConeBeamReconstructionFilterIF4IF3)

def rtkIterativeConeBeamReconstructionFilterIF4IF3___New_orig__() -> "rtkIterativeConeBeamReconstructionFilterIF4IF3_Pointer":
    """rtkIterativeConeBeamReconstructionFilterIF4IF3___New_orig__() -> rtkIterativeConeBeamReconstructionFilterIF4IF3_Pointer"""
    return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3___New_orig__()

def rtkIterativeConeBeamReconstructionFilterIF4IF3_cast(obj: 'itkLightObject') -> "rtkIterativeConeBeamReconstructionFilterIF4IF3 *":
    """rtkIterativeConeBeamReconstructionFilterIF4IF3_cast(itkLightObject obj) -> rtkIterativeConeBeamReconstructionFilterIF4IF3"""
    return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF4IF3_cast(obj)

class rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33(itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    """Proxy of C++ rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    FP_UNKNOWN = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_FP_UNKNOWN
    FP_JOSEPH = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_FP_JOSEPH
    FP_CUDARAYCAST = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_FP_CUDARAYCAST
    FP_JOSEPHATTENUATED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_FP_JOSEPHATTENUATED
    BP_UNKNOWN = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_BP_UNKNOWN
    BP_VOXELBASED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_BP_VOXELBASED
    BP_JOSEPH = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_BP_JOSEPH
    BP_CUDAVOXELBASED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_BP_CUDAVOXELBASED
    BP_CUDARAYCAST = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_BP_CUDARAYCAST
    BP_JOSEPHATTENUATED = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_BP_JOSEPHATTENUATED

    def __New_orig__() -> "rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_Pointer":
        """__New_orig__() -> rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_Pointer"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_Pointer":
        """Clone(rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33 self) -> rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_Pointer"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_Clone(self)


    def SetForwardProjectionFilter(self, fwtype: 'rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33::ForwardProjectionType') -> "void":
        """SetForwardProjectionFilter(rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33 self, rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33::ForwardProjectionType fwtype)"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_SetForwardProjectionFilter(self, fwtype)


    def GetForwardProjectionFilter(self) -> "rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33::ForwardProjectionType":
        """GetForwardProjectionFilter(rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33 self) -> rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33::ForwardProjectionType"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_GetForwardProjectionFilter(self)


    def SetBackProjectionFilter(self, bptype: 'rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33::BackProjectionType') -> "void":
        """SetBackProjectionFilter(rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33 self, rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33::BackProjectionType bptype)"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_SetBackProjectionFilter(self, bptype)


    def GetBackProjectionFilter(self) -> "rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33::BackProjectionType":
        """GetBackProjectionFilter(rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33 self) -> rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33::BackProjectionType"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_GetBackProjectionFilter(self)

    __swig_destroy__ = _rtkIterativeConeBeamReconstructionFilterPython.delete_rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33

    def cast(obj: 'itkLightObject') -> "rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33 *":
        """cast(itkLightObject obj) -> rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33"""
        return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33

        Create a new object of the class rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33.Clone = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_Clone, None, rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33)
rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33.SetForwardProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_SetForwardProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33)
rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33.GetForwardProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_GetForwardProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33)
rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33.SetBackProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_SetBackProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33)
rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33.GetBackProjectionFilter = new_instancemethod(_rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_GetBackProjectionFilter, None, rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33)
rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_swigregister = _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_swigregister
rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_swigregister(rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33)

def rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33___New_orig__() -> "rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_Pointer":
    """rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33___New_orig__() -> rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_Pointer"""
    return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33___New_orig__()

def rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_cast(obj: 'itkLightObject') -> "rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33 *":
    """rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_cast(itkLightObject obj) -> rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33"""
    return _rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVVF33IVVF33_cast(obj)


def iterative_cone_beam_reconstruction_filter(*args, **kwargs):
    """Procedural interface for IterativeConeBeamReconstructionFilter"""
    import itk
    instance = itk.IterativeConeBeamReconstructionFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def iterative_cone_beam_reconstruction_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.IterativeConeBeamReconstructionFilter, itkTemplate.itkTemplate):
        iterative_cone_beam_reconstruction_filter.__doc__ = itk.IterativeConeBeamReconstructionFilter.values()[0].__doc__
    else:
        iterative_cone_beam_reconstruction_filter.__doc__ = itk.IterativeConeBeamReconstructionFilter.__doc__




