# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkDenoisingBPDQImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkDenoisingBPDQImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkDenoisingBPDQImageFilterPython
            return _rtkDenoisingBPDQImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkDenoisingBPDQImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkDenoisingBPDQImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkDenoisingBPDQImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import vnl_matrixPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrix_fixedPython
import itkPointPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkVectorPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkIndexPython
import itkRGBPixelPython
import itkImageRegionPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def rtkDenoisingBPDQImageFilterIF3ICVF33_New():
  return rtkDenoisingBPDQImageFilterIF3ICVF33.New()


def rtkDenoisingBPDQImageFilterIF2ICVF22_New():
  return rtkDenoisingBPDQImageFilterIF2ICVF22.New()

class rtkDenoisingBPDQImageFilterIF2ICVF22(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ rtkDenoisingBPDQImageFilterIF2ICVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkDenoisingBPDQImageFilterIF2ICVF22_Pointer":
        """__New_orig__() -> rtkDenoisingBPDQImageFilterIF2ICVF22_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkDenoisingBPDQImageFilterIF2ICVF22_Pointer":
        """Clone(rtkDenoisingBPDQImageFilterIF2ICVF22 self) -> rtkDenoisingBPDQImageFilterIF2ICVF22_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_Clone(self)


    def GetNumberOfIterations(self) -> "int":
        """GetNumberOfIterations(rtkDenoisingBPDQImageFilterIF2ICVF22 self) -> int"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_GetNumberOfIterations(self)


    def SetNumberOfIterations(self, _arg: 'int const') -> "void":
        """SetNumberOfIterations(rtkDenoisingBPDQImageFilterIF2ICVF22 self, int const _arg)"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_SetNumberOfIterations(self, _arg)


    def SetGamma(self, _arg: 'double const') -> "void":
        """SetGamma(rtkDenoisingBPDQImageFilterIF2ICVF22 self, double const _arg)"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_SetGamma(self, _arg)


    def GetGamma(self) -> "double":
        """GetGamma(rtkDenoisingBPDQImageFilterIF2ICVF22 self) -> double"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_GetGamma(self)

    __swig_destroy__ = _rtkDenoisingBPDQImageFilterPython.delete_rtkDenoisingBPDQImageFilterIF2ICVF22

    def cast(obj: 'itkLightObject') -> "rtkDenoisingBPDQImageFilterIF2ICVF22 *":
        """cast(itkLightObject obj) -> rtkDenoisingBPDQImageFilterIF2ICVF22"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkDenoisingBPDQImageFilterIF2ICVF22

        Create a new object of the class rtkDenoisingBPDQImageFilterIF2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDenoisingBPDQImageFilterIF2ICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkDenoisingBPDQImageFilterIF2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkDenoisingBPDQImageFilterIF2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkDenoisingBPDQImageFilterIF2ICVF22.Clone = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_Clone, None, rtkDenoisingBPDQImageFilterIF2ICVF22)
rtkDenoisingBPDQImageFilterIF2ICVF22.GetNumberOfIterations = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_GetNumberOfIterations, None, rtkDenoisingBPDQImageFilterIF2ICVF22)
rtkDenoisingBPDQImageFilterIF2ICVF22.SetNumberOfIterations = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_SetNumberOfIterations, None, rtkDenoisingBPDQImageFilterIF2ICVF22)
rtkDenoisingBPDQImageFilterIF2ICVF22.SetGamma = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_SetGamma, None, rtkDenoisingBPDQImageFilterIF2ICVF22)
rtkDenoisingBPDQImageFilterIF2ICVF22.GetGamma = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_GetGamma, None, rtkDenoisingBPDQImageFilterIF2ICVF22)
rtkDenoisingBPDQImageFilterIF2ICVF22_swigregister = _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_swigregister
rtkDenoisingBPDQImageFilterIF2ICVF22_swigregister(rtkDenoisingBPDQImageFilterIF2ICVF22)

def rtkDenoisingBPDQImageFilterIF2ICVF22___New_orig__() -> "rtkDenoisingBPDQImageFilterIF2ICVF22_Pointer":
    """rtkDenoisingBPDQImageFilterIF2ICVF22___New_orig__() -> rtkDenoisingBPDQImageFilterIF2ICVF22_Pointer"""
    return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22___New_orig__()

def rtkDenoisingBPDQImageFilterIF2ICVF22_cast(obj: 'itkLightObject') -> "rtkDenoisingBPDQImageFilterIF2ICVF22 *":
    """rtkDenoisingBPDQImageFilterIF2ICVF22_cast(itkLightObject obj) -> rtkDenoisingBPDQImageFilterIF2ICVF22"""
    return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF2ICVF22_cast(obj)

class rtkDenoisingBPDQImageFilterIF3ICVF33(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ rtkDenoisingBPDQImageFilterIF3ICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkDenoisingBPDQImageFilterIF3ICVF33_Pointer":
        """__New_orig__() -> rtkDenoisingBPDQImageFilterIF3ICVF33_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkDenoisingBPDQImageFilterIF3ICVF33_Pointer":
        """Clone(rtkDenoisingBPDQImageFilterIF3ICVF33 self) -> rtkDenoisingBPDQImageFilterIF3ICVF33_Pointer"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_Clone(self)


    def GetNumberOfIterations(self) -> "int":
        """GetNumberOfIterations(rtkDenoisingBPDQImageFilterIF3ICVF33 self) -> int"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_GetNumberOfIterations(self)


    def SetNumberOfIterations(self, _arg: 'int const') -> "void":
        """SetNumberOfIterations(rtkDenoisingBPDQImageFilterIF3ICVF33 self, int const _arg)"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_SetNumberOfIterations(self, _arg)


    def SetGamma(self, _arg: 'double const') -> "void":
        """SetGamma(rtkDenoisingBPDQImageFilterIF3ICVF33 self, double const _arg)"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_SetGamma(self, _arg)


    def GetGamma(self) -> "double":
        """GetGamma(rtkDenoisingBPDQImageFilterIF3ICVF33 self) -> double"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_GetGamma(self)

    __swig_destroy__ = _rtkDenoisingBPDQImageFilterPython.delete_rtkDenoisingBPDQImageFilterIF3ICVF33

    def cast(obj: 'itkLightObject') -> "rtkDenoisingBPDQImageFilterIF3ICVF33 *":
        """cast(itkLightObject obj) -> rtkDenoisingBPDQImageFilterIF3ICVF33"""
        return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkDenoisingBPDQImageFilterIF3ICVF33

        Create a new object of the class rtkDenoisingBPDQImageFilterIF3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDenoisingBPDQImageFilterIF3ICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkDenoisingBPDQImageFilterIF3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkDenoisingBPDQImageFilterIF3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkDenoisingBPDQImageFilterIF3ICVF33.Clone = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_Clone, None, rtkDenoisingBPDQImageFilterIF3ICVF33)
rtkDenoisingBPDQImageFilterIF3ICVF33.GetNumberOfIterations = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_GetNumberOfIterations, None, rtkDenoisingBPDQImageFilterIF3ICVF33)
rtkDenoisingBPDQImageFilterIF3ICVF33.SetNumberOfIterations = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_SetNumberOfIterations, None, rtkDenoisingBPDQImageFilterIF3ICVF33)
rtkDenoisingBPDQImageFilterIF3ICVF33.SetGamma = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_SetGamma, None, rtkDenoisingBPDQImageFilterIF3ICVF33)
rtkDenoisingBPDQImageFilterIF3ICVF33.GetGamma = new_instancemethod(_rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_GetGamma, None, rtkDenoisingBPDQImageFilterIF3ICVF33)
rtkDenoisingBPDQImageFilterIF3ICVF33_swigregister = _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_swigregister
rtkDenoisingBPDQImageFilterIF3ICVF33_swigregister(rtkDenoisingBPDQImageFilterIF3ICVF33)

def rtkDenoisingBPDQImageFilterIF3ICVF33___New_orig__() -> "rtkDenoisingBPDQImageFilterIF3ICVF33_Pointer":
    """rtkDenoisingBPDQImageFilterIF3ICVF33___New_orig__() -> rtkDenoisingBPDQImageFilterIF3ICVF33_Pointer"""
    return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33___New_orig__()

def rtkDenoisingBPDQImageFilterIF3ICVF33_cast(obj: 'itkLightObject') -> "rtkDenoisingBPDQImageFilterIF3ICVF33 *":
    """rtkDenoisingBPDQImageFilterIF3ICVF33_cast(itkLightObject obj) -> rtkDenoisingBPDQImageFilterIF3ICVF33"""
    return _rtkDenoisingBPDQImageFilterPython.rtkDenoisingBPDQImageFilterIF3ICVF33_cast(obj)


def denoising_bpdq_image_filter(*args, **kwargs):
    """Procedural interface for DenoisingBPDQImageFilter"""
    import itk
    instance = itk.DenoisingBPDQImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def denoising_bpdq_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.DenoisingBPDQImageFilter, itkTemplate.itkTemplate):
        denoising_bpdq_image_filter.__doc__ = itk.DenoisingBPDQImageFilter.values()[0].__doc__
    else:
        denoising_bpdq_image_filter.__doc__ = itk.DenoisingBPDQImageFilter.__doc__




