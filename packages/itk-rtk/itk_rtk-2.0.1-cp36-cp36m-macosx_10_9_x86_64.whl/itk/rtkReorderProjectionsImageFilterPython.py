# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkReorderProjectionsImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkReorderProjectionsImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkReorderProjectionsImageFilterPython
            return _rtkReorderProjectionsImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkReorderProjectionsImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkReorderProjectionsImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkReorderProjectionsImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterBPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import pyBasePython
import itkMatrixPython
import vnl_matrixPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrix_fixedPython
import itkPointPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkVectorPython
import itkCovariantVectorPython
import ITKCommonBasePython
import itkSymmetricSecondRankTensorPython
import itkIndexPython
import itkRGBPixelPython
import itkImageRegionPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import rtkThreeDCircularProjectionGeometryPython
import rtkProjectionGeometryPython
import itkImageToImageFilterAPython

def rtkReorderProjectionsImageFilterICF3ICF3_New():
  return rtkReorderProjectionsImageFilterICF3ICF3.New()


def rtkReorderProjectionsImageFilterIF3IF3_New():
  return rtkReorderProjectionsImageFilterIF3IF3.New()


def rtkReorderProjectionsImageFilterIUS3IUS3_New():
  return rtkReorderProjectionsImageFilterIUS3IUS3.New()


def rtkReorderProjectionsImageFilterIUC3IUC3_New():
  return rtkReorderProjectionsImageFilterIUC3IUC3.New()


def rtkReorderProjectionsImageFilterISS3ISS3_New():
  return rtkReorderProjectionsImageFilterISS3ISS3.New()


def rtkReorderProjectionsImageFilterICVF43ICVF43_New():
  return rtkReorderProjectionsImageFilterICVF43ICVF43.New()


def rtkReorderProjectionsImageFilterICVF33ICVF33_New():
  return rtkReorderProjectionsImageFilterICVF33ICVF33.New()


def rtkReorderProjectionsImageFilterICVF23ICVF23_New():
  return rtkReorderProjectionsImageFilterICVF23ICVF23.New()


def rtkReorderProjectionsImageFilterIVF43IVF43_New():
  return rtkReorderProjectionsImageFilterIVF43IVF43.New()


def rtkReorderProjectionsImageFilterIVF33IVF33_New():
  return rtkReorderProjectionsImageFilterIVF33IVF33.New()


def rtkReorderProjectionsImageFilterIVF23IVF23_New():
  return rtkReorderProjectionsImageFilterIVF23IVF23.New()


def rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_New():
  return rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.New()


def rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_New():
  return rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.New()

class rtkReorderProjectionsImageFilterICF3ICF3(itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    """Proxy of C++ rtkReorderProjectionsImageFilterICF3ICF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterICF3ICF3_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterICF3ICF3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterICF3ICF3_Pointer":
        """Clone(rtkReorderProjectionsImageFilterICF3ICF3 self) -> rtkReorderProjectionsImageFilterICF3ICF3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterICF3ICF3 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterICF3ICF3 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterICF3ICF3 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterICF3ICF3 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterICF3ICF3::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterICF3ICF3 self) -> rtkReorderProjectionsImageFilterICF3ICF3::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterICF3ICF3::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterICF3ICF3 self, rtkReorderProjectionsImageFilterICF3ICF3::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterICF3ICF3 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterICF3ICF3 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterICF3ICF3

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterICF3ICF3 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterICF3ICF3"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterICF3ICF3

        Create a new object of the class rtkReorderProjectionsImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterICF3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterICF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterICF3ICF3.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_Clone, None, rtkReorderProjectionsImageFilterICF3ICF3)
rtkReorderProjectionsImageFilterICF3ICF3.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterICF3ICF3)
rtkReorderProjectionsImageFilterICF3ICF3.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetOutputGeometry, None, rtkReorderProjectionsImageFilterICF3ICF3)
rtkReorderProjectionsImageFilterICF3ICF3.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SetInputGeometry, None, rtkReorderProjectionsImageFilterICF3ICF3)
rtkReorderProjectionsImageFilterICF3ICF3.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetPermutation, None, rtkReorderProjectionsImageFilterICF3ICF3)
rtkReorderProjectionsImageFilterICF3ICF3.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SetPermutation, None, rtkReorderProjectionsImageFilterICF3ICF3)
rtkReorderProjectionsImageFilterICF3ICF3.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SetInputSignal, None, rtkReorderProjectionsImageFilterICF3ICF3)
rtkReorderProjectionsImageFilterICF3ICF3.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetOutputSignal, None, rtkReorderProjectionsImageFilterICF3ICF3)
rtkReorderProjectionsImageFilterICF3ICF3_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_swigregister
rtkReorderProjectionsImageFilterICF3ICF3_swigregister(rtkReorderProjectionsImageFilterICF3ICF3)

def rtkReorderProjectionsImageFilterICF3ICF3___New_orig__() -> "rtkReorderProjectionsImageFilterICF3ICF3_Pointer":
    """rtkReorderProjectionsImageFilterICF3ICF3___New_orig__() -> rtkReorderProjectionsImageFilterICF3ICF3_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3___New_orig__()

def rtkReorderProjectionsImageFilterICF3ICF3_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterICF3ICF3 *":
    """rtkReorderProjectionsImageFilterICF3ICF3_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterICF3ICF3"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_cast(obj)

class rtkReorderProjectionsImageFilterICVF23ICVF23(itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23):
    """Proxy of C++ rtkReorderProjectionsImageFilterICVF23ICVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterICVF23ICVF23_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterICVF23ICVF23_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterICVF23ICVF23_Pointer":
        """Clone(rtkReorderProjectionsImageFilterICVF23ICVF23 self) -> rtkReorderProjectionsImageFilterICVF23ICVF23_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterICVF23ICVF23 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterICVF23ICVF23 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterICVF23ICVF23 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterICVF23ICVF23 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterICVF23ICVF23::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterICVF23ICVF23 self) -> rtkReorderProjectionsImageFilterICVF23ICVF23::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterICVF23ICVF23::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterICVF23ICVF23 self, rtkReorderProjectionsImageFilterICVF23ICVF23::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterICVF23ICVF23 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterICVF23ICVF23 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterICVF23ICVF23

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterICVF23ICVF23 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterICVF23ICVF23"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterICVF23ICVF23

        Create a new object of the class rtkReorderProjectionsImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterICVF23ICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterICVF23ICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterICVF23ICVF23.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_Clone, None, rtkReorderProjectionsImageFilterICVF23ICVF23)
rtkReorderProjectionsImageFilterICVF23ICVF23.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterICVF23ICVF23)
rtkReorderProjectionsImageFilterICVF23ICVF23.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetOutputGeometry, None, rtkReorderProjectionsImageFilterICVF23ICVF23)
rtkReorderProjectionsImageFilterICVF23ICVF23.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SetInputGeometry, None, rtkReorderProjectionsImageFilterICVF23ICVF23)
rtkReorderProjectionsImageFilterICVF23ICVF23.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetPermutation, None, rtkReorderProjectionsImageFilterICVF23ICVF23)
rtkReorderProjectionsImageFilterICVF23ICVF23.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SetPermutation, None, rtkReorderProjectionsImageFilterICVF23ICVF23)
rtkReorderProjectionsImageFilterICVF23ICVF23.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SetInputSignal, None, rtkReorderProjectionsImageFilterICVF23ICVF23)
rtkReorderProjectionsImageFilterICVF23ICVF23.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetOutputSignal, None, rtkReorderProjectionsImageFilterICVF23ICVF23)
rtkReorderProjectionsImageFilterICVF23ICVF23_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_swigregister
rtkReorderProjectionsImageFilterICVF23ICVF23_swigregister(rtkReorderProjectionsImageFilterICVF23ICVF23)

def rtkReorderProjectionsImageFilterICVF23ICVF23___New_orig__() -> "rtkReorderProjectionsImageFilterICVF23ICVF23_Pointer":
    """rtkReorderProjectionsImageFilterICVF23ICVF23___New_orig__() -> rtkReorderProjectionsImageFilterICVF23ICVF23_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23___New_orig__()

def rtkReorderProjectionsImageFilterICVF23ICVF23_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterICVF23ICVF23 *":
    """rtkReorderProjectionsImageFilterICVF23ICVF23_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterICVF23ICVF23"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_cast(obj)

class rtkReorderProjectionsImageFilterICVF33ICVF33(itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33):
    """Proxy of C++ rtkReorderProjectionsImageFilterICVF33ICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterICVF33ICVF33_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterICVF33ICVF33_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterICVF33ICVF33_Pointer":
        """Clone(rtkReorderProjectionsImageFilterICVF33ICVF33 self) -> rtkReorderProjectionsImageFilterICVF33ICVF33_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterICVF33ICVF33 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterICVF33ICVF33 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterICVF33ICVF33 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterICVF33ICVF33 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterICVF33ICVF33::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterICVF33ICVF33 self) -> rtkReorderProjectionsImageFilterICVF33ICVF33::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterICVF33ICVF33::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterICVF33ICVF33 self, rtkReorderProjectionsImageFilterICVF33ICVF33::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterICVF33ICVF33 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterICVF33ICVF33 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterICVF33ICVF33

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterICVF33ICVF33 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterICVF33ICVF33"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterICVF33ICVF33

        Create a new object of the class rtkReorderProjectionsImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterICVF33ICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterICVF33ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterICVF33ICVF33.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_Clone, None, rtkReorderProjectionsImageFilterICVF33ICVF33)
rtkReorderProjectionsImageFilterICVF33ICVF33.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterICVF33ICVF33)
rtkReorderProjectionsImageFilterICVF33ICVF33.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetOutputGeometry, None, rtkReorderProjectionsImageFilterICVF33ICVF33)
rtkReorderProjectionsImageFilterICVF33ICVF33.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SetInputGeometry, None, rtkReorderProjectionsImageFilterICVF33ICVF33)
rtkReorderProjectionsImageFilterICVF33ICVF33.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetPermutation, None, rtkReorderProjectionsImageFilterICVF33ICVF33)
rtkReorderProjectionsImageFilterICVF33ICVF33.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SetPermutation, None, rtkReorderProjectionsImageFilterICVF33ICVF33)
rtkReorderProjectionsImageFilterICVF33ICVF33.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SetInputSignal, None, rtkReorderProjectionsImageFilterICVF33ICVF33)
rtkReorderProjectionsImageFilterICVF33ICVF33.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetOutputSignal, None, rtkReorderProjectionsImageFilterICVF33ICVF33)
rtkReorderProjectionsImageFilterICVF33ICVF33_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_swigregister
rtkReorderProjectionsImageFilterICVF33ICVF33_swigregister(rtkReorderProjectionsImageFilterICVF33ICVF33)

def rtkReorderProjectionsImageFilterICVF33ICVF33___New_orig__() -> "rtkReorderProjectionsImageFilterICVF33ICVF33_Pointer":
    """rtkReorderProjectionsImageFilterICVF33ICVF33___New_orig__() -> rtkReorderProjectionsImageFilterICVF33ICVF33_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33___New_orig__()

def rtkReorderProjectionsImageFilterICVF33ICVF33_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterICVF33ICVF33 *":
    """rtkReorderProjectionsImageFilterICVF33ICVF33_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterICVF33ICVF33"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_cast(obj)

class rtkReorderProjectionsImageFilterICVF43ICVF43(itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43):
    """Proxy of C++ rtkReorderProjectionsImageFilterICVF43ICVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterICVF43ICVF43_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterICVF43ICVF43_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterICVF43ICVF43_Pointer":
        """Clone(rtkReorderProjectionsImageFilterICVF43ICVF43 self) -> rtkReorderProjectionsImageFilterICVF43ICVF43_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterICVF43ICVF43 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterICVF43ICVF43 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterICVF43ICVF43 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterICVF43ICVF43 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterICVF43ICVF43::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterICVF43ICVF43 self) -> rtkReorderProjectionsImageFilterICVF43ICVF43::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterICVF43ICVF43::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterICVF43ICVF43 self, rtkReorderProjectionsImageFilterICVF43ICVF43::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterICVF43ICVF43 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterICVF43ICVF43 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterICVF43ICVF43

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterICVF43ICVF43 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterICVF43ICVF43"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterICVF43ICVF43

        Create a new object of the class rtkReorderProjectionsImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterICVF43ICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterICVF43ICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterICVF43ICVF43.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_Clone, None, rtkReorderProjectionsImageFilterICVF43ICVF43)
rtkReorderProjectionsImageFilterICVF43ICVF43.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterICVF43ICVF43)
rtkReorderProjectionsImageFilterICVF43ICVF43.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetOutputGeometry, None, rtkReorderProjectionsImageFilterICVF43ICVF43)
rtkReorderProjectionsImageFilterICVF43ICVF43.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SetInputGeometry, None, rtkReorderProjectionsImageFilterICVF43ICVF43)
rtkReorderProjectionsImageFilterICVF43ICVF43.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetPermutation, None, rtkReorderProjectionsImageFilterICVF43ICVF43)
rtkReorderProjectionsImageFilterICVF43ICVF43.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SetPermutation, None, rtkReorderProjectionsImageFilterICVF43ICVF43)
rtkReorderProjectionsImageFilterICVF43ICVF43.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SetInputSignal, None, rtkReorderProjectionsImageFilterICVF43ICVF43)
rtkReorderProjectionsImageFilterICVF43ICVF43.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetOutputSignal, None, rtkReorderProjectionsImageFilterICVF43ICVF43)
rtkReorderProjectionsImageFilterICVF43ICVF43_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_swigregister
rtkReorderProjectionsImageFilterICVF43ICVF43_swigregister(rtkReorderProjectionsImageFilterICVF43ICVF43)

def rtkReorderProjectionsImageFilterICVF43ICVF43___New_orig__() -> "rtkReorderProjectionsImageFilterICVF43ICVF43_Pointer":
    """rtkReorderProjectionsImageFilterICVF43ICVF43___New_orig__() -> rtkReorderProjectionsImageFilterICVF43ICVF43_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43___New_orig__()

def rtkReorderProjectionsImageFilterICVF43ICVF43_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterICVF43ICVF43 *":
    """rtkReorderProjectionsImageFilterICVF43ICVF43_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterICVF43ICVF43"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_cast(obj)

class rtkReorderProjectionsImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ rtkReorderProjectionsImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterIF3IF3_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterIF3IF3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterIF3IF3_Pointer":
        """Clone(rtkReorderProjectionsImageFilterIF3IF3 self) -> rtkReorderProjectionsImageFilterIF3IF3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterIF3IF3 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterIF3IF3 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterIF3IF3 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterIF3IF3 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterIF3IF3::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterIF3IF3 self) -> rtkReorderProjectionsImageFilterIF3IF3::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterIF3IF3::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterIF3IF3 self, rtkReorderProjectionsImageFilterIF3IF3::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterIF3IF3 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterIF3IF3 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIF3IF3"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIF3IF3

        Create a new object of the class rtkReorderProjectionsImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterIF3IF3.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_Clone, None, rtkReorderProjectionsImageFilterIF3IF3)
rtkReorderProjectionsImageFilterIF3IF3.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterIF3IF3)
rtkReorderProjectionsImageFilterIF3IF3.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetOutputGeometry, None, rtkReorderProjectionsImageFilterIF3IF3)
rtkReorderProjectionsImageFilterIF3IF3.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SetInputGeometry, None, rtkReorderProjectionsImageFilterIF3IF3)
rtkReorderProjectionsImageFilterIF3IF3.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetPermutation, None, rtkReorderProjectionsImageFilterIF3IF3)
rtkReorderProjectionsImageFilterIF3IF3.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SetPermutation, None, rtkReorderProjectionsImageFilterIF3IF3)
rtkReorderProjectionsImageFilterIF3IF3.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SetInputSignal, None, rtkReorderProjectionsImageFilterIF3IF3)
rtkReorderProjectionsImageFilterIF3IF3.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetOutputSignal, None, rtkReorderProjectionsImageFilterIF3IF3)
rtkReorderProjectionsImageFilterIF3IF3_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_swigregister
rtkReorderProjectionsImageFilterIF3IF3_swigregister(rtkReorderProjectionsImageFilterIF3IF3)

def rtkReorderProjectionsImageFilterIF3IF3___New_orig__() -> "rtkReorderProjectionsImageFilterIF3IF3_Pointer":
    """rtkReorderProjectionsImageFilterIF3IF3___New_orig__() -> rtkReorderProjectionsImageFilterIF3IF3_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3___New_orig__()

def rtkReorderProjectionsImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIF3IF3 *":
    """rtkReorderProjectionsImageFilterIF3IF3_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIF3IF3"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_cast(obj)

class rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    """Proxy of C++ rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_Pointer":
        """Clone(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 self) -> rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 self) -> rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 self, rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_Clone, None, rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetOutputGeometry, None, rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SetInputGeometry, None, rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetPermutation, None, rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SetPermutation, None, rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SetInputSignal, None, rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetOutputSignal, None, rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_swigregister
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_swigregister(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)

def rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3___New_orig__() -> "rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_Pointer":
    """rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3___New_orig__() -> rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3___New_orig__()

def rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 *":
    """rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_cast(obj)

class rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    """Proxy of C++ rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_Pointer":
        """Clone(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 self) -> rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 self) -> rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 self, rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3

        Create a new object of the class rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_Clone, None, rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetOutputGeometry, None, rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SetInputGeometry, None, rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetPermutation, None, rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SetPermutation, None, rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SetInputSignal, None, rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetOutputSignal, None, rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_swigregister
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_swigregister(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)

def rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3___New_orig__() -> "rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_Pointer":
    """rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3___New_orig__() -> rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3___New_orig__()

def rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 *":
    """rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_cast(obj)

class rtkReorderProjectionsImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ rtkReorderProjectionsImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterISS3ISS3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterISS3ISS3_Pointer":
        """Clone(rtkReorderProjectionsImageFilterISS3ISS3 self) -> rtkReorderProjectionsImageFilterISS3ISS3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterISS3ISS3 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterISS3ISS3 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterISS3ISS3 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterISS3ISS3 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterISS3ISS3::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterISS3ISS3 self) -> rtkReorderProjectionsImageFilterISS3ISS3::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterISS3ISS3::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterISS3ISS3 self, rtkReorderProjectionsImageFilterISS3ISS3::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterISS3ISS3 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterISS3ISS3 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterISS3ISS3"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterISS3ISS3

        Create a new object of the class rtkReorderProjectionsImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterISS3ISS3.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_Clone, None, rtkReorderProjectionsImageFilterISS3ISS3)
rtkReorderProjectionsImageFilterISS3ISS3.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterISS3ISS3)
rtkReorderProjectionsImageFilterISS3ISS3.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetOutputGeometry, None, rtkReorderProjectionsImageFilterISS3ISS3)
rtkReorderProjectionsImageFilterISS3ISS3.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SetInputGeometry, None, rtkReorderProjectionsImageFilterISS3ISS3)
rtkReorderProjectionsImageFilterISS3ISS3.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetPermutation, None, rtkReorderProjectionsImageFilterISS3ISS3)
rtkReorderProjectionsImageFilterISS3ISS3.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SetPermutation, None, rtkReorderProjectionsImageFilterISS3ISS3)
rtkReorderProjectionsImageFilterISS3ISS3.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SetInputSignal, None, rtkReorderProjectionsImageFilterISS3ISS3)
rtkReorderProjectionsImageFilterISS3ISS3.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetOutputSignal, None, rtkReorderProjectionsImageFilterISS3ISS3)
rtkReorderProjectionsImageFilterISS3ISS3_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_swigregister
rtkReorderProjectionsImageFilterISS3ISS3_swigregister(rtkReorderProjectionsImageFilterISS3ISS3)

def rtkReorderProjectionsImageFilterISS3ISS3___New_orig__() -> "rtkReorderProjectionsImageFilterISS3ISS3_Pointer":
    """rtkReorderProjectionsImageFilterISS3ISS3___New_orig__() -> rtkReorderProjectionsImageFilterISS3ISS3_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3___New_orig__()

def rtkReorderProjectionsImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterISS3ISS3 *":
    """rtkReorderProjectionsImageFilterISS3ISS3_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterISS3ISS3"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_cast(obj)

class rtkReorderProjectionsImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ rtkReorderProjectionsImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterIUC3IUC3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterIUC3IUC3_Pointer":
        """Clone(rtkReorderProjectionsImageFilterIUC3IUC3 self) -> rtkReorderProjectionsImageFilterIUC3IUC3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterIUC3IUC3 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterIUC3IUC3 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterIUC3IUC3 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterIUC3IUC3 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterIUC3IUC3::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterIUC3IUC3 self) -> rtkReorderProjectionsImageFilterIUC3IUC3::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterIUC3IUC3::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterIUC3IUC3 self, rtkReorderProjectionsImageFilterIUC3IUC3::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterIUC3IUC3 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterIUC3IUC3 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIUC3IUC3"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIUC3IUC3

        Create a new object of the class rtkReorderProjectionsImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterIUC3IUC3.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_Clone, None, rtkReorderProjectionsImageFilterIUC3IUC3)
rtkReorderProjectionsImageFilterIUC3IUC3.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterIUC3IUC3)
rtkReorderProjectionsImageFilterIUC3IUC3.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetOutputGeometry, None, rtkReorderProjectionsImageFilterIUC3IUC3)
rtkReorderProjectionsImageFilterIUC3IUC3.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SetInputGeometry, None, rtkReorderProjectionsImageFilterIUC3IUC3)
rtkReorderProjectionsImageFilterIUC3IUC3.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetPermutation, None, rtkReorderProjectionsImageFilterIUC3IUC3)
rtkReorderProjectionsImageFilterIUC3IUC3.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SetPermutation, None, rtkReorderProjectionsImageFilterIUC3IUC3)
rtkReorderProjectionsImageFilterIUC3IUC3.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SetInputSignal, None, rtkReorderProjectionsImageFilterIUC3IUC3)
rtkReorderProjectionsImageFilterIUC3IUC3.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetOutputSignal, None, rtkReorderProjectionsImageFilterIUC3IUC3)
rtkReorderProjectionsImageFilterIUC3IUC3_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_swigregister
rtkReorderProjectionsImageFilterIUC3IUC3_swigregister(rtkReorderProjectionsImageFilterIUC3IUC3)

def rtkReorderProjectionsImageFilterIUC3IUC3___New_orig__() -> "rtkReorderProjectionsImageFilterIUC3IUC3_Pointer":
    """rtkReorderProjectionsImageFilterIUC3IUC3___New_orig__() -> rtkReorderProjectionsImageFilterIUC3IUC3_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3___New_orig__()

def rtkReorderProjectionsImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIUC3IUC3 *":
    """rtkReorderProjectionsImageFilterIUC3IUC3_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIUC3IUC3"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_cast(obj)

class rtkReorderProjectionsImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ rtkReorderProjectionsImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterIUS3IUS3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterIUS3IUS3_Pointer":
        """Clone(rtkReorderProjectionsImageFilterIUS3IUS3 self) -> rtkReorderProjectionsImageFilterIUS3IUS3_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterIUS3IUS3 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterIUS3IUS3 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterIUS3IUS3 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterIUS3IUS3 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterIUS3IUS3::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterIUS3IUS3 self) -> rtkReorderProjectionsImageFilterIUS3IUS3::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterIUS3IUS3::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterIUS3IUS3 self, rtkReorderProjectionsImageFilterIUS3IUS3::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterIUS3IUS3 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterIUS3IUS3 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIUS3IUS3"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIUS3IUS3

        Create a new object of the class rtkReorderProjectionsImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterIUS3IUS3.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_Clone, None, rtkReorderProjectionsImageFilterIUS3IUS3)
rtkReorderProjectionsImageFilterIUS3IUS3.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterIUS3IUS3)
rtkReorderProjectionsImageFilterIUS3IUS3.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetOutputGeometry, None, rtkReorderProjectionsImageFilterIUS3IUS3)
rtkReorderProjectionsImageFilterIUS3IUS3.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SetInputGeometry, None, rtkReorderProjectionsImageFilterIUS3IUS3)
rtkReorderProjectionsImageFilterIUS3IUS3.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetPermutation, None, rtkReorderProjectionsImageFilterIUS3IUS3)
rtkReorderProjectionsImageFilterIUS3IUS3.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SetPermutation, None, rtkReorderProjectionsImageFilterIUS3IUS3)
rtkReorderProjectionsImageFilterIUS3IUS3.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SetInputSignal, None, rtkReorderProjectionsImageFilterIUS3IUS3)
rtkReorderProjectionsImageFilterIUS3IUS3.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetOutputSignal, None, rtkReorderProjectionsImageFilterIUS3IUS3)
rtkReorderProjectionsImageFilterIUS3IUS3_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_swigregister
rtkReorderProjectionsImageFilterIUS3IUS3_swigregister(rtkReorderProjectionsImageFilterIUS3IUS3)

def rtkReorderProjectionsImageFilterIUS3IUS3___New_orig__() -> "rtkReorderProjectionsImageFilterIUS3IUS3_Pointer":
    """rtkReorderProjectionsImageFilterIUS3IUS3___New_orig__() -> rtkReorderProjectionsImageFilterIUS3IUS3_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3___New_orig__()

def rtkReorderProjectionsImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIUS3IUS3 *":
    """rtkReorderProjectionsImageFilterIUS3IUS3_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIUS3IUS3"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_cast(obj)

class rtkReorderProjectionsImageFilterIVF23IVF23(itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    """Proxy of C++ rtkReorderProjectionsImageFilterIVF23IVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterIVF23IVF23_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterIVF23IVF23_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterIVF23IVF23_Pointer":
        """Clone(rtkReorderProjectionsImageFilterIVF23IVF23 self) -> rtkReorderProjectionsImageFilterIVF23IVF23_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterIVF23IVF23 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterIVF23IVF23 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterIVF23IVF23 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterIVF23IVF23 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterIVF23IVF23::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterIVF23IVF23 self) -> rtkReorderProjectionsImageFilterIVF23IVF23::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterIVF23IVF23::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterIVF23IVF23 self, rtkReorderProjectionsImageFilterIVF23IVF23::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterIVF23IVF23 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterIVF23IVF23 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIVF23IVF23

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIVF23IVF23 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIVF23IVF23"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIVF23IVF23

        Create a new object of the class rtkReorderProjectionsImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIVF23IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIVF23IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterIVF23IVF23.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_Clone, None, rtkReorderProjectionsImageFilterIVF23IVF23)
rtkReorderProjectionsImageFilterIVF23IVF23.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterIVF23IVF23)
rtkReorderProjectionsImageFilterIVF23IVF23.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetOutputGeometry, None, rtkReorderProjectionsImageFilterIVF23IVF23)
rtkReorderProjectionsImageFilterIVF23IVF23.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SetInputGeometry, None, rtkReorderProjectionsImageFilterIVF23IVF23)
rtkReorderProjectionsImageFilterIVF23IVF23.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetPermutation, None, rtkReorderProjectionsImageFilterIVF23IVF23)
rtkReorderProjectionsImageFilterIVF23IVF23.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SetPermutation, None, rtkReorderProjectionsImageFilterIVF23IVF23)
rtkReorderProjectionsImageFilterIVF23IVF23.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SetInputSignal, None, rtkReorderProjectionsImageFilterIVF23IVF23)
rtkReorderProjectionsImageFilterIVF23IVF23.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetOutputSignal, None, rtkReorderProjectionsImageFilterIVF23IVF23)
rtkReorderProjectionsImageFilterIVF23IVF23_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_swigregister
rtkReorderProjectionsImageFilterIVF23IVF23_swigregister(rtkReorderProjectionsImageFilterIVF23IVF23)

def rtkReorderProjectionsImageFilterIVF23IVF23___New_orig__() -> "rtkReorderProjectionsImageFilterIVF23IVF23_Pointer":
    """rtkReorderProjectionsImageFilterIVF23IVF23___New_orig__() -> rtkReorderProjectionsImageFilterIVF23IVF23_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23___New_orig__()

def rtkReorderProjectionsImageFilterIVF23IVF23_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIVF23IVF23 *":
    """rtkReorderProjectionsImageFilterIVF23IVF23_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIVF23IVF23"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_cast(obj)

class rtkReorderProjectionsImageFilterIVF33IVF33(itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    """Proxy of C++ rtkReorderProjectionsImageFilterIVF33IVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterIVF33IVF33_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterIVF33IVF33_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterIVF33IVF33_Pointer":
        """Clone(rtkReorderProjectionsImageFilterIVF33IVF33 self) -> rtkReorderProjectionsImageFilterIVF33IVF33_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterIVF33IVF33 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterIVF33IVF33 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterIVF33IVF33 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterIVF33IVF33 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterIVF33IVF33::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterIVF33IVF33 self) -> rtkReorderProjectionsImageFilterIVF33IVF33::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterIVF33IVF33::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterIVF33IVF33 self, rtkReorderProjectionsImageFilterIVF33IVF33::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterIVF33IVF33 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterIVF33IVF33 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIVF33IVF33

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIVF33IVF33 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIVF33IVF33"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIVF33IVF33

        Create a new object of the class rtkReorderProjectionsImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIVF33IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterIVF33IVF33.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_Clone, None, rtkReorderProjectionsImageFilterIVF33IVF33)
rtkReorderProjectionsImageFilterIVF33IVF33.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterIVF33IVF33)
rtkReorderProjectionsImageFilterIVF33IVF33.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetOutputGeometry, None, rtkReorderProjectionsImageFilterIVF33IVF33)
rtkReorderProjectionsImageFilterIVF33IVF33.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SetInputGeometry, None, rtkReorderProjectionsImageFilterIVF33IVF33)
rtkReorderProjectionsImageFilterIVF33IVF33.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetPermutation, None, rtkReorderProjectionsImageFilterIVF33IVF33)
rtkReorderProjectionsImageFilterIVF33IVF33.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SetPermutation, None, rtkReorderProjectionsImageFilterIVF33IVF33)
rtkReorderProjectionsImageFilterIVF33IVF33.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SetInputSignal, None, rtkReorderProjectionsImageFilterIVF33IVF33)
rtkReorderProjectionsImageFilterIVF33IVF33.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetOutputSignal, None, rtkReorderProjectionsImageFilterIVF33IVF33)
rtkReorderProjectionsImageFilterIVF33IVF33_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_swigregister
rtkReorderProjectionsImageFilterIVF33IVF33_swigregister(rtkReorderProjectionsImageFilterIVF33IVF33)

def rtkReorderProjectionsImageFilterIVF33IVF33___New_orig__() -> "rtkReorderProjectionsImageFilterIVF33IVF33_Pointer":
    """rtkReorderProjectionsImageFilterIVF33IVF33___New_orig__() -> rtkReorderProjectionsImageFilterIVF33IVF33_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33___New_orig__()

def rtkReorderProjectionsImageFilterIVF33IVF33_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIVF33IVF33 *":
    """rtkReorderProjectionsImageFilterIVF33IVF33_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIVF33IVF33"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_cast(obj)

class rtkReorderProjectionsImageFilterIVF43IVF43(itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    """Proxy of C++ rtkReorderProjectionsImageFilterIVF43IVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_NONE
    SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SORT
    SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SHUFFLE

    def __New_orig__() -> "rtkReorderProjectionsImageFilterIVF43IVF43_Pointer":
        """__New_orig__() -> rtkReorderProjectionsImageFilterIVF43IVF43_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkReorderProjectionsImageFilterIVF43IVF43_Pointer":
        """Clone(rtkReorderProjectionsImageFilterIVF43IVF43 self) -> rtkReorderProjectionsImageFilterIVF43IVF43_Pointer"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_Clone(self)


    def GetModifiableOutputGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableOutputGeometry(rtkReorderProjectionsImageFilterIVF43IVF43 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetModifiableOutputGeometry(self)


    def GetOutputGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetOutputGeometry(rtkReorderProjectionsImageFilterIVF43IVF43 self) -> rtkThreeDCircularProjectionGeometry
        GetOutputGeometry(rtkReorderProjectionsImageFilterIVF43IVF43 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetOutputGeometry(self, *args)


    def SetInputGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetInputGeometry(rtkReorderProjectionsImageFilterIVF43IVF43 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SetInputGeometry(self, _arg)


    def GetPermutation(self) -> "rtkReorderProjectionsImageFilterIVF43IVF43::PermutationType":
        """GetPermutation(rtkReorderProjectionsImageFilterIVF43IVF43 self) -> rtkReorderProjectionsImageFilterIVF43IVF43::PermutationType"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetPermutation(self)


    def SetPermutation(self, _arg: 'rtkReorderProjectionsImageFilterIVF43IVF43::PermutationType const') -> "void":
        """SetPermutation(rtkReorderProjectionsImageFilterIVF43IVF43 self, rtkReorderProjectionsImageFilterIVF43IVF43::PermutationType const _arg)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SetPermutation(self, _arg)


    def SetInputSignal(self, signal: 'vectorD') -> "void":
        """SetInputSignal(rtkReorderProjectionsImageFilterIVF43IVF43 self, vectorD signal)"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SetInputSignal(self, signal)


    def GetOutputSignal(self) -> "std::vector< double,std::allocator< double > >":
        """GetOutputSignal(rtkReorderProjectionsImageFilterIVF43IVF43 self) -> vectorD"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetOutputSignal(self)

    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIVF43IVF43

    def cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIVF43IVF43 *":
        """cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIVF43IVF43"""
        return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIVF43IVF43

        Create a new object of the class rtkReorderProjectionsImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIVF43IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIVF43IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkReorderProjectionsImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkReorderProjectionsImageFilterIVF43IVF43.Clone = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_Clone, None, rtkReorderProjectionsImageFilterIVF43IVF43)
rtkReorderProjectionsImageFilterIVF43IVF43.GetModifiableOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetModifiableOutputGeometry, None, rtkReorderProjectionsImageFilterIVF43IVF43)
rtkReorderProjectionsImageFilterIVF43IVF43.GetOutputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetOutputGeometry, None, rtkReorderProjectionsImageFilterIVF43IVF43)
rtkReorderProjectionsImageFilterIVF43IVF43.SetInputGeometry = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SetInputGeometry, None, rtkReorderProjectionsImageFilterIVF43IVF43)
rtkReorderProjectionsImageFilterIVF43IVF43.GetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetPermutation, None, rtkReorderProjectionsImageFilterIVF43IVF43)
rtkReorderProjectionsImageFilterIVF43IVF43.SetPermutation = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SetPermutation, None, rtkReorderProjectionsImageFilterIVF43IVF43)
rtkReorderProjectionsImageFilterIVF43IVF43.SetInputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SetInputSignal, None, rtkReorderProjectionsImageFilterIVF43IVF43)
rtkReorderProjectionsImageFilterIVF43IVF43.GetOutputSignal = new_instancemethod(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetOutputSignal, None, rtkReorderProjectionsImageFilterIVF43IVF43)
rtkReorderProjectionsImageFilterIVF43IVF43_swigregister = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_swigregister
rtkReorderProjectionsImageFilterIVF43IVF43_swigregister(rtkReorderProjectionsImageFilterIVF43IVF43)

def rtkReorderProjectionsImageFilterIVF43IVF43___New_orig__() -> "rtkReorderProjectionsImageFilterIVF43IVF43_Pointer":
    """rtkReorderProjectionsImageFilterIVF43IVF43___New_orig__() -> rtkReorderProjectionsImageFilterIVF43IVF43_Pointer"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43___New_orig__()

def rtkReorderProjectionsImageFilterIVF43IVF43_cast(obj: 'itkLightObject') -> "rtkReorderProjectionsImageFilterIVF43IVF43 *":
    """rtkReorderProjectionsImageFilterIVF43IVF43_cast(itkLightObject obj) -> rtkReorderProjectionsImageFilterIVF43IVF43"""
    return _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_cast(obj)


def reorder_projections_image_filter(*args, **kwargs):
    """Procedural interface for ReorderProjectionsImageFilter"""
    import itk
    instance = itk.ReorderProjectionsImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def reorder_projections_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ReorderProjectionsImageFilter, itkTemplate.itkTemplate):
        reorder_projections_image_filter.__doc__ = itk.ReorderProjectionsImageFilter.values()[0].__doc__
    else:
        reorder_projections_image_filter.__doc__ = itk.ReorderProjectionsImageFilter.__doc__




