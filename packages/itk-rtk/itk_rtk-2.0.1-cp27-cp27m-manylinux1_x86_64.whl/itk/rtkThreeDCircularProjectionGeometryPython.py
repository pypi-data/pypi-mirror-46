# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkThreeDCircularProjectionGeometryPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkThreeDCircularProjectionGeometryPython', [dirname(__file__)])
        except ImportError:
            import _rtkThreeDCircularProjectionGeometryPython
            return _rtkThreeDCircularProjectionGeometryPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkThreeDCircularProjectionGeometryPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkThreeDCircularProjectionGeometryPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkThreeDCircularProjectionGeometryPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkPointPython
import rtkProjectionGeometryPython
import ITKCommonBasePython

def rtkThreeDCircularProjectionGeometry_New():
  return rtkThreeDCircularProjectionGeometry.New()

class rtkThreeDCircularProjectionGeometry(rtkProjectionGeometryPython.rtkProjectionGeometry3):
    """Proxy of C++ rtkThreeDCircularProjectionGeometry class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> rtkThreeDCircularProjectionGeometry_Pointer"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(rtkThreeDCircularProjectionGeometry self) -> rtkThreeDCircularProjectionGeometry_Pointer"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_Clone(self)


    def AddProjectionInRadians(self, sid, sdd, gantryAngle, projOffsetX=0., projOffsetY=0., outOfPlaneAngle=0., inPlaneAngle=0., sourceOffsetX=0., sourceOffsetY=0.):
        """
        AddProjectionInRadians(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0., double const outOfPlaneAngle=0., double const inPlaneAngle=0., double const sourceOffsetX=0., double const sourceOffsetY=0.)
        AddProjectionInRadians(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0., double const outOfPlaneAngle=0., double const inPlaneAngle=0., double const sourceOffsetX=0.)
        AddProjectionInRadians(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0., double const outOfPlaneAngle=0., double const inPlaneAngle=0.)
        AddProjectionInRadians(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0., double const outOfPlaneAngle=0.)
        AddProjectionInRadians(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0.)
        AddProjectionInRadians(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0.)
        AddProjectionInRadians(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle)
        """
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_AddProjectionInRadians(self, sid, sdd, gantryAngle, projOffsetX, projOffsetY, outOfPlaneAngle, inPlaneAngle, sourceOffsetX, sourceOffsetY)


    def AddProjection(self, *args):
        """
        AddProjection(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0., double const outOfPlaneAngle=0., double const inPlaneAngle=0., double const sourceOffsetX=0., double const sourceOffsetY=0.)
        AddProjection(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0., double const outOfPlaneAngle=0., double const inPlaneAngle=0., double const sourceOffsetX=0.)
        AddProjection(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0., double const outOfPlaneAngle=0., double const inPlaneAngle=0.)
        AddProjection(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0., double const outOfPlaneAngle=0.)
        AddProjection(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0., double const projOffsetY=0.)
        AddProjection(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle, double const projOffsetX=0.)
        AddProjection(rtkThreeDCircularProjectionGeometry self, double const sid, double const sdd, double const gantryAngle)
        AddProjection(rtkThreeDCircularProjectionGeometry self, itkPointD3 sourcePosition, itkPointD3 detectorPosition, itkVectorD3 detectorRowVector, itkVectorD3 detectorColumnVector) -> bool
        AddProjection(rtkThreeDCircularProjectionGeometry self, itkMatrixD34 pMat) -> bool
        """
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_AddProjection(self, *args)


    def GetGantryAngles(self):
        """GetGantryAngles(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetGantryAngles(self)


    def GetOutOfPlaneAngles(self):
        """GetOutOfPlaneAngles(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetOutOfPlaneAngles(self)


    def GetInPlaneAngles(self):
        """GetInPlaneAngles(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetInPlaneAngles(self)


    def GetSourceToIsocenterDistances(self):
        """GetSourceToIsocenterDistances(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceToIsocenterDistances(self)


    def GetSourceOffsetsX(self):
        """GetSourceOffsetsX(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceOffsetsX(self)


    def GetSourceOffsetsY(self):
        """GetSourceOffsetsY(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceOffsetsY(self)


    def GetSourceToDetectorDistances(self):
        """GetSourceToDetectorDistances(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceToDetectorDistances(self)


    def GetProjectionOffsetsX(self):
        """GetProjectionOffsetsX(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionOffsetsX(self)


    def GetProjectionOffsetsY(self):
        """GetProjectionOffsetsY(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionOffsetsY(self)


    def GetSourceAngles(self):
        """GetSourceAngles(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceAngles(self)


    def GetTiltAngles(self):
        """GetTiltAngles(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetTiltAngles(self)


    def GetSortedAngles(self, angles):
        """GetSortedAngles(rtkThreeDCircularProjectionGeometry self, vectorD angles) -> std::multimap< double,unsigned int,std::less< double > > const"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSortedAngles(self, angles)


    def GetUniqueSortedAngles(self, angles):
        """GetUniqueSortedAngles(rtkThreeDCircularProjectionGeometry self, vectorD angles) -> std::map< double,unsigned int,std::less< double >,std::allocator< std::pair< double const,unsigned int > > > const"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetUniqueSortedAngles(self, angles)


    def GetAngularGapsWithNext(self, angles):
        """GetAngularGapsWithNext(rtkThreeDCircularProjectionGeometry self, vectorD angles) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetAngularGapsWithNext(self, angles)


    def GetAngularGaps(self, angles):
        """GetAngularGaps(rtkThreeDCircularProjectionGeometry self, vectorD angles) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetAngularGaps(self, angles)


    def ComputeRotationHomogeneousMatrix(angleX, angleY, angleZ):
        """ComputeRotationHomogeneousMatrix(double angleX, double angleY, double angleZ) -> itkMatrixD44"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ComputeRotationHomogeneousMatrix(angleX, angleY, angleZ)

    ComputeRotationHomogeneousMatrix = staticmethod(ComputeRotationHomogeneousMatrix)

    def ComputeTranslationHomogeneousMatrix(*args):
        """
        ComputeTranslationHomogeneousMatrix(double transX, double transY) -> itkMatrixD33
        ComputeTranslationHomogeneousMatrix(double transX, double transY, double transZ) -> itkMatrixD44
        """
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ComputeTranslationHomogeneousMatrix(*args)

    ComputeTranslationHomogeneousMatrix = staticmethod(ComputeTranslationHomogeneousMatrix)

    def ComputeProjectionMagnificationMatrix(sdd, sid):
        """ComputeProjectionMagnificationMatrix(double sdd, double sid) -> itkMatrixD34"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ComputeProjectionMagnificationMatrix(sdd, sid)

    ComputeProjectionMagnificationMatrix = staticmethod(ComputeProjectionMagnificationMatrix)

    def GetProjectionTranslationMatrices(self):
        """GetProjectionTranslationMatrices(rtkThreeDCircularProjectionGeometry self) -> std::vector< itkMatrixD33,std::allocator< itkMatrixD33 > > const &"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionTranslationMatrices(self)


    def GetProjectionTranslationMatrix(self, i):
        """GetProjectionTranslationMatrix(rtkThreeDCircularProjectionGeometry self, unsigned int const i) -> itkMatrixD33"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionTranslationMatrix(self, i)


    def GetRotationMatrices(self):
        """GetRotationMatrices(rtkThreeDCircularProjectionGeometry self) -> std::vector< itkMatrixD44,std::allocator< itkMatrixD44 > > const &"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetRotationMatrices(self)


    def GetRotationMatrix(self, i):
        """GetRotationMatrix(rtkThreeDCircularProjectionGeometry self, unsigned int const i) -> itkMatrixD44"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetRotationMatrix(self, i)


    def GetSourceTranslationMatrices(self, *args):
        """
        GetSourceTranslationMatrices(rtkThreeDCircularProjectionGeometry self) -> std::vector< itkMatrixD44,std::allocator< itkMatrixD44 > > const
        GetSourceTranslationMatrices(rtkThreeDCircularProjectionGeometry self, unsigned int const i) -> itkMatrixD44
        """
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceTranslationMatrices(self, *args)


    def GetMagnificationMatrices(self, *args):
        """
        GetMagnificationMatrices(rtkThreeDCircularProjectionGeometry self) -> std::vector< itkMatrixD34,std::allocator< itkMatrixD34 > > const
        GetMagnificationMatrices(rtkThreeDCircularProjectionGeometry self, unsigned int const i) -> itkMatrixD34
        """
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetMagnificationMatrices(self, *args)


    def GetCollimationUInf(self):
        """GetCollimationUInf(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetCollimationUInf(self)


    def GetCollimationUSup(self):
        """GetCollimationUSup(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetCollimationUSup(self)


    def GetCollimationVInf(self):
        """GetCollimationVInf(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetCollimationVInf(self)


    def GetCollimationVSup(self):
        """GetCollimationVSup(rtkThreeDCircularProjectionGeometry self) -> vectorD"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetCollimationVSup(self)


    def SetCollimationOfLastProjection(self, uinf, usup, vinf, vsup):
        """SetCollimationOfLastProjection(rtkThreeDCircularProjectionGeometry self, double const uinf, double const usup, double const vinf, double const vsup)"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_SetCollimationOfLastProjection(self, uinf, usup, vinf, vsup)


    def GetSourcePosition(self, i):
        """GetSourcePosition(rtkThreeDCircularProjectionGeometry self, unsigned int const i) -> itkVectorD4"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourcePosition(self, i)


    def GetProjectionCoordinatesToDetectorSystemMatrix(self, i):
        """GetProjectionCoordinatesToDetectorSystemMatrix(rtkThreeDCircularProjectionGeometry self, unsigned int const i) -> itkMatrixD44"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionCoordinatesToDetectorSystemMatrix(self, i)


    def GetProjectionCoordinatesToFixedSystemMatrix(self, i):
        """GetProjectionCoordinatesToFixedSystemMatrix(rtkThreeDCircularProjectionGeometry self, unsigned int const i) -> itkMatrixD44"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionCoordinatesToFixedSystemMatrix(self, i)


    def ConvertAngleBetween0And360Degrees(a):
        """ConvertAngleBetween0And360Degrees(double const a) -> double"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ConvertAngleBetween0And360Degrees(a)

    ConvertAngleBetween0And360Degrees = staticmethod(ConvertAngleBetween0And360Degrees)

    def ConvertAngleBetween0And2PIRadians(a):
        """ConvertAngleBetween0And2PIRadians(double const a) -> double"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ConvertAngleBetween0And2PIRadians(a)

    ConvertAngleBetween0And2PIRadians = staticmethod(ConvertAngleBetween0And2PIRadians)

    def ConvertAngleBetweenMinusAndPlusPIRadians(a):
        """ConvertAngleBetweenMinusAndPlusPIRadians(double const a) -> double"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ConvertAngleBetweenMinusAndPlusPIRadians(a)

    ConvertAngleBetweenMinusAndPlusPIRadians = staticmethod(ConvertAngleBetweenMinusAndPlusPIRadians)

    def ToUntiltedCoordinateAtIsocenter(self, noProj, tiltedCoord):
        """ToUntiltedCoordinateAtIsocenter(rtkThreeDCircularProjectionGeometry self, unsigned int const noProj, double const tiltedCoord) -> double"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ToUntiltedCoordinateAtIsocenter(self, noProj, tiltedCoord)


    def GetRadiusCylindricalDetector(self):
        """GetRadiusCylindricalDetector(rtkThreeDCircularProjectionGeometry self) -> double"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetRadiusCylindricalDetector(self)


    def SetRadiusCylindricalDetector(self, _arg):
        """SetRadiusCylindricalDetector(rtkThreeDCircularProjectionGeometry self, double const _arg)"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_SetRadiusCylindricalDetector(self, _arg)

    __swig_destroy__ = _rtkThreeDCircularProjectionGeometryPython.delete_rtkThreeDCircularProjectionGeometry

    def cast(obj):
        """cast(itkLightObject obj) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkThreeDCircularProjectionGeometry

        Create a new object of the class rtkThreeDCircularProjectionGeometry and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkThreeDCircularProjectionGeometry.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkThreeDCircularProjectionGeometry.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkThreeDCircularProjectionGeometry.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkThreeDCircularProjectionGeometry.Clone = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_Clone, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.AddProjectionInRadians = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_AddProjectionInRadians, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.AddProjection = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_AddProjection, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetGantryAngles = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetGantryAngles, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetOutOfPlaneAngles = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetOutOfPlaneAngles, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetInPlaneAngles = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetInPlaneAngles, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetSourceToIsocenterDistances = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceToIsocenterDistances, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetSourceOffsetsX = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceOffsetsX, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetSourceOffsetsY = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceOffsetsY, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetSourceToDetectorDistances = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceToDetectorDistances, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetProjectionOffsetsX = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionOffsetsX, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetProjectionOffsetsY = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionOffsetsY, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetSourceAngles = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceAngles, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetTiltAngles = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetTiltAngles, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetSortedAngles = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSortedAngles, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetUniqueSortedAngles = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetUniqueSortedAngles, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetAngularGapsWithNext = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetAngularGapsWithNext, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetAngularGaps = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetAngularGaps, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetProjectionTranslationMatrices = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionTranslationMatrices, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetProjectionTranslationMatrix = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionTranslationMatrix, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetRotationMatrices = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetRotationMatrices, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetRotationMatrix = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetRotationMatrix, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetSourceTranslationMatrices = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourceTranslationMatrices, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetMagnificationMatrices = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetMagnificationMatrices, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetCollimationUInf = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetCollimationUInf, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetCollimationUSup = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetCollimationUSup, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetCollimationVInf = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetCollimationVInf, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetCollimationVSup = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetCollimationVSup, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.SetCollimationOfLastProjection = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_SetCollimationOfLastProjection, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetSourcePosition = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetSourcePosition, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetProjectionCoordinatesToDetectorSystemMatrix = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionCoordinatesToDetectorSystemMatrix, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetProjectionCoordinatesToFixedSystemMatrix = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetProjectionCoordinatesToFixedSystemMatrix, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.ToUntiltedCoordinateAtIsocenter = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ToUntiltedCoordinateAtIsocenter, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.GetRadiusCylindricalDetector = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_GetRadiusCylindricalDetector, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry.SetRadiusCylindricalDetector = new_instancemethod(_rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_SetRadiusCylindricalDetector, None, rtkThreeDCircularProjectionGeometry)
rtkThreeDCircularProjectionGeometry_swigregister = _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_swigregister
rtkThreeDCircularProjectionGeometry_swigregister(rtkThreeDCircularProjectionGeometry)

def rtkThreeDCircularProjectionGeometry___New_orig__():
    """rtkThreeDCircularProjectionGeometry___New_orig__() -> rtkThreeDCircularProjectionGeometry_Pointer"""
    return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry___New_orig__()

def rtkThreeDCircularProjectionGeometry_ComputeRotationHomogeneousMatrix(angleX, angleY, angleZ):
    """rtkThreeDCircularProjectionGeometry_ComputeRotationHomogeneousMatrix(double angleX, double angleY, double angleZ) -> itkMatrixD44"""
    return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ComputeRotationHomogeneousMatrix(angleX, angleY, angleZ)

def rtkThreeDCircularProjectionGeometry_ComputeTranslationHomogeneousMatrix(*args):
    """
    ComputeTranslationHomogeneousMatrix(double transX, double transY) -> itkMatrixD33
    rtkThreeDCircularProjectionGeometry_ComputeTranslationHomogeneousMatrix(double transX, double transY, double transZ) -> itkMatrixD44
    """
    return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ComputeTranslationHomogeneousMatrix(*args)

def rtkThreeDCircularProjectionGeometry_ComputeProjectionMagnificationMatrix(sdd, sid):
    """rtkThreeDCircularProjectionGeometry_ComputeProjectionMagnificationMatrix(double sdd, double sid) -> itkMatrixD34"""
    return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ComputeProjectionMagnificationMatrix(sdd, sid)

def rtkThreeDCircularProjectionGeometry_ConvertAngleBetween0And360Degrees(a):
    """rtkThreeDCircularProjectionGeometry_ConvertAngleBetween0And360Degrees(double const a) -> double"""
    return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ConvertAngleBetween0And360Degrees(a)

def rtkThreeDCircularProjectionGeometry_ConvertAngleBetween0And2PIRadians(a):
    """rtkThreeDCircularProjectionGeometry_ConvertAngleBetween0And2PIRadians(double const a) -> double"""
    return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ConvertAngleBetween0And2PIRadians(a)

def rtkThreeDCircularProjectionGeometry_ConvertAngleBetweenMinusAndPlusPIRadians(a):
    """rtkThreeDCircularProjectionGeometry_ConvertAngleBetweenMinusAndPlusPIRadians(double const a) -> double"""
    return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_ConvertAngleBetweenMinusAndPlusPIRadians(a)

def rtkThreeDCircularProjectionGeometry_cast(obj):
    """rtkThreeDCircularProjectionGeometry_cast(itkLightObject obj) -> rtkThreeDCircularProjectionGeometry"""
    return _rtkThreeDCircularProjectionGeometryPython.rtkThreeDCircularProjectionGeometry_cast(obj)



