# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _RTKPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RTKPython', [dirname(__file__)])
        except ImportError:
            import _RTKPython
            return _RTKPython
        if fp is not None:
            try:
                _mod = imp.load_module('_RTKPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _RTKPython = swig_import_helper()
    del swig_import_helper
else:
    import _RTKPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



import ITKPyBasePython
import ITKSmoothingPython
import ITKRegistrationCommonPython
import ITKOptimizersPython
import ITKImageNoisePython
import ITKIOTIFFPython
import ITKIORAWPython
import ITKIOMetaPython
import ITKIOGDCMPython
import ITKFFTPython
import ITKConvolutionPython
import ITKCommonPython
from itkFixedArrayRTKPython import *
from itkVectorRTKPython import *
from itkCovariantVectorRTKPython import *
from itkPointRTKPython import *
from itkMatrixRTKPython import *
from itkVariableLengthVectorRTKPython import *
from itkImageBaseRTKPython import *
from itkImageRTKPython import *
from itkCudaImagePython import *
from itkVectorImageRTKPython import *
from itkImageSourceRTKPython import *
from itkImageToImageFilterRTKPython import *
from itkCudaImageToImageFilterPython import *
from itkInPlaceImageFilterRTKPython import *
from itkCudaInPlaceImageFilterPython import *
from itkCudaDataManagerPython import *
from itkCudaImageDataManagerPython import *
from itkImageRegionRTKPython import *
from itkWarpImageFilterRTKPython import *
from rtkADMMWaveletsConeBeamReconstructionFilterPython import *
from rtkAmsterdamShroudImageFilterPython import *
from rtkBackProjectionImageFilterPython import *
from rtkBoellaardScatterCorrectionImageFilterPython import *
from rtkConditionalMedianImageFilterPython import *
from rtkConjugateGradientConeBeamReconstructionFilterPython import *
from rtkConstantImageSourcePython import *
from rtkConvexShapePython import *
from rtkCudaBackProjectionImageFilterPython import *
from rtkCudaConstantVolumeSourcePython import *
from rtkCudaDisplacedDetectorImageFilterPython import *
from rtkCudaFDKConeBeamReconstructionFilterPython import *
from rtkCudaForwardProjectionImageFilterPython import *
from rtkCudaSplatImageFilterPython import *
from rtkCyclicDeformationImageFilterPython import *
from rtkDaubechiesWaveletsDenoiseSequenceImageFilterPython import *
from rtkDeconstructSoftThresholdReconstructImageFilterPython import *
from rtkDenoisingBPDQImageFilterPython import *
from rtkDisplacedDetectorForOffsetFieldOfViewImageFilterPython import *
from rtkDisplacedDetectorImageFilterPython import *
from rtkDrawConvexImageFilterPython import *
from rtkDrawEllipsoidImageFilterPython import *
from rtkDrawGeometricPhantomImageFilterPython import *
from rtkDrawSheppLoganFilterPython import *
from rtkEdfRawToAttenuationImageFilterPython import *
from rtkElektaSynergyRawLookupTableImageFilterPython import *
from rtkExtractPhaseImageFilterPython import *
from rtkFDKBackProjectionImageFilterPython import *
from rtkFDKConeBeamReconstructionFilterPython import *
from rtkFDKWarpBackProjectionImageFilterPython import *
from rtkFDKWeightProjectionFilterPython import *
from rtkFFTProjectionsConvolutionImageFilterPython import *
from rtkFFTRampImageFilterPython import *
from rtkFieldOfViewImageFilterPython import *
from rtkForwardProjectionImageFilterPython import *
from rtkForwardWarpImageFilterPython import *
from rtkFourDConjugateGradientConeBeamReconstructionFilterPython import *
from rtkFourDSARTConeBeamReconstructionFilterPython import *
from rtkFourDToProjectionStackImageFilterPython import *
from rtkGeometricPhantomPython import *
from rtkGeometricPhantomFileReaderPython import *
from rtkI0EstimationProjectionFilterPython import *
from rtkImageToVectorImageFilterPython import *
from rtkIterativeConeBeamReconstructionFilterPython import *
from rtkIterativeFDKConeBeamReconstructionFilterPython import *
from rtkJosephBackProjectionImageFilterPython import *
from rtkJosephForwardProjectionImageFilterPython import *
from rtkLUTbasedVariableI0RawToAttenuationImageFilterPython import *
from rtkLagCorrectionImageFilterPython import *
from rtkLastDimensionL0GradientDenoisingImageFilterPython import *
from rtkLookupTableImageFilterPython import *
from rtkMechlemOneStepSpectralReconstructionFilterPython import *
from rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilterPython import *
from rtkOSEMConeBeamReconstructionFilterPython import *
from rtkParkerShortScanImageFilterPython import *
from rtkPhaseGatingImageFilterPython import *
from rtkPolynomialGainCorrectionImageFilterPython import *
from rtkProjectGeometricPhantomImageFilterPython import *
from rtkProjectionGeometryPython import *
from rtkProjectionStackToFourDImageFilterPython import *
from rtkProjectionsReaderPython import *
from rtkRayBoxIntersectionImageFilterPython import *
from rtkRayConvexIntersectionImageFilterPython import *
from rtkRayEllipsoidIntersectionImageFilterPython import *
from rtkRayQuadricIntersectionImageFilterPython import *
from rtkReorderProjectionsImageFilterPython import *
from rtkSARTConeBeamReconstructionFilterPython import *
from rtkScatterGlareCorrectionImageFilterPython import *
from rtkSelectOneProjectionPerCycleImageFilterPython import *
from rtkSheppLoganPhantomFilterPython import *
from rtkSimplexSpectralProjectionsDecompositionImageFilterPython import *
from rtkSoftThresholdImageFilterPython import *
from rtkSpectralForwardModelImageFilterPython import *
from rtkSplatWithKnownWeightsImageFilterPython import *
from rtkSubSelectFromListImageFilterPython import *
from rtkSubSelectImageFilterPython import *
from rtkThreeDCircularProjectionGeometryPython import *
from rtkThreeDCircularProjectionGeometryXMLFileReaderPython import *
from rtkThreeDCircularProjectionGeometryXMLFileWriterPython import *
from rtkTotalVariationImageFilterPython import *
from rtkVarianObiRawImageFilterPython import *
from rtkVectorImageToImageFilterPython import *
from rtkWaterPrecorrectionImageFilterPython import *
from rtkXRadRawToAttenuationImageFilterPython import *




