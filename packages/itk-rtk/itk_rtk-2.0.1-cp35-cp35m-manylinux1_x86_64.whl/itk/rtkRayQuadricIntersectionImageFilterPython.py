# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkRayQuadricIntersectionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkRayQuadricIntersectionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkRayQuadricIntersectionImageFilterPython
            return _rtkRayQuadricIntersectionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkRayQuadricIntersectionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkRayQuadricIntersectionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkRayQuadricIntersectionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import rtkRayConvexIntersectionImageFilterPython
import rtkConvexShapePython
import itkMatrixPython
import itkPointPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import rtkThreeDCircularProjectionGeometryPython
import rtkProjectionGeometryPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def rtkRayQuadricIntersectionImageFilterIF3IF3_New():
  return rtkRayQuadricIntersectionImageFilterIF3IF3.New()

class rtkRayQuadricIntersectionImageFilterIF3IF3(rtkRayConvexIntersectionImageFilterPython.rtkRayConvexIntersectionImageFilterIF3IF3):
    """Proxy of C++ rtkRayQuadricIntersectionImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkRayQuadricIntersectionImageFilterIF3IF3_Pointer":
        """__New_orig__() -> rtkRayQuadricIntersectionImageFilterIF3IF3_Pointer"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkRayQuadricIntersectionImageFilterIF3IF3_Pointer":
        """Clone(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> rtkRayQuadricIntersectionImageFilterIF3IF3_Pointer"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_Clone(self)


    def GetDensity(self) -> "double":
        """GetDensity(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetDensity(self)


    def SetDensity(self, _arg: 'double const') -> "void":
        """SetDensity(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetDensity(self, _arg)


    def GetPlaneDirections(self) -> "std::vector< itkVectorD3,std::allocator< itkVectorD3 > > const &":
        """GetPlaneDirections(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> std::vector< itkVectorD3,std::allocator< itkVectorD3 > > const &"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetPlaneDirections(self)


    def GetPlanePositions(self) -> "std::vector< double,std::allocator< double > > const &":
        """GetPlanePositions(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> vectorD"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetPlanePositions(self)


    def AddClipPlane(self, dir: 'itkVectorD3', pos: 'double const &') -> "void":
        """AddClipPlane(rtkRayQuadricIntersectionImageFilterIF3IF3 self, itkVectorD3 dir, double const & pos)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_AddClipPlane(self, dir, pos)


    def GetA(self) -> "double":
        """GetA(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetA(self)


    def SetA(self, _arg: 'double const') -> "void":
        """SetA(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetA(self, _arg)


    def GetB(self) -> "double":
        """GetB(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetB(self)


    def SetB(self, _arg: 'double const') -> "void":
        """SetB(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetB(self, _arg)


    def GetC(self) -> "double":
        """GetC(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetC(self)


    def SetC(self, _arg: 'double const') -> "void":
        """SetC(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetC(self, _arg)


    def GetD(self) -> "double":
        """GetD(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetD(self)


    def SetD(self, _arg: 'double const') -> "void":
        """SetD(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetD(self, _arg)


    def GetE(self) -> "double":
        """GetE(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetE(self)


    def SetE(self, _arg: 'double const') -> "void":
        """SetE(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetE(self, _arg)


    def GetF(self) -> "double":
        """GetF(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetF(self)


    def SetF(self, _arg: 'double const') -> "void":
        """SetF(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetF(self, _arg)


    def GetG(self) -> "double":
        """GetG(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetG(self)


    def SetG(self, _arg: 'double const') -> "void":
        """SetG(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetG(self, _arg)


    def GetH(self) -> "double":
        """GetH(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetH(self)


    def SetH(self, _arg: 'double const') -> "void":
        """SetH(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetH(self, _arg)


    def GetI(self) -> "double":
        """GetI(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetI(self)


    def SetI(self, _arg: 'double const') -> "void":
        """SetI(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetI(self, _arg)


    def GetJ(self) -> "double":
        """GetJ(rtkRayQuadricIntersectionImageFilterIF3IF3 self) -> double"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetJ(self)


    def SetJ(self, _arg: 'double const') -> "void":
        """SetJ(rtkRayQuadricIntersectionImageFilterIF3IF3 self, double const _arg)"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetJ(self, _arg)

    __swig_destroy__ = _rtkRayQuadricIntersectionImageFilterPython.delete_rtkRayQuadricIntersectionImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "rtkRayQuadricIntersectionImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> rtkRayQuadricIntersectionImageFilterIF3IF3"""
        return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkRayQuadricIntersectionImageFilterIF3IF3

        Create a new object of the class rtkRayQuadricIntersectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkRayQuadricIntersectionImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkRayQuadricIntersectionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkRayQuadricIntersectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkRayQuadricIntersectionImageFilterIF3IF3.Clone = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_Clone, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetDensity = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetDensity, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetDensity = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetDensity, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetPlaneDirections = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetPlaneDirections, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetPlanePositions = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetPlanePositions, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.AddClipPlane = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_AddClipPlane, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetA = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetA, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetA = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetA, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetB = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetB, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetB = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetB, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetC = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetC, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetC = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetC, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetD = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetD, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetD = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetD, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetE = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetE, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetE = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetE, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetF = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetF, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetF = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetF, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetG = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetG, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetG = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetG, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetH = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetH, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetH = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetH, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetI = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetI, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetI = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetI, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.GetJ = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_GetJ, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3.SetJ = new_instancemethod(_rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_SetJ, None, rtkRayQuadricIntersectionImageFilterIF3IF3)
rtkRayQuadricIntersectionImageFilterIF3IF3_swigregister = _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_swigregister
rtkRayQuadricIntersectionImageFilterIF3IF3_swigregister(rtkRayQuadricIntersectionImageFilterIF3IF3)

def rtkRayQuadricIntersectionImageFilterIF3IF3___New_orig__() -> "rtkRayQuadricIntersectionImageFilterIF3IF3_Pointer":
    """rtkRayQuadricIntersectionImageFilterIF3IF3___New_orig__() -> rtkRayQuadricIntersectionImageFilterIF3IF3_Pointer"""
    return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3___New_orig__()

def rtkRayQuadricIntersectionImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "rtkRayQuadricIntersectionImageFilterIF3IF3 *":
    """rtkRayQuadricIntersectionImageFilterIF3IF3_cast(itkLightObject obj) -> rtkRayQuadricIntersectionImageFilterIF3IF3"""
    return _rtkRayQuadricIntersectionImageFilterPython.rtkRayQuadricIntersectionImageFilterIF3IF3_cast(obj)


def ray_quadric_intersection_image_filter(*args, **kwargs):
    """Procedural interface for RayQuadricIntersectionImageFilter"""
    import itk
    instance = itk.RayQuadricIntersectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def ray_quadric_intersection_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.RayQuadricIntersectionImageFilter, itkTemplate.itkTemplate):
        ray_quadric_intersection_image_filter.__doc__ = itk.RayQuadricIntersectionImageFilter.values()[0].__doc__
    else:
        ray_quadric_intersection_image_filter.__doc__ = itk.RayQuadricIntersectionImageFilter.__doc__




