# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkFourDSARTConeBeamReconstructionFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkFourDSARTConeBeamReconstructionFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkFourDSARTConeBeamReconstructionFilterPython
            return _rtkFourDSARTConeBeamReconstructionFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkFourDSARTConeBeamReconstructionFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkFourDSARTConeBeamReconstructionFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkFourDSARTConeBeamReconstructionFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImagePython
import itkPointPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import itkVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import ITKCommonBasePython
import itkSizePython
import itkCovariantVectorPython
import itkIndexPython
import itkOffsetPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageRegionPython
import itkImageRTKPython
import itkImageBaseRTKPython
import itkPointRTKPython
import itkMatrixRTKPython
import itkCovariantVectorRTKPython
import itkImageRegionRTKPython
import itkArray2DPython
import rtkThreeDCircularProjectionGeometryPython
import rtkProjectionGeometryPython
import rtkFourDConjugateGradientConeBeamReconstructionFilterPython
import itkImageToImageFilterRTKPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourceRTKPython
import itkImageSourceCommonPython
import itkImageSourcePython
import rtkForwardProjectionImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageToImageFilterAPython
import rtkBackProjectionImageFilterPython

def rtkFourDSARTConeBeamReconstructionFilterIF4IF3_New():
  return rtkFourDSARTConeBeamReconstructionFilterIF4IF3.New()

class rtkFourDSARTConeBeamReconstructionFilterIF4IF3(rtkFourDConjugateGradientConeBeamReconstructionFilterPython.rtkFourDConjugateGradientConeBeamReconstructionFilterIF4IF3_Superclass):
    """Proxy of C++ rtkFourDSARTConeBeamReconstructionFilterIF4IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkFourDSARTConeBeamReconstructionFilterIF4IF3_Pointer":
        """__New_orig__() -> rtkFourDSARTConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkFourDSARTConeBeamReconstructionFilterIF4IF3_Pointer":
        """Clone(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> rtkFourDSARTConeBeamReconstructionFilterIF4IF3_Pointer"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_Clone(self)


    def SetInputVolumeSeries(self, VolumeSeries: 'itkImageF4') -> "void":
        """SetInputVolumeSeries(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, itkImageF4 VolumeSeries)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetInputVolumeSeries(self, VolumeSeries)


    def GetInputVolumeSeries(self) -> "itkImageF4_ConstPointer":
        """GetInputVolumeSeries(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> itkImageF4_ConstPointer"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetInputVolumeSeries(self)


    def SetInputProjectionStack(self, Projection: 'itkImageF3') -> "void":
        """SetInputProjectionStack(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, itkImageF3 Projection)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetInputProjectionStack(self, Projection)


    def GetInputProjectionStack(self) -> "itkImageF3_Pointer":
        """GetInputProjectionStack(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> itkImageF3_Pointer"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetInputProjectionStack(self)


    def GetModifiableGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableGeometry(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetModifiableGeometry(self)


    def GetGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetGeometry(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> rtkThreeDCircularProjectionGeometry
        GetGeometry(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetGeometry(self, *args)


    def SetGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetGeometry(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetGeometry(self, _arg)


    def GetNumberOfIterations(self) -> "unsigned int":
        """GetNumberOfIterations(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> unsigned int"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetNumberOfIterations(self)


    def SetNumberOfIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfIterations(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, unsigned int const _arg)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetNumberOfIterations(self, _arg)


    def GetNumberOfProjectionsPerSubset(self) -> "unsigned int":
        """GetNumberOfProjectionsPerSubset(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> unsigned int"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetNumberOfProjectionsPerSubset(self)


    def SetNumberOfProjectionsPerSubset(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfProjectionsPerSubset(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, unsigned int const _arg)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetNumberOfProjectionsPerSubset(self, _arg)


    def GetLambda(self) -> "double":
        """GetLambda(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> double"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetLambda(self)


    def SetLambda(self, _arg: 'double const') -> "void":
        """SetLambda(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, double const _arg)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetLambda(self, _arg)


    def GetEnforcePositivity(self) -> "bool":
        """GetEnforcePositivity(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> bool"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetEnforcePositivity(self)


    def SetEnforcePositivity(self, _arg: 'bool const') -> "void":
        """SetEnforcePositivity(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, bool const _arg)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetEnforcePositivity(self, _arg)


    def SetWeights(self, _arg: 'itkArray2DF') -> "void":
        """SetWeights(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, itkArray2DF _arg)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetWeights(self, _arg)


    def SetSignal(self, signal: 'vectorD') -> "void":
        """SetSignal(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, vectorD signal)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetSignal(self, signal)


    def SetDisableDisplacedDetectorFilter(self, _arg: 'bool const') -> "void":
        """SetDisableDisplacedDetectorFilter(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self, bool const _arg)"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetDisableDisplacedDetectorFilter(self, _arg)


    def GetDisableDisplacedDetectorFilter(self) -> "bool":
        """GetDisableDisplacedDetectorFilter(rtkFourDSARTConeBeamReconstructionFilterIF4IF3 self) -> bool"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetDisableDisplacedDetectorFilter(self)

    __swig_destroy__ = _rtkFourDSARTConeBeamReconstructionFilterPython.delete_rtkFourDSARTConeBeamReconstructionFilterIF4IF3

    def cast(obj: 'itkLightObject') -> "rtkFourDSARTConeBeamReconstructionFilterIF4IF3 *":
        """cast(itkLightObject obj) -> rtkFourDSARTConeBeamReconstructionFilterIF4IF3"""
        return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkFourDSARTConeBeamReconstructionFilterIF4IF3

        Create a new object of the class rtkFourDSARTConeBeamReconstructionFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFourDSARTConeBeamReconstructionFilterIF4IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkFourDSARTConeBeamReconstructionFilterIF4IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkFourDSARTConeBeamReconstructionFilterIF4IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkFourDSARTConeBeamReconstructionFilterIF4IF3.Clone = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_Clone, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetInputVolumeSeries = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetInputVolumeSeries, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.GetInputVolumeSeries = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetInputVolumeSeries, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetInputProjectionStack = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetInputProjectionStack, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.GetInputProjectionStack = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetInputProjectionStack, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.GetModifiableGeometry = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetModifiableGeometry, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.GetGeometry = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetGeometry, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetGeometry = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetGeometry, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.GetNumberOfIterations = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetNumberOfIterations, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetNumberOfIterations = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetNumberOfIterations, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.GetNumberOfProjectionsPerSubset = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetNumberOfProjectionsPerSubset, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetNumberOfProjectionsPerSubset = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetNumberOfProjectionsPerSubset, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.GetLambda = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetLambda, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetLambda = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetLambda, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.GetEnforcePositivity = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetEnforcePositivity, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetEnforcePositivity = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetEnforcePositivity, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetWeights = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetWeights, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetSignal = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetSignal, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.SetDisableDisplacedDetectorFilter = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_SetDisableDisplacedDetectorFilter, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3.GetDisableDisplacedDetectorFilter = new_instancemethod(_rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_GetDisableDisplacedDetectorFilter, None, rtkFourDSARTConeBeamReconstructionFilterIF4IF3)
rtkFourDSARTConeBeamReconstructionFilterIF4IF3_swigregister = _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_swigregister
rtkFourDSARTConeBeamReconstructionFilterIF4IF3_swigregister(rtkFourDSARTConeBeamReconstructionFilterIF4IF3)

def rtkFourDSARTConeBeamReconstructionFilterIF4IF3___New_orig__() -> "rtkFourDSARTConeBeamReconstructionFilterIF4IF3_Pointer":
    """rtkFourDSARTConeBeamReconstructionFilterIF4IF3___New_orig__() -> rtkFourDSARTConeBeamReconstructionFilterIF4IF3_Pointer"""
    return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3___New_orig__()

def rtkFourDSARTConeBeamReconstructionFilterIF4IF3_cast(obj: 'itkLightObject') -> "rtkFourDSARTConeBeamReconstructionFilterIF4IF3 *":
    """rtkFourDSARTConeBeamReconstructionFilterIF4IF3_cast(itkLightObject obj) -> rtkFourDSARTConeBeamReconstructionFilterIF4IF3"""
    return _rtkFourDSARTConeBeamReconstructionFilterPython.rtkFourDSARTConeBeamReconstructionFilterIF4IF3_cast(obj)


def four_dsart_cone_beam_reconstruction_filter(*args, **kwargs):
    """Procedural interface for FourDSARTConeBeamReconstructionFilter"""
    import itk
    instance = itk.FourDSARTConeBeamReconstructionFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def four_dsart_cone_beam_reconstruction_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.FourDSARTConeBeamReconstructionFilter, itkTemplate.itkTemplate):
        four_dsart_cone_beam_reconstruction_filter.__doc__ = itk.FourDSARTConeBeamReconstructionFilter.values()[0].__doc__
    else:
        four_dsart_cone_beam_reconstruction_filter.__doc__ = itk.FourDSARTConeBeamReconstructionFilter.__doc__




