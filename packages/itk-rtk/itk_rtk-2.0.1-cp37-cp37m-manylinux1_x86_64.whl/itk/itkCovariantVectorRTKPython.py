# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkCovariantVectorRTKPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkCovariantVectorRTKPython', [dirname(__file__)])
        except ImportError:
            import _itkCovariantVectorRTKPython
            return _itkCovariantVectorRTKPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkCovariantVectorRTKPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkCovariantVectorRTKPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkCovariantVectorRTKPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkVectorPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
class itkCovariantVectorD1(itkFixedArrayPython.itkFixedArrayD1):
    """Proxy of C++ itkCovariantVectorD1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetCovariantVectorDimension() -> "unsigned int":
        """GetCovariantVectorDimension() -> unsigned int"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1_GetCovariantVectorDimension()

    GetCovariantVectorDimension = staticmethod(GetCovariantVectorDimension)

    def SetVnlVector(self, arg0: 'vnl_vectorD') -> "void":
        """SetVnlVector(itkCovariantVectorD1 self, vnl_vectorD arg0)"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1_SetVnlVector(self, arg0)


    def GetVnlVector(self, *args) -> "vnl_vectorD":
        """
        GetVnlVector(itkCovariantVectorD1 self) -> vnl_vector_refD
        GetVnlVector(itkCovariantVectorD1 self) -> vnl_vectorD
        """
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1_GetVnlVector(self, *args)

    __swig_destroy__ = _itkCovariantVectorRTKPython.delete_itkCovariantVectorD1

    def __init__(self, *args):
        """
        __init__(itkCovariantVectorD1 self) -> itkCovariantVectorD1
        __init__(itkCovariantVectorD1 self, itkCovariantVectorD1 arg0) -> itkCovariantVectorD1
        __init__(itkCovariantVectorD1 self, double const & r) -> itkCovariantVectorD1
        __init__(itkCovariantVectorD1 self, double const * r) -> itkCovariantVectorD1
        """
        _itkCovariantVectorRTKPython.itkCovariantVectorD1_swiginit(self, _itkCovariantVectorRTKPython.new_itkCovariantVectorD1(*args))

    def __iadd__(self, vec: 'itkCovariantVectorD1') -> "itkCovariantVectorD1 const &":
        """__iadd__(itkCovariantVectorD1 self, itkCovariantVectorD1 vec) -> itkCovariantVectorD1"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___iadd__(self, vec)


    def __isub__(self, vec: 'itkCovariantVectorD1') -> "itkCovariantVectorD1 const &":
        """__isub__(itkCovariantVectorD1 self, itkCovariantVectorD1 vec) -> itkCovariantVectorD1"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___isub__(self, vec)


    def __neg__(self) -> "itkCovariantVectorD1":
        """__neg__(itkCovariantVectorD1 self) -> itkCovariantVectorD1"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___neg__(self)


    def __add__(self, vec: 'itkCovariantVectorD1') -> "itkCovariantVectorD1":
        """__add__(itkCovariantVectorD1 self, itkCovariantVectorD1 vec) -> itkCovariantVectorD1"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___add__(self, vec)


    def __sub__(self, vec: 'itkCovariantVectorD1') -> "itkCovariantVectorD1":
        """__sub__(itkCovariantVectorD1 self, itkCovariantVectorD1 vec) -> itkCovariantVectorD1"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___sub__(self, vec)


    def __mul__(self, *args) -> "itkCovariantVectorD1":
        """
        __mul__(itkCovariantVectorD1 self, itkCovariantVectorD1 vec) -> double
        __mul__(itkCovariantVectorD1 self, itkVectorD1 vec) -> double
        __mul__(itkCovariantVectorD1 self, double const & val) -> itkCovariantVectorD1
        """
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___mul__(self, *args)


    def GetNorm(self) -> "double":
        """GetNorm(itkCovariantVectorD1 self) -> double"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1_GetNorm(self)


    def GetNumberOfComponents() -> "unsigned int":
        """GetNumberOfComponents() -> unsigned int"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1_GetNumberOfComponents()

    GetNumberOfComponents = staticmethod(GetNumberOfComponents)

    def Normalize(self) -> "double":
        """Normalize(itkCovariantVectorD1 self) -> double"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1_Normalize(self)


    def GetSquaredNorm(self) -> "double":
        """GetSquaredNorm(itkCovariantVectorD1 self) -> double"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1_GetSquaredNorm(self)


    def __getitem__(self, d: 'unsigned long') -> "double":
        """__getitem__(itkCovariantVectorD1 self, unsigned long d) -> double"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___getitem__(self, d)


    def __setitem__(self, d: 'unsigned long', v: 'double') -> "void":
        """__setitem__(itkCovariantVectorD1 self, unsigned long d, double v)"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___setitem__(self, d, v)


    def __len__() -> "unsigned int":
        """__len__() -> unsigned int"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___len__()

    __len__ = staticmethod(__len__)

    def __repr__(self) -> "std::string":
        """__repr__(itkCovariantVectorD1 self) -> std::string"""
        return _itkCovariantVectorRTKPython.itkCovariantVectorD1___repr__(self)

itkCovariantVectorD1.SetVnlVector = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1_SetVnlVector, None, itkCovariantVectorD1)
itkCovariantVectorD1.GetVnlVector = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1_GetVnlVector, None, itkCovariantVectorD1)
itkCovariantVectorD1.__iadd__ = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1___iadd__, None, itkCovariantVectorD1)
itkCovariantVectorD1.__isub__ = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1___isub__, None, itkCovariantVectorD1)
itkCovariantVectorD1.__neg__ = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1___neg__, None, itkCovariantVectorD1)
itkCovariantVectorD1.__add__ = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1___add__, None, itkCovariantVectorD1)
itkCovariantVectorD1.__sub__ = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1___sub__, None, itkCovariantVectorD1)
itkCovariantVectorD1.__mul__ = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1___mul__, None, itkCovariantVectorD1)
itkCovariantVectorD1.GetNorm = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1_GetNorm, None, itkCovariantVectorD1)
itkCovariantVectorD1.Normalize = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1_Normalize, None, itkCovariantVectorD1)
itkCovariantVectorD1.GetSquaredNorm = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1_GetSquaredNorm, None, itkCovariantVectorD1)
itkCovariantVectorD1.__getitem__ = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1___getitem__, None, itkCovariantVectorD1)
itkCovariantVectorD1.__setitem__ = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1___setitem__, None, itkCovariantVectorD1)
itkCovariantVectorD1.__repr__ = new_instancemethod(_itkCovariantVectorRTKPython.itkCovariantVectorD1___repr__, None, itkCovariantVectorD1)
itkCovariantVectorD1_swigregister = _itkCovariantVectorRTKPython.itkCovariantVectorD1_swigregister
itkCovariantVectorD1_swigregister(itkCovariantVectorD1)

def itkCovariantVectorD1_GetCovariantVectorDimension() -> "unsigned int":
    """itkCovariantVectorD1_GetCovariantVectorDimension() -> unsigned int"""
    return _itkCovariantVectorRTKPython.itkCovariantVectorD1_GetCovariantVectorDimension()

def itkCovariantVectorD1_GetNumberOfComponents() -> "unsigned int":
    """itkCovariantVectorD1_GetNumberOfComponents() -> unsigned int"""
    return _itkCovariantVectorRTKPython.itkCovariantVectorD1_GetNumberOfComponents()

def itkCovariantVectorD1___len__() -> "unsigned int":
    """itkCovariantVectorD1___len__() -> unsigned int"""
    return _itkCovariantVectorRTKPython.itkCovariantVectorD1___len__()



