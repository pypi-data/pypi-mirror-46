# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkInPlaceImageFilterRTKPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkInPlaceImageFilterRTKPython', [dirname(__file__)])
        except ImportError:
            import _itkInPlaceImageFilterRTKPython
            return _itkInPlaceImageFilterRTKPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkInPlaceImageFilterRTKPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkInPlaceImageFilterRTKPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkInPlaceImageFilterRTKPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterRTKPython
import itkImageSourceRTKPython
import itkImageSourceCommonPython
import itkImageRegionRTKPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRTKPython
import itkCovariantVectorPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkImageBaseRTKPython
import itkPointRTKPython
import itkMatrixRTKPython
import itkCovariantVectorRTKPython
import itkImagePython
import itkPointPython
import itkRGBPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def itkInPlaceImageFilterVIF3VIF3_New():
  return itkInPlaceImageFilterVIF3VIF3.New()


def itkInPlaceImageFilterIF3ID2_New():
  return itkInPlaceImageFilterIF3ID2.New()


def itkInPlaceImageFilterIF1IF1_New():
  return itkInPlaceImageFilterIF1IF1.New()


def itkInPlaceImageFilterID3ID2_New():
  return itkInPlaceImageFilterID3ID2.New()


def itkInPlaceImageFilterID1ID1_New():
  return itkInPlaceImageFilterID1ID1.New()

class itkInPlaceImageFilterID1ID1(itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1):
    """Proxy of C++ itkInPlaceImageFilterID1ID1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInPlace(self, _arg: 'bool const') -> "void":
        """SetInPlace(itkInPlaceImageFilterID1ID1 self, bool const _arg)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_SetInPlace(self, _arg)


    def GetInPlace(self) -> "bool":
        """GetInPlace(itkInPlaceImageFilterID1ID1 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_GetInPlace(self)


    def InPlaceOn(self) -> "void":
        """InPlaceOn(itkInPlaceImageFilterID1ID1 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_InPlaceOn(self)


    def InPlaceOff(self) -> "void":
        """InPlaceOff(itkInPlaceImageFilterID1ID1 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_InPlaceOff(self)


    def CanRunInPlace(self) -> "bool":
        """CanRunInPlace(itkInPlaceImageFilterID1ID1 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterRTKPython.delete_itkInPlaceImageFilterID1ID1

    def cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterID1ID1 *":
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID1ID1"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID1ID1

        Create a new object of the class itkInPlaceImageFilterID1ID1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInPlaceImageFilterID1ID1.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInPlaceImageFilterID1ID1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID1ID1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID1ID1.SetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_SetInPlace, None, itkInPlaceImageFilterID1ID1)
itkInPlaceImageFilterID1ID1.GetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_GetInPlace, None, itkInPlaceImageFilterID1ID1)
itkInPlaceImageFilterID1ID1.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_InPlaceOn, None, itkInPlaceImageFilterID1ID1)
itkInPlaceImageFilterID1ID1.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_InPlaceOff, None, itkInPlaceImageFilterID1ID1)
itkInPlaceImageFilterID1ID1.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_CanRunInPlace, None, itkInPlaceImageFilterID1ID1)
itkInPlaceImageFilterID1ID1_swigregister = _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_swigregister
itkInPlaceImageFilterID1ID1_swigregister(itkInPlaceImageFilterID1ID1)

def itkInPlaceImageFilterID1ID1_cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterID1ID1 *":
    """itkInPlaceImageFilterID1ID1_cast(itkLightObject obj) -> itkInPlaceImageFilterID1ID1"""
    return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID1ID1_cast(obj)

class itkInPlaceImageFilterID3ID2(itkImageToImageFilterRTKPython.itkImageToImageFilterID3ID2):
    """Proxy of C++ itkInPlaceImageFilterID3ID2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInPlace(self, _arg: 'bool const') -> "void":
        """SetInPlace(itkInPlaceImageFilterID3ID2 self, bool const _arg)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_SetInPlace(self, _arg)


    def GetInPlace(self) -> "bool":
        """GetInPlace(itkInPlaceImageFilterID3ID2 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_GetInPlace(self)


    def InPlaceOn(self) -> "void":
        """InPlaceOn(itkInPlaceImageFilterID3ID2 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_InPlaceOn(self)


    def InPlaceOff(self) -> "void":
        """InPlaceOff(itkInPlaceImageFilterID3ID2 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_InPlaceOff(self)


    def CanRunInPlace(self) -> "bool":
        """CanRunInPlace(itkInPlaceImageFilterID3ID2 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterRTKPython.delete_itkInPlaceImageFilterID3ID2

    def cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterID3ID2 *":
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3ID2"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3ID2

        Create a new object of the class itkInPlaceImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInPlaceImageFilterID3ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInPlaceImageFilterID3ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_SetInPlace, None, itkInPlaceImageFilterID3ID2)
itkInPlaceImageFilterID3ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_GetInPlace, None, itkInPlaceImageFilterID3ID2)
itkInPlaceImageFilterID3ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_InPlaceOn, None, itkInPlaceImageFilterID3ID2)
itkInPlaceImageFilterID3ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_InPlaceOff, None, itkInPlaceImageFilterID3ID2)
itkInPlaceImageFilterID3ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_CanRunInPlace, None, itkInPlaceImageFilterID3ID2)
itkInPlaceImageFilterID3ID2_swigregister = _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_swigregister
itkInPlaceImageFilterID3ID2_swigregister(itkInPlaceImageFilterID3ID2)

def itkInPlaceImageFilterID3ID2_cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterID3ID2 *":
    """itkInPlaceImageFilterID3ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterID3ID2"""
    return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterID3ID2_cast(obj)

class itkInPlaceImageFilterIF1IF1(itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1):
    """Proxy of C++ itkInPlaceImageFilterIF1IF1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInPlace(self, _arg: 'bool const') -> "void":
        """SetInPlace(itkInPlaceImageFilterIF1IF1 self, bool const _arg)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_SetInPlace(self, _arg)


    def GetInPlace(self) -> "bool":
        """GetInPlace(itkInPlaceImageFilterIF1IF1 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_GetInPlace(self)


    def InPlaceOn(self) -> "void":
        """InPlaceOn(itkInPlaceImageFilterIF1IF1 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_InPlaceOn(self)


    def InPlaceOff(self) -> "void":
        """InPlaceOff(itkInPlaceImageFilterIF1IF1 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_InPlaceOff(self)


    def CanRunInPlace(self) -> "bool":
        """CanRunInPlace(itkInPlaceImageFilterIF1IF1 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterRTKPython.delete_itkInPlaceImageFilterIF1IF1

    def cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterIF1IF1 *":
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF1IF1"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF1IF1

        Create a new object of the class itkInPlaceImageFilterIF1IF1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInPlaceImageFilterIF1IF1.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInPlaceImageFilterIF1IF1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF1IF1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF1IF1.SetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_SetInPlace, None, itkInPlaceImageFilterIF1IF1)
itkInPlaceImageFilterIF1IF1.GetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_GetInPlace, None, itkInPlaceImageFilterIF1IF1)
itkInPlaceImageFilterIF1IF1.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_InPlaceOn, None, itkInPlaceImageFilterIF1IF1)
itkInPlaceImageFilterIF1IF1.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_InPlaceOff, None, itkInPlaceImageFilterIF1IF1)
itkInPlaceImageFilterIF1IF1.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_CanRunInPlace, None, itkInPlaceImageFilterIF1IF1)
itkInPlaceImageFilterIF1IF1_swigregister = _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_swigregister
itkInPlaceImageFilterIF1IF1_swigregister(itkInPlaceImageFilterIF1IF1)

def itkInPlaceImageFilterIF1IF1_cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterIF1IF1 *":
    """itkInPlaceImageFilterIF1IF1_cast(itkLightObject obj) -> itkInPlaceImageFilterIF1IF1"""
    return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF1IF1_cast(obj)

class itkInPlaceImageFilterIF3ID2(itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2):
    """Proxy of C++ itkInPlaceImageFilterIF3ID2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInPlace(self, _arg: 'bool const') -> "void":
        """SetInPlace(itkInPlaceImageFilterIF3ID2 self, bool const _arg)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_SetInPlace(self, _arg)


    def GetInPlace(self) -> "bool":
        """GetInPlace(itkInPlaceImageFilterIF3ID2 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_GetInPlace(self)


    def InPlaceOn(self) -> "void":
        """InPlaceOn(itkInPlaceImageFilterIF3ID2 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_InPlaceOn(self)


    def InPlaceOff(self) -> "void":
        """InPlaceOff(itkInPlaceImageFilterIF3ID2 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_InPlaceOff(self)


    def CanRunInPlace(self) -> "bool":
        """CanRunInPlace(itkInPlaceImageFilterIF3ID2 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterRTKPython.delete_itkInPlaceImageFilterIF3ID2

    def cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterIF3ID2 *":
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3ID2"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3ID2

        Create a new object of the class itkInPlaceImageFilterIF3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInPlaceImageFilterIF3ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInPlaceImageFilterIF3ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_SetInPlace, None, itkInPlaceImageFilterIF3ID2)
itkInPlaceImageFilterIF3ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_GetInPlace, None, itkInPlaceImageFilterIF3ID2)
itkInPlaceImageFilterIF3ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_InPlaceOn, None, itkInPlaceImageFilterIF3ID2)
itkInPlaceImageFilterIF3ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_InPlaceOff, None, itkInPlaceImageFilterIF3ID2)
itkInPlaceImageFilterIF3ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_CanRunInPlace, None, itkInPlaceImageFilterIF3ID2)
itkInPlaceImageFilterIF3ID2_swigregister = _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_swigregister
itkInPlaceImageFilterIF3ID2_swigregister(itkInPlaceImageFilterIF3ID2)

def itkInPlaceImageFilterIF3ID2_cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterIF3ID2 *":
    """itkInPlaceImageFilterIF3ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3ID2"""
    return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIF3ID2_cast(obj)

class itkInPlaceImageFilterVIF3VIF3(itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3):
    """Proxy of C++ itkInPlaceImageFilterVIF3VIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInPlace(self, _arg: 'bool const') -> "void":
        """SetInPlace(itkInPlaceImageFilterVIF3VIF3 self, bool const _arg)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_SetInPlace(self, _arg)


    def GetInPlace(self) -> "bool":
        """GetInPlace(itkInPlaceImageFilterVIF3VIF3 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_GetInPlace(self)


    def InPlaceOn(self) -> "void":
        """InPlaceOn(itkInPlaceImageFilterVIF3VIF3 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_InPlaceOn(self)


    def InPlaceOff(self) -> "void":
        """InPlaceOff(itkInPlaceImageFilterVIF3VIF3 self)"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_InPlaceOff(self)


    def CanRunInPlace(self) -> "bool":
        """CanRunInPlace(itkInPlaceImageFilterVIF3VIF3 self) -> bool"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterRTKPython.delete_itkInPlaceImageFilterVIF3VIF3

    def cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterVIF3VIF3 *":
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVIF3VIF3"""
        return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVIF3VIF3

        Create a new object of the class itkInPlaceImageFilterVIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInPlaceImageFilterVIF3VIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkInPlaceImageFilterVIF3VIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVIF3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVIF3VIF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_SetInPlace, None, itkInPlaceImageFilterVIF3VIF3)
itkInPlaceImageFilterVIF3VIF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_GetInPlace, None, itkInPlaceImageFilterVIF3VIF3)
itkInPlaceImageFilterVIF3VIF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_InPlaceOn, None, itkInPlaceImageFilterVIF3VIF3)
itkInPlaceImageFilterVIF3VIF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_InPlaceOff, None, itkInPlaceImageFilterVIF3VIF3)
itkInPlaceImageFilterVIF3VIF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_CanRunInPlace, None, itkInPlaceImageFilterVIF3VIF3)
itkInPlaceImageFilterVIF3VIF3_swigregister = _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_swigregister
itkInPlaceImageFilterVIF3VIF3_swigregister(itkInPlaceImageFilterVIF3VIF3)

def itkInPlaceImageFilterVIF3VIF3_cast(obj: 'itkLightObject') -> "itkInPlaceImageFilterVIF3VIF3 *":
    """itkInPlaceImageFilterVIF3VIF3_cast(itkLightObject obj) -> itkInPlaceImageFilterVIF3VIF3"""
    return _itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterVIF3VIF3_cast(obj)


def in_place_image_filter(*args, **kwargs):
    """Procedural interface for InPlaceImageFilter"""
    import itk
    instance = itk.InPlaceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def in_place_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.InPlaceImageFilter, itkTemplate.itkTemplate):
        in_place_image_filter.__doc__ = itk.InPlaceImageFilter.values()[0].__doc__
    else:
        in_place_image_filter.__doc__ = itk.InPlaceImageFilter.__doc__




