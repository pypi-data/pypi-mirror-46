# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkDrawGeometricPhantomImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkDrawGeometricPhantomImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkDrawGeometricPhantomImageFilterPython
            return _rtkDrawGeometricPhantomImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkDrawGeometricPhantomImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkDrawGeometricPhantomImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkDrawGeometricPhantomImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import ITKCommonBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython
import itkVectorImagePython
import itkImagePython
import itkCovariantVectorPython
import itkPointPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkSizePython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkRGBPixelPython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterBPython
import rtkGeometricPhantomPython
import rtkConvexShapePython

def rtkDrawGeometricPhantomImageFilterIF3IF3_New():
  return rtkDrawGeometricPhantomImageFilterIF3IF3.New()

class rtkDrawGeometricPhantomImageFilterIF3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ rtkDrawGeometricPhantomImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkDrawGeometricPhantomImageFilterIF3IF3_Pointer":
        """__New_orig__() -> rtkDrawGeometricPhantomImageFilterIF3IF3_Pointer"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkDrawGeometricPhantomImageFilterIF3IF3_Pointer":
        """Clone(rtkDrawGeometricPhantomImageFilterIF3IF3 self) -> rtkDrawGeometricPhantomImageFilterIF3IF3_Pointer"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_Clone(self)


    def GetGeometricPhantom(self) -> "rtkGeometricPhantom const *":
        """GetGeometricPhantom(rtkDrawGeometricPhantomImageFilterIF3IF3 self) -> rtkGeometricPhantom"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetGeometricPhantom(self)


    def SetGeometricPhantom(self, _arg: 'rtkGeometricPhantom') -> "void":
        """SetGeometricPhantom(rtkDrawGeometricPhantomImageFilterIF3IF3 self, rtkGeometricPhantom _arg)"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetGeometricPhantom(self, _arg)


    def SetConfigFile(self, _arg: 'std::string const') -> "void":
        """SetConfigFile(rtkDrawGeometricPhantomImageFilterIF3IF3 self, std::string const _arg)"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetConfigFile(self, _arg)


    def GetConfigFile(self) -> "std::string":
        """GetConfigFile(rtkDrawGeometricPhantomImageFilterIF3IF3 self) -> std::string"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetConfigFile(self)


    def SetPhantomScale(self, _arg: 'itkVectorD3') -> "void":
        """SetPhantomScale(rtkDrawGeometricPhantomImageFilterIF3IF3 self, itkVectorD3 _arg)"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetPhantomScale(self, _arg)


    def GetPhantomScale(self) -> "itkVectorD3":
        """GetPhantomScale(rtkDrawGeometricPhantomImageFilterIF3IF3 self) -> itkVectorD3"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetPhantomScale(self)


    def SetOriginOffset(self, _arg: 'itkVectorD3') -> "void":
        """SetOriginOffset(rtkDrawGeometricPhantomImageFilterIF3IF3 self, itkVectorD3 _arg)"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetOriginOffset(self, _arg)


    def GetOriginOffset(self) -> "itkVectorD3":
        """GetOriginOffset(rtkDrawGeometricPhantomImageFilterIF3IF3 self) -> itkVectorD3"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetOriginOffset(self)


    def SetIsForbildConfigFile(self, _arg: 'bool const') -> "void":
        """SetIsForbildConfigFile(rtkDrawGeometricPhantomImageFilterIF3IF3 self, bool const _arg)"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetIsForbildConfigFile(self, _arg)


    def GetIsForbildConfigFile(self) -> "bool":
        """GetIsForbildConfigFile(rtkDrawGeometricPhantomImageFilterIF3IF3 self) -> bool"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetIsForbildConfigFile(self)


    def IsForbildConfigFileOn(self) -> "void":
        """IsForbildConfigFileOn(rtkDrawGeometricPhantomImageFilterIF3IF3 self)"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_IsForbildConfigFileOn(self)


    def IsForbildConfigFileOff(self) -> "void":
        """IsForbildConfigFileOff(rtkDrawGeometricPhantomImageFilterIF3IF3 self)"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_IsForbildConfigFileOff(self)


    def SetRotationMatrix(self, _arg: 'itkMatrixD33') -> "void":
        """SetRotationMatrix(rtkDrawGeometricPhantomImageFilterIF3IF3 self, itkMatrixD33 _arg)"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetRotationMatrix(self, _arg)


    def GetRotationMatrix(self) -> "itkMatrixD33":
        """GetRotationMatrix(rtkDrawGeometricPhantomImageFilterIF3IF3 self) -> itkMatrixD33"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetRotationMatrix(self)

    __swig_destroy__ = _rtkDrawGeometricPhantomImageFilterPython.delete_rtkDrawGeometricPhantomImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "rtkDrawGeometricPhantomImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> rtkDrawGeometricPhantomImageFilterIF3IF3"""
        return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkDrawGeometricPhantomImageFilterIF3IF3

        Create a new object of the class rtkDrawGeometricPhantomImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDrawGeometricPhantomImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkDrawGeometricPhantomImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkDrawGeometricPhantomImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkDrawGeometricPhantomImageFilterIF3IF3.Clone = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_Clone, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.GetGeometricPhantom = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetGeometricPhantom, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.SetGeometricPhantom = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetGeometricPhantom, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.SetConfigFile = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetConfigFile, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.GetConfigFile = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetConfigFile, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.SetPhantomScale = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetPhantomScale, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.GetPhantomScale = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetPhantomScale, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.SetOriginOffset = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetOriginOffset, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.GetOriginOffset = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetOriginOffset, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.SetIsForbildConfigFile = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetIsForbildConfigFile, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.GetIsForbildConfigFile = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetIsForbildConfigFile, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.IsForbildConfigFileOn = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_IsForbildConfigFileOn, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.IsForbildConfigFileOff = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_IsForbildConfigFileOff, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.SetRotationMatrix = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_SetRotationMatrix, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3.GetRotationMatrix = new_instancemethod(_rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_GetRotationMatrix, None, rtkDrawGeometricPhantomImageFilterIF3IF3)
rtkDrawGeometricPhantomImageFilterIF3IF3_swigregister = _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_swigregister
rtkDrawGeometricPhantomImageFilterIF3IF3_swigregister(rtkDrawGeometricPhantomImageFilterIF3IF3)

def rtkDrawGeometricPhantomImageFilterIF3IF3___New_orig__() -> "rtkDrawGeometricPhantomImageFilterIF3IF3_Pointer":
    """rtkDrawGeometricPhantomImageFilterIF3IF3___New_orig__() -> rtkDrawGeometricPhantomImageFilterIF3IF3_Pointer"""
    return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3___New_orig__()

def rtkDrawGeometricPhantomImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "rtkDrawGeometricPhantomImageFilterIF3IF3 *":
    """rtkDrawGeometricPhantomImageFilterIF3IF3_cast(itkLightObject obj) -> rtkDrawGeometricPhantomImageFilterIF3IF3"""
    return _rtkDrawGeometricPhantomImageFilterPython.rtkDrawGeometricPhantomImageFilterIF3IF3_cast(obj)


def draw_geometric_phantom_image_filter(*args, **kwargs):
    """Procedural interface for DrawGeometricPhantomImageFilter"""
    import itk
    instance = itk.DrawGeometricPhantomImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def draw_geometric_phantom_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.DrawGeometricPhantomImageFilter, itkTemplate.itkTemplate):
        draw_geometric_phantom_image_filter.__doc__ = itk.DrawGeometricPhantomImageFilter.values()[0].__doc__
    else:
        draw_geometric_phantom_image_filter.__doc__ = itk.DrawGeometricPhantomImageFilter.__doc__




