# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkDrawConvexImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkDrawConvexImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkDrawConvexImageFilterPython
            return _rtkDrawConvexImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkDrawConvexImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkDrawConvexImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkDrawConvexImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import rtkConvexShapePython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import ITKCommonBasePython
import itkMatrixPython
import itkCovariantVectorPython
import itkPointPython
import vnl_matrix_fixedPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython
import itkVectorImagePython
import itkImagePython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkSizePython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkRGBPixelPython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterBPython

def rtkDrawConvexImageFilterIF3IF3_New():
  return rtkDrawConvexImageFilterIF3IF3.New()

class rtkDrawConvexImageFilterIF3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ rtkDrawConvexImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkDrawConvexImageFilterIF3IF3_Pointer":
        """__New_orig__() -> rtkDrawConvexImageFilterIF3IF3_Pointer"""
        return _rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkDrawConvexImageFilterIF3IF3_Pointer":
        """Clone(rtkDrawConvexImageFilterIF3IF3 self) -> rtkDrawConvexImageFilterIF3IF3_Pointer"""
        return _rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_Clone(self)


    def GetModifiableConvexShape(self) -> "rtkConvexShape *":
        """GetModifiableConvexShape(rtkDrawConvexImageFilterIF3IF3 self) -> rtkConvexShape"""
        return _rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_GetModifiableConvexShape(self)


    def GetConvexShape(self, *args) -> "rtkConvexShape *":
        """
        GetConvexShape(rtkDrawConvexImageFilterIF3IF3 self) -> rtkConvexShape
        GetConvexShape(rtkDrawConvexImageFilterIF3IF3 self) -> rtkConvexShape
        """
        return _rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_GetConvexShape(self, *args)


    def SetConvexShape(self, _arg: 'rtkConvexShape') -> "void":
        """SetConvexShape(rtkDrawConvexImageFilterIF3IF3 self, rtkConvexShape _arg)"""
        return _rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_SetConvexShape(self, _arg)

    __swig_destroy__ = _rtkDrawConvexImageFilterPython.delete_rtkDrawConvexImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "rtkDrawConvexImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> rtkDrawConvexImageFilterIF3IF3"""
        return _rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkDrawConvexImageFilterIF3IF3

        Create a new object of the class rtkDrawConvexImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDrawConvexImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkDrawConvexImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkDrawConvexImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkDrawConvexImageFilterIF3IF3.Clone = new_instancemethod(_rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_Clone, None, rtkDrawConvexImageFilterIF3IF3)
rtkDrawConvexImageFilterIF3IF3.GetModifiableConvexShape = new_instancemethod(_rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_GetModifiableConvexShape, None, rtkDrawConvexImageFilterIF3IF3)
rtkDrawConvexImageFilterIF3IF3.GetConvexShape = new_instancemethod(_rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_GetConvexShape, None, rtkDrawConvexImageFilterIF3IF3)
rtkDrawConvexImageFilterIF3IF3.SetConvexShape = new_instancemethod(_rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_SetConvexShape, None, rtkDrawConvexImageFilterIF3IF3)
rtkDrawConvexImageFilterIF3IF3_swigregister = _rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_swigregister
rtkDrawConvexImageFilterIF3IF3_swigregister(rtkDrawConvexImageFilterIF3IF3)

def rtkDrawConvexImageFilterIF3IF3___New_orig__() -> "rtkDrawConvexImageFilterIF3IF3_Pointer":
    """rtkDrawConvexImageFilterIF3IF3___New_orig__() -> rtkDrawConvexImageFilterIF3IF3_Pointer"""
    return _rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3___New_orig__()

def rtkDrawConvexImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "rtkDrawConvexImageFilterIF3IF3 *":
    """rtkDrawConvexImageFilterIF3IF3_cast(itkLightObject obj) -> rtkDrawConvexImageFilterIF3IF3"""
    return _rtkDrawConvexImageFilterPython.rtkDrawConvexImageFilterIF3IF3_cast(obj)


def draw_convex_image_filter(*args, **kwargs):
    """Procedural interface for DrawConvexImageFilter"""
    import itk
    instance = itk.DrawConvexImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def draw_convex_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.DrawConvexImageFilter, itkTemplate.itkTemplate):
        draw_convex_image_filter.__doc__ = itk.DrawConvexImageFilter.values()[0].__doc__
    else:
        draw_convex_image_filter.__doc__ = itk.DrawConvexImageFilter.__doc__




