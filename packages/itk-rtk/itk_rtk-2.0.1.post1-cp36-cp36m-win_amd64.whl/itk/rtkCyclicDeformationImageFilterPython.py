# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkCyclicDeformationImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkCyclicDeformationImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkCyclicDeformationImageFilterPython
            return _rtkCyclicDeformationImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkCyclicDeformationImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkCyclicDeformationImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkCyclicDeformationImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import itkSizePython
import pyBasePython
import ITKCommonBasePython
import itkIndexPython
import itkOffsetPython
import itkImageToImageFilterRTKPython
import itkImagePython
import itkCovariantVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkPointPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBPixelPython
import itkImageSourceRTKPython
import itkImageRTKPython
import itkImageBaseRTKPython
import itkPointRTKPython
import itkImageRegionRTKPython
import itkMatrixRTKPython
import itkCovariantVectorRTKPython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython

def rtkCyclicDeformationImageFilterIVF34IVF33_New():
  return rtkCyclicDeformationImageFilterIVF34IVF33.New()


def rtkCyclicDeformationImageFilterIF4IF3_New():
  return rtkCyclicDeformationImageFilterIF4IF3.New()

class rtkCyclicDeformationImageFilterIF4IF3(itkImageToImageFilterRTKPython.itkImageToImageFilterIF4IF3):
    """Proxy of C++ rtkCyclicDeformationImageFilterIF4IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkCyclicDeformationImageFilterIF4IF3_Pointer":
        """__New_orig__() -> rtkCyclicDeformationImageFilterIF4IF3_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkCyclicDeformationImageFilterIF4IF3_Pointer":
        """Clone(rtkCyclicDeformationImageFilterIF4IF3 self) -> rtkCyclicDeformationImageFilterIF4IF3_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_Clone(self)


    def GetSignalFilename(self) -> "std::string":
        """GetSignalFilename(rtkCyclicDeformationImageFilterIF4IF3 self) -> std::string"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_GetSignalFilename(self)


    def SetSignalFilename(self, _arg: 'std::string const') -> "void":
        """SetSignalFilename(rtkCyclicDeformationImageFilterIF4IF3 self, std::string const _arg)"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetSignalFilename(self, _arg)


    def SetSignalVector(self, _arg: 'vectorD') -> "void":
        """SetSignalVector(rtkCyclicDeformationImageFilterIF4IF3 self, vectorD _arg)"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetSignalVector(self, _arg)


    def GetFrame(self) -> "unsigned int":
        """GetFrame(rtkCyclicDeformationImageFilterIF4IF3 self) -> unsigned int"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_GetFrame(self)


    def SetFrame(self, _arg: 'unsigned int const') -> "void":
        """SetFrame(rtkCyclicDeformationImageFilterIF4IF3 self, unsigned int const _arg)"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetFrame(self, _arg)

    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIF4IF3

    def cast(obj: 'itkLightObject') -> "rtkCyclicDeformationImageFilterIF4IF3 *":
        """cast(itkLightObject obj) -> rtkCyclicDeformationImageFilterIF4IF3"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIF4IF3

        Create a new object of the class rtkCyclicDeformationImageFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIF4IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIF4IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkCyclicDeformationImageFilterIF4IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkCyclicDeformationImageFilterIF4IF3.Clone = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_Clone, None, rtkCyclicDeformationImageFilterIF4IF3)
rtkCyclicDeformationImageFilterIF4IF3.GetSignalFilename = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_GetSignalFilename, None, rtkCyclicDeformationImageFilterIF4IF3)
rtkCyclicDeformationImageFilterIF4IF3.SetSignalFilename = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetSignalFilename, None, rtkCyclicDeformationImageFilterIF4IF3)
rtkCyclicDeformationImageFilterIF4IF3.SetSignalVector = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetSignalVector, None, rtkCyclicDeformationImageFilterIF4IF3)
rtkCyclicDeformationImageFilterIF4IF3.GetFrame = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_GetFrame, None, rtkCyclicDeformationImageFilterIF4IF3)
rtkCyclicDeformationImageFilterIF4IF3.SetFrame = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetFrame, None, rtkCyclicDeformationImageFilterIF4IF3)
rtkCyclicDeformationImageFilterIF4IF3_swigregister = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_swigregister
rtkCyclicDeformationImageFilterIF4IF3_swigregister(rtkCyclicDeformationImageFilterIF4IF3)

def rtkCyclicDeformationImageFilterIF4IF3___New_orig__() -> "rtkCyclicDeformationImageFilterIF4IF3_Pointer":
    """rtkCyclicDeformationImageFilterIF4IF3___New_orig__() -> rtkCyclicDeformationImageFilterIF4IF3_Pointer"""
    return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3___New_orig__()

def rtkCyclicDeformationImageFilterIF4IF3_cast(obj: 'itkLightObject') -> "rtkCyclicDeformationImageFilterIF4IF3 *":
    """rtkCyclicDeformationImageFilterIF4IF3_cast(itkLightObject obj) -> rtkCyclicDeformationImageFilterIF4IF3"""
    return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_cast(obj)

class rtkCyclicDeformationImageFilterIVF34IVF33(itkImageToImageFilterRTKPython.itkImageToImageFilterIVF33):
    """Proxy of C++ rtkCyclicDeformationImageFilterIVF34IVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkCyclicDeformationImageFilterIVF34IVF33_Pointer":
        """__New_orig__() -> rtkCyclicDeformationImageFilterIVF34IVF33_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkCyclicDeformationImageFilterIVF34IVF33_Pointer":
        """Clone(rtkCyclicDeformationImageFilterIVF34IVF33 self) -> rtkCyclicDeformationImageFilterIVF34IVF33_Pointer"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_Clone(self)


    def GetSignalFilename(self) -> "std::string":
        """GetSignalFilename(rtkCyclicDeformationImageFilterIVF34IVF33 self) -> std::string"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_GetSignalFilename(self)


    def SetSignalFilename(self, _arg: 'std::string const') -> "void":
        """SetSignalFilename(rtkCyclicDeformationImageFilterIVF34IVF33 self, std::string const _arg)"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetSignalFilename(self, _arg)


    def SetSignalVector(self, _arg: 'vectorD') -> "void":
        """SetSignalVector(rtkCyclicDeformationImageFilterIVF34IVF33 self, vectorD _arg)"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetSignalVector(self, _arg)


    def GetFrame(self) -> "unsigned int":
        """GetFrame(rtkCyclicDeformationImageFilterIVF34IVF33 self) -> unsigned int"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_GetFrame(self)


    def SetFrame(self, _arg: 'unsigned int const') -> "void":
        """SetFrame(rtkCyclicDeformationImageFilterIVF34IVF33 self, unsigned int const _arg)"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetFrame(self, _arg)

    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIVF34IVF33

    def cast(obj: 'itkLightObject') -> "rtkCyclicDeformationImageFilterIVF34IVF33 *":
        """cast(itkLightObject obj) -> rtkCyclicDeformationImageFilterIVF34IVF33"""
        return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIVF34IVF33

        Create a new object of the class rtkCyclicDeformationImageFilterIVF34IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIVF34IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIVF34IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkCyclicDeformationImageFilterIVF34IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkCyclicDeformationImageFilterIVF34IVF33.Clone = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_Clone, None, rtkCyclicDeformationImageFilterIVF34IVF33)
rtkCyclicDeformationImageFilterIVF34IVF33.GetSignalFilename = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_GetSignalFilename, None, rtkCyclicDeformationImageFilterIVF34IVF33)
rtkCyclicDeformationImageFilterIVF34IVF33.SetSignalFilename = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetSignalFilename, None, rtkCyclicDeformationImageFilterIVF34IVF33)
rtkCyclicDeformationImageFilterIVF34IVF33.SetSignalVector = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetSignalVector, None, rtkCyclicDeformationImageFilterIVF34IVF33)
rtkCyclicDeformationImageFilterIVF34IVF33.GetFrame = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_GetFrame, None, rtkCyclicDeformationImageFilterIVF34IVF33)
rtkCyclicDeformationImageFilterIVF34IVF33.SetFrame = new_instancemethod(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetFrame, None, rtkCyclicDeformationImageFilterIVF34IVF33)
rtkCyclicDeformationImageFilterIVF34IVF33_swigregister = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_swigregister
rtkCyclicDeformationImageFilterIVF34IVF33_swigregister(rtkCyclicDeformationImageFilterIVF34IVF33)

def rtkCyclicDeformationImageFilterIVF34IVF33___New_orig__() -> "rtkCyclicDeformationImageFilterIVF34IVF33_Pointer":
    """rtkCyclicDeformationImageFilterIVF34IVF33___New_orig__() -> rtkCyclicDeformationImageFilterIVF34IVF33_Pointer"""
    return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33___New_orig__()

def rtkCyclicDeformationImageFilterIVF34IVF33_cast(obj: 'itkLightObject') -> "rtkCyclicDeformationImageFilterIVF34IVF33 *":
    """rtkCyclicDeformationImageFilterIVF34IVF33_cast(itkLightObject obj) -> rtkCyclicDeformationImageFilterIVF34IVF33"""
    return _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_cast(obj)


def cyclic_deformation_image_filter(*args, **kwargs):
    """Procedural interface for CyclicDeformationImageFilter"""
    import itk
    instance = itk.CyclicDeformationImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def cyclic_deformation_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.CyclicDeformationImageFilter, itkTemplate.itkTemplate):
        cyclic_deformation_image_filter.__doc__ = itk.CyclicDeformationImageFilter.values()[0].__doc__
    else:
        cyclic_deformation_image_filter.__doc__ = itk.CyclicDeformationImageFilter.__doc__




