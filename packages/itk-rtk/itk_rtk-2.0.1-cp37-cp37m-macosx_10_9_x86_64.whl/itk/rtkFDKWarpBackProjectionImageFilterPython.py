# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkFDKWarpBackProjectionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkFDKWarpBackProjectionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkFDKWarpBackProjectionImageFilterPython
            return _rtkFDKWarpBackProjectionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkFDKWarpBackProjectionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkFDKWarpBackProjectionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkFDKWarpBackProjectionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import rtkFDKBackProjectionImageFilterPython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import itkVectorPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkSizePython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkOffsetPython
import itkImageRegionPython
import ITKCommonBasePython
import rtkBackProjectionImageFilterPython
import rtkThreeDCircularProjectionGeometryPython
import rtkProjectionGeometryPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterBPython
import rtkCyclicDeformationImageFilterPython
import itkImageToImageFilterRTKPython
import itkImageRegionRTKPython
import itkImageRTKPython
import itkImageBaseRTKPython
import itkMatrixRTKPython
import itkCovariantVectorRTKPython
import itkPointRTKPython
import itkImageSourceRTKPython

def rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_New():
  return rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33.New()


def rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_New():
  return rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3.New()

class rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3(rtkFDKBackProjectionImageFilterPython.rtkFDKBackProjectionImageFilterIF3IF3):
    """Proxy of C++ rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_Pointer":
        """__New_orig__() -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_Pointer"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_Pointer":
        """Clone(rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3 self) -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_Pointer"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_Clone(self)


    def GetDeformation(self) -> "rtkCyclicDeformationImageFilterIF4IF3_Pointer":
        """GetDeformation(rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3 self) -> rtkCyclicDeformationImageFilterIF4IF3_Pointer"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_GetDeformation(self)


    def SetDeformation(self, _arg: 'rtkCyclicDeformationImageFilterIF4IF3') -> "void":
        """SetDeformation(rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3 self, rtkCyclicDeformationImageFilterIF4IF3 _arg)"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_SetDeformation(self, _arg)

    __swig_destroy__ = _rtkFDKWarpBackProjectionImageFilterPython.delete_rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3

    def cast(obj: 'itkLightObject') -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3 *":
        """cast(itkLightObject obj) -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3

        Create a new object of the class rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3.Clone = new_instancemethod(_rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_Clone, None, rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3)
rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3.GetDeformation = new_instancemethod(_rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_GetDeformation, None, rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3)
rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3.SetDeformation = new_instancemethod(_rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_SetDeformation, None, rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3)
rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_swigregister = _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_swigregister
rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_swigregister(rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3)

def rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3___New_orig__() -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_Pointer":
    """rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3___New_orig__() -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_Pointer"""
    return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3___New_orig__()

def rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_cast(obj: 'itkLightObject') -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3 *":
    """rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_cast(itkLightObject obj) -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3"""
    return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIF4IF3_cast(obj)

class rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33(rtkFDKBackProjectionImageFilterPython.rtkFDKBackProjectionImageFilterIF3IF3):
    """Proxy of C++ rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_Pointer":
        """__New_orig__() -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_Pointer"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_Pointer":
        """Clone(rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33 self) -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_Pointer"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_Clone(self)


    def GetDeformation(self) -> "rtkCyclicDeformationImageFilterIVF34IVF33_Pointer":
        """GetDeformation(rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33 self) -> rtkCyclicDeformationImageFilterIVF34IVF33_Pointer"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_GetDeformation(self)


    def SetDeformation(self, _arg: 'rtkCyclicDeformationImageFilterIVF34IVF33') -> "void":
        """SetDeformation(rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33 self, rtkCyclicDeformationImageFilterIVF34IVF33 _arg)"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_SetDeformation(self, _arg)

    __swig_destroy__ = _rtkFDKWarpBackProjectionImageFilterPython.delete_rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33

    def cast(obj: 'itkLightObject') -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33 *":
        """cast(itkLightObject obj) -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33"""
        return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33

        Create a new object of the class rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33.Clone = new_instancemethod(_rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_Clone, None, rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33)
rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33.GetDeformation = new_instancemethod(_rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_GetDeformation, None, rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33)
rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33.SetDeformation = new_instancemethod(_rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_SetDeformation, None, rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33)
rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_swigregister = _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_swigregister
rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_swigregister(rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33)

def rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33___New_orig__() -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_Pointer":
    """rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33___New_orig__() -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_Pointer"""
    return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33___New_orig__()

def rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_cast(obj: 'itkLightObject') -> "rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33 *":
    """rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_cast(itkLightObject obj) -> rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33"""
    return _rtkFDKWarpBackProjectionImageFilterPython.rtkFDKWarpBackProjectionImageFilterIF3IF3CDFIVF34IVF33_cast(obj)


def fdk_warp_back_projection_image_filter(*args, **kwargs):
    """Procedural interface for FDKWarpBackProjectionImageFilter"""
    import itk
    instance = itk.FDKWarpBackProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def fdk_warp_back_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.FDKWarpBackProjectionImageFilter, itkTemplate.itkTemplate):
        fdk_warp_back_projection_image_filter.__doc__ = itk.FDKWarpBackProjectionImageFilter.values()[0].__doc__
    else:
        fdk_warp_back_projection_image_filter.__doc__ = itk.FDKWarpBackProjectionImageFilter.__doc__




