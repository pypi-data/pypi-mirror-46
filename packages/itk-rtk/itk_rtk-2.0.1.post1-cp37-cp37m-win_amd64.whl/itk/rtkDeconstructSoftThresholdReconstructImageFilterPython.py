# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkDeconstructSoftThresholdReconstructImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkDeconstructSoftThresholdReconstructImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkDeconstructSoftThresholdReconstructImageFilterPython
            return _rtkDeconstructSoftThresholdReconstructImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkDeconstructSoftThresholdReconstructImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkDeconstructSoftThresholdReconstructImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkDeconstructSoftThresholdReconstructImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkPointPython
import itkFixedArrayPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkVectorPython
import itkRGBAPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkRGBPixelPython
import itkSymmetricSecondRankTensorPython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def rtkDeconstructSoftThresholdReconstructImageFilterIF3_New():
  return rtkDeconstructSoftThresholdReconstructImageFilterIF3.New()


def rtkDeconstructSoftThresholdReconstructImageFilterIF2_New():
  return rtkDeconstructSoftThresholdReconstructImageFilterIF2.New()

class rtkDeconstructSoftThresholdReconstructImageFilterIF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ rtkDeconstructSoftThresholdReconstructImageFilterIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkDeconstructSoftThresholdReconstructImageFilterIF2_Pointer":
        """__New_orig__() -> rtkDeconstructSoftThresholdReconstructImageFilterIF2_Pointer"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkDeconstructSoftThresholdReconstructImageFilterIF2_Pointer":
        """Clone(rtkDeconstructSoftThresholdReconstructImageFilterIF2 self) -> rtkDeconstructSoftThresholdReconstructImageFilterIF2_Pointer"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_Clone(self)


    def SetNumberOfLevels(self, levels: 'unsigned int') -> "void":
        """SetNumberOfLevels(rtkDeconstructSoftThresholdReconstructImageFilterIF2 self, unsigned int levels)"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_SetNumberOfLevels(self, levels)


    def GetOrder(self) -> "unsigned int":
        """GetOrder(rtkDeconstructSoftThresholdReconstructImageFilterIF2 self) -> unsigned int"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_GetOrder(self)


    def SetOrder(self, _arg: 'unsigned int const') -> "void":
        """SetOrder(rtkDeconstructSoftThresholdReconstructImageFilterIF2 self, unsigned int const _arg)"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_SetOrder(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(rtkDeconstructSoftThresholdReconstructImageFilterIF2 self) -> float"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_GetThreshold(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """SetThreshold(rtkDeconstructSoftThresholdReconstructImageFilterIF2 self, float const _arg)"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_SetThreshold(self, _arg)

    __swig_destroy__ = _rtkDeconstructSoftThresholdReconstructImageFilterPython.delete_rtkDeconstructSoftThresholdReconstructImageFilterIF2

    def cast(obj: 'itkLightObject') -> "rtkDeconstructSoftThresholdReconstructImageFilterIF2 *":
        """cast(itkLightObject obj) -> rtkDeconstructSoftThresholdReconstructImageFilterIF2"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkDeconstructSoftThresholdReconstructImageFilterIF2

        Create a new object of the class rtkDeconstructSoftThresholdReconstructImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDeconstructSoftThresholdReconstructImageFilterIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkDeconstructSoftThresholdReconstructImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkDeconstructSoftThresholdReconstructImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkDeconstructSoftThresholdReconstructImageFilterIF2.Clone = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_Clone, None, rtkDeconstructSoftThresholdReconstructImageFilterIF2)
rtkDeconstructSoftThresholdReconstructImageFilterIF2.SetNumberOfLevels = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_SetNumberOfLevels, None, rtkDeconstructSoftThresholdReconstructImageFilterIF2)
rtkDeconstructSoftThresholdReconstructImageFilterIF2.GetOrder = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_GetOrder, None, rtkDeconstructSoftThresholdReconstructImageFilterIF2)
rtkDeconstructSoftThresholdReconstructImageFilterIF2.SetOrder = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_SetOrder, None, rtkDeconstructSoftThresholdReconstructImageFilterIF2)
rtkDeconstructSoftThresholdReconstructImageFilterIF2.GetThreshold = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_GetThreshold, None, rtkDeconstructSoftThresholdReconstructImageFilterIF2)
rtkDeconstructSoftThresholdReconstructImageFilterIF2.SetThreshold = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_SetThreshold, None, rtkDeconstructSoftThresholdReconstructImageFilterIF2)
rtkDeconstructSoftThresholdReconstructImageFilterIF2_swigregister = _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_swigregister
rtkDeconstructSoftThresholdReconstructImageFilterIF2_swigregister(rtkDeconstructSoftThresholdReconstructImageFilterIF2)

def rtkDeconstructSoftThresholdReconstructImageFilterIF2___New_orig__() -> "rtkDeconstructSoftThresholdReconstructImageFilterIF2_Pointer":
    """rtkDeconstructSoftThresholdReconstructImageFilterIF2___New_orig__() -> rtkDeconstructSoftThresholdReconstructImageFilterIF2_Pointer"""
    return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2___New_orig__()

def rtkDeconstructSoftThresholdReconstructImageFilterIF2_cast(obj: 'itkLightObject') -> "rtkDeconstructSoftThresholdReconstructImageFilterIF2 *":
    """rtkDeconstructSoftThresholdReconstructImageFilterIF2_cast(itkLightObject obj) -> rtkDeconstructSoftThresholdReconstructImageFilterIF2"""
    return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF2_cast(obj)

class rtkDeconstructSoftThresholdReconstructImageFilterIF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ rtkDeconstructSoftThresholdReconstructImageFilterIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkDeconstructSoftThresholdReconstructImageFilterIF3_Pointer":
        """__New_orig__() -> rtkDeconstructSoftThresholdReconstructImageFilterIF3_Pointer"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkDeconstructSoftThresholdReconstructImageFilterIF3_Pointer":
        """Clone(rtkDeconstructSoftThresholdReconstructImageFilterIF3 self) -> rtkDeconstructSoftThresholdReconstructImageFilterIF3_Pointer"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_Clone(self)


    def SetNumberOfLevels(self, levels: 'unsigned int') -> "void":
        """SetNumberOfLevels(rtkDeconstructSoftThresholdReconstructImageFilterIF3 self, unsigned int levels)"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_SetNumberOfLevels(self, levels)


    def GetOrder(self) -> "unsigned int":
        """GetOrder(rtkDeconstructSoftThresholdReconstructImageFilterIF3 self) -> unsigned int"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_GetOrder(self)


    def SetOrder(self, _arg: 'unsigned int const') -> "void":
        """SetOrder(rtkDeconstructSoftThresholdReconstructImageFilterIF3 self, unsigned int const _arg)"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_SetOrder(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(rtkDeconstructSoftThresholdReconstructImageFilterIF3 self) -> float"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_GetThreshold(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """SetThreshold(rtkDeconstructSoftThresholdReconstructImageFilterIF3 self, float const _arg)"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_SetThreshold(self, _arg)

    __swig_destroy__ = _rtkDeconstructSoftThresholdReconstructImageFilterPython.delete_rtkDeconstructSoftThresholdReconstructImageFilterIF3

    def cast(obj: 'itkLightObject') -> "rtkDeconstructSoftThresholdReconstructImageFilterIF3 *":
        """cast(itkLightObject obj) -> rtkDeconstructSoftThresholdReconstructImageFilterIF3"""
        return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkDeconstructSoftThresholdReconstructImageFilterIF3

        Create a new object of the class rtkDeconstructSoftThresholdReconstructImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkDeconstructSoftThresholdReconstructImageFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkDeconstructSoftThresholdReconstructImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkDeconstructSoftThresholdReconstructImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkDeconstructSoftThresholdReconstructImageFilterIF3.Clone = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_Clone, None, rtkDeconstructSoftThresholdReconstructImageFilterIF3)
rtkDeconstructSoftThresholdReconstructImageFilterIF3.SetNumberOfLevels = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_SetNumberOfLevels, None, rtkDeconstructSoftThresholdReconstructImageFilterIF3)
rtkDeconstructSoftThresholdReconstructImageFilterIF3.GetOrder = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_GetOrder, None, rtkDeconstructSoftThresholdReconstructImageFilterIF3)
rtkDeconstructSoftThresholdReconstructImageFilterIF3.SetOrder = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_SetOrder, None, rtkDeconstructSoftThresholdReconstructImageFilterIF3)
rtkDeconstructSoftThresholdReconstructImageFilterIF3.GetThreshold = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_GetThreshold, None, rtkDeconstructSoftThresholdReconstructImageFilterIF3)
rtkDeconstructSoftThresholdReconstructImageFilterIF3.SetThreshold = new_instancemethod(_rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_SetThreshold, None, rtkDeconstructSoftThresholdReconstructImageFilterIF3)
rtkDeconstructSoftThresholdReconstructImageFilterIF3_swigregister = _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_swigregister
rtkDeconstructSoftThresholdReconstructImageFilterIF3_swigregister(rtkDeconstructSoftThresholdReconstructImageFilterIF3)

def rtkDeconstructSoftThresholdReconstructImageFilterIF3___New_orig__() -> "rtkDeconstructSoftThresholdReconstructImageFilterIF3_Pointer":
    """rtkDeconstructSoftThresholdReconstructImageFilterIF3___New_orig__() -> rtkDeconstructSoftThresholdReconstructImageFilterIF3_Pointer"""
    return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3___New_orig__()

def rtkDeconstructSoftThresholdReconstructImageFilterIF3_cast(obj: 'itkLightObject') -> "rtkDeconstructSoftThresholdReconstructImageFilterIF3 *":
    """rtkDeconstructSoftThresholdReconstructImageFilterIF3_cast(itkLightObject obj) -> rtkDeconstructSoftThresholdReconstructImageFilterIF3"""
    return _rtkDeconstructSoftThresholdReconstructImageFilterPython.rtkDeconstructSoftThresholdReconstructImageFilterIF3_cast(obj)


def deconstruct_soft_threshold_reconstruct_image_filter(*args, **kwargs):
    """Procedural interface for DeconstructSoftThresholdReconstructImageFilter"""
    import itk
    instance = itk.DeconstructSoftThresholdReconstructImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def deconstruct_soft_threshold_reconstruct_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.DeconstructSoftThresholdReconstructImageFilter, itkTemplate.itkTemplate):
        deconstruct_soft_threshold_reconstruct_image_filter.__doc__ = itk.DeconstructSoftThresholdReconstructImageFilter.values()[0].__doc__
    else:
        deconstruct_soft_threshold_reconstruct_image_filter.__doc__ = itk.DeconstructSoftThresholdReconstructImageFilter.__doc__




