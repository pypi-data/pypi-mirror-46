# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkSARTConeBeamReconstructionFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkSARTConeBeamReconstructionFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkSARTConeBeamReconstructionFilterPython
            return _rtkSARTConeBeamReconstructionFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkSARTConeBeamReconstructionFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkSARTConeBeamReconstructionFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkSARTConeBeamReconstructionFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import rtkThreeDCircularProjectionGeometryPython
import itkMatrixPython
import itkPointPython
import itkFixedArrayPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import rtkProjectionGeometryPython
import rtkIterativeConeBeamReconstructionFilterPython
import itkImageToImageFilterRTKPython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImagePython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourceRTKPython
import itkImageSourceCommonPython
import itkImageRTKPython
import itkImageBaseRTKPython
import itkPointRTKPython
import itkMatrixRTKPython
import itkCovariantVectorRTKPython
import itkImageRegionRTKPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import rtkBackProjectionImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageToImageFilterAPython
import rtkForwardProjectionImageFilterPython

def rtkSARTConeBeamReconstructionFilterIF3IF3_New():
  return rtkSARTConeBeamReconstructionFilterIF3IF3.New()

class rtkSARTConeBeamReconstructionFilterIF3IF3(rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3):
    """Proxy of C++ rtkSARTConeBeamReconstructionFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkSARTConeBeamReconstructionFilterIF3IF3_Pointer":
        """__New_orig__() -> rtkSARTConeBeamReconstructionFilterIF3IF3_Pointer"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkSARTConeBeamReconstructionFilterIF3IF3_Pointer":
        """Clone(rtkSARTConeBeamReconstructionFilterIF3IF3 self) -> rtkSARTConeBeamReconstructionFilterIF3IF3_Pointer"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_Clone(self)


    def GetModifiableGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableGeometry(rtkSARTConeBeamReconstructionFilterIF3IF3 self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetModifiableGeometry(self)


    def GetGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetGeometry(rtkSARTConeBeamReconstructionFilterIF3IF3 self) -> rtkThreeDCircularProjectionGeometry
        GetGeometry(rtkSARTConeBeamReconstructionFilterIF3IF3 self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetGeometry(self, *args)


    def SetGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetGeometry(rtkSARTConeBeamReconstructionFilterIF3IF3 self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetGeometry(self, _arg)


    def GetNumberOfIterations(self) -> "unsigned int":
        """GetNumberOfIterations(rtkSARTConeBeamReconstructionFilterIF3IF3 self) -> unsigned int"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetNumberOfIterations(self)


    def SetNumberOfIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfIterations(rtkSARTConeBeamReconstructionFilterIF3IF3 self, unsigned int const _arg)"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetNumberOfIterations(self, _arg)


    def GetNumberOfProjectionsPerSubset(self) -> "unsigned int":
        """GetNumberOfProjectionsPerSubset(rtkSARTConeBeamReconstructionFilterIF3IF3 self) -> unsigned int"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetNumberOfProjectionsPerSubset(self)


    def SetNumberOfProjectionsPerSubset(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfProjectionsPerSubset(rtkSARTConeBeamReconstructionFilterIF3IF3 self, unsigned int const _arg)"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetNumberOfProjectionsPerSubset(self, _arg)


    def GetLambda(self) -> "double":
        """GetLambda(rtkSARTConeBeamReconstructionFilterIF3IF3 self) -> double"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetLambda(self)


    def SetLambda(self, _arg: 'double const') -> "void":
        """SetLambda(rtkSARTConeBeamReconstructionFilterIF3IF3 self, double const _arg)"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetLambda(self, _arg)


    def GetEnforcePositivity(self) -> "bool":
        """GetEnforcePositivity(rtkSARTConeBeamReconstructionFilterIF3IF3 self) -> bool"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetEnforcePositivity(self)


    def SetEnforcePositivity(self, _arg: 'bool const') -> "void":
        """SetEnforcePositivity(rtkSARTConeBeamReconstructionFilterIF3IF3 self, bool const _arg)"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetEnforcePositivity(self, _arg)


    def SetGatingWeights(self, weights: 'vectorF') -> "void":
        """SetGatingWeights(rtkSARTConeBeamReconstructionFilterIF3IF3 self, vectorF weights)"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetGatingWeights(self, weights)


    def SetDisableDisplacedDetectorFilter(self, _arg: 'bool const') -> "void":
        """SetDisableDisplacedDetectorFilter(rtkSARTConeBeamReconstructionFilterIF3IF3 self, bool const _arg)"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetDisableDisplacedDetectorFilter(self, _arg)


    def GetDisableDisplacedDetectorFilter(self) -> "bool":
        """GetDisableDisplacedDetectorFilter(rtkSARTConeBeamReconstructionFilterIF3IF3 self) -> bool"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetDisableDisplacedDetectorFilter(self)

    __swig_destroy__ = _rtkSARTConeBeamReconstructionFilterPython.delete_rtkSARTConeBeamReconstructionFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "rtkSARTConeBeamReconstructionFilterIF3IF3 *":
        """cast(itkLightObject obj) -> rtkSARTConeBeamReconstructionFilterIF3IF3"""
        return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkSARTConeBeamReconstructionFilterIF3IF3

        Create a new object of the class rtkSARTConeBeamReconstructionFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkSARTConeBeamReconstructionFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkSARTConeBeamReconstructionFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkSARTConeBeamReconstructionFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkSARTConeBeamReconstructionFilterIF3IF3.Clone = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_Clone, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.GetModifiableGeometry = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetModifiableGeometry, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.GetGeometry = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetGeometry, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.SetGeometry = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetGeometry, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.GetNumberOfIterations = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetNumberOfIterations, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.SetNumberOfIterations = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetNumberOfIterations, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.GetNumberOfProjectionsPerSubset = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetNumberOfProjectionsPerSubset, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.SetNumberOfProjectionsPerSubset = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetNumberOfProjectionsPerSubset, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.GetLambda = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetLambda, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.SetLambda = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetLambda, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.GetEnforcePositivity = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetEnforcePositivity, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.SetEnforcePositivity = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetEnforcePositivity, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.SetGatingWeights = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetGatingWeights, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.SetDisableDisplacedDetectorFilter = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_SetDisableDisplacedDetectorFilter, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3.GetDisableDisplacedDetectorFilter = new_instancemethod(_rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_GetDisableDisplacedDetectorFilter, None, rtkSARTConeBeamReconstructionFilterIF3IF3)
rtkSARTConeBeamReconstructionFilterIF3IF3_swigregister = _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_swigregister
rtkSARTConeBeamReconstructionFilterIF3IF3_swigregister(rtkSARTConeBeamReconstructionFilterIF3IF3)

def rtkSARTConeBeamReconstructionFilterIF3IF3___New_orig__() -> "rtkSARTConeBeamReconstructionFilterIF3IF3_Pointer":
    """rtkSARTConeBeamReconstructionFilterIF3IF3___New_orig__() -> rtkSARTConeBeamReconstructionFilterIF3IF3_Pointer"""
    return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3___New_orig__()

def rtkSARTConeBeamReconstructionFilterIF3IF3_cast(obj: 'itkLightObject') -> "rtkSARTConeBeamReconstructionFilterIF3IF3 *":
    """rtkSARTConeBeamReconstructionFilterIF3IF3_cast(itkLightObject obj) -> rtkSARTConeBeamReconstructionFilterIF3IF3"""
    return _rtkSARTConeBeamReconstructionFilterPython.rtkSARTConeBeamReconstructionFilterIF3IF3_cast(obj)


def sart_cone_beam_reconstruction_filter(*args, **kwargs):
    """Procedural interface for SARTConeBeamReconstructionFilter"""
    import itk
    instance = itk.SARTConeBeamReconstructionFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def sart_cone_beam_reconstruction_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.SARTConeBeamReconstructionFilter, itkTemplate.itkTemplate):
        sart_cone_beam_reconstruction_filter.__doc__ = itk.SARTConeBeamReconstructionFilter.values()[0].__doc__
    else:
        sart_cone_beam_reconstruction_filter.__doc__ = itk.SARTConeBeamReconstructionFilter.__doc__




