# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkIterativeFDKConeBeamReconstructionFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkIterativeFDKConeBeamReconstructionFilterPython', [dirname(__file__)])
        except ImportError:
            import _rtkIterativeFDKConeBeamReconstructionFilterPython
            return _rtkIterativeFDKConeBeamReconstructionFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkIterativeFDKConeBeamReconstructionFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkIterativeFDKConeBeamReconstructionFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkIterativeFDKConeBeamReconstructionFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import rtkThreeDCircularProjectionGeometryPython
import itkMatrixPython
import itkPointPython
import itkFixedArrayPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import rtkProjectionGeometryPython
import rtkIterativeConeBeamReconstructionFilterPython
import itkImageToImageFilterRTKPython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImagePython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourceRTKPython
import itkImageSourceCommonPython
import itkImageRTKPython
import itkImageBaseRTKPython
import itkPointRTKPython
import itkMatrixRTKPython
import itkCovariantVectorRTKPython
import itkImageRegionRTKPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import rtkBackProjectionImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageToImageFilterAPython
import rtkForwardProjectionImageFilterPython

def rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_New():
  return rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.New()

class rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D(rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIF3):
    """Proxy of C++ rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_Pointer":
        """__New_orig__() -> rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_Pointer"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_Pointer":
        """Clone(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_Pointer"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_Clone(self)


    def GetModifiableGeometry(self) -> "rtkThreeDCircularProjectionGeometry *":
        """GetModifiableGeometry(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetModifiableGeometry(self)


    def GetGeometry(self, *args) -> "rtkThreeDCircularProjectionGeometry *":
        """
        GetGeometry(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> rtkThreeDCircularProjectionGeometry
        GetGeometry(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetGeometry(self, *args)


    def SetGeometry(self, _arg: 'rtkThreeDCircularProjectionGeometry') -> "void":
        """SetGeometry(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self, rtkThreeDCircularProjectionGeometry _arg)"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetGeometry(self, _arg)


    def GetNumberOfIterations(self) -> "unsigned int":
        """GetNumberOfIterations(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> unsigned int"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetNumberOfIterations(self)


    def SetNumberOfIterations(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfIterations(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self, unsigned int const _arg)"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetNumberOfIterations(self, _arg)


    def GetLambda(self) -> "double":
        """GetLambda(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> double"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetLambda(self)


    def SetLambda(self, _arg: 'double const') -> "void":
        """SetLambda(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self, double const _arg)"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetLambda(self, _arg)


    def GetEnforcePositivity(self) -> "bool":
        """GetEnforcePositivity(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> bool"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetEnforcePositivity(self)


    def SetEnforcePositivity(self, _arg: 'bool const') -> "void":
        """SetEnforcePositivity(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self, bool const _arg)"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetEnforcePositivity(self, _arg)


    def GetTruncationCorrection(self) -> "double":
        """GetTruncationCorrection(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> double"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetTruncationCorrection(self)


    def SetTruncationCorrection(self, _arg: 'double const') -> "void":
        """SetTruncationCorrection(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self, double const _arg)"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetTruncationCorrection(self, _arg)


    def GetHannCutFrequency(self) -> "double":
        """GetHannCutFrequency(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> double"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetHannCutFrequency(self)


    def SetHannCutFrequency(self, _arg: 'double const') -> "void":
        """SetHannCutFrequency(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self, double const _arg)"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetHannCutFrequency(self, _arg)


    def GetHannCutFrequencyY(self) -> "double":
        """GetHannCutFrequencyY(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> double"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetHannCutFrequencyY(self)


    def SetHannCutFrequencyY(self, _arg: 'double const') -> "void":
        """SetHannCutFrequencyY(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self, double const _arg)"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetHannCutFrequencyY(self, _arg)


    def GetProjectionSubsetSize(self) -> "unsigned int":
        """GetProjectionSubsetSize(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> unsigned int"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetProjectionSubsetSize(self)


    def SetProjectionSubsetSize(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionSubsetSize(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self, unsigned int const _arg)"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetProjectionSubsetSize(self, _arg)


    def SetDisableDisplacedDetectorFilter(self, _arg: 'bool const') -> "void":
        """SetDisableDisplacedDetectorFilter(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self, bool const _arg)"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetDisableDisplacedDetectorFilter(self, _arg)


    def GetDisableDisplacedDetectorFilter(self) -> "bool":
        """GetDisableDisplacedDetectorFilter(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D self) -> bool"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetDisableDisplacedDetectorFilter(self)

    __swig_destroy__ = _rtkIterativeFDKConeBeamReconstructionFilterPython.delete_rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D

    def cast(obj: 'itkLightObject') -> "rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D *":
        """cast(itkLightObject obj) -> rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D"""
        return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D

        Create a new object of the class rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.Clone = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_Clone, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetModifiableGeometry = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetModifiableGeometry, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetGeometry = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetGeometry, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.SetGeometry = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetGeometry, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetNumberOfIterations = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetNumberOfIterations, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.SetNumberOfIterations = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetNumberOfIterations, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetLambda = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetLambda, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.SetLambda = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetLambda, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetEnforcePositivity = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetEnforcePositivity, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.SetEnforcePositivity = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetEnforcePositivity, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetTruncationCorrection = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetTruncationCorrection, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.SetTruncationCorrection = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetTruncationCorrection, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetHannCutFrequency = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetHannCutFrequency, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.SetHannCutFrequency = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetHannCutFrequency, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetHannCutFrequencyY = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetHannCutFrequencyY, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.SetHannCutFrequencyY = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetHannCutFrequencyY, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetProjectionSubsetSize = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetProjectionSubsetSize, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.SetProjectionSubsetSize = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetProjectionSubsetSize, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.SetDisableDisplacedDetectorFilter = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_SetDisableDisplacedDetectorFilter, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D.GetDisableDisplacedDetectorFilter = new_instancemethod(_rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_GetDisableDisplacedDetectorFilter, None, rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_swigregister = _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_swigregister
rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_swigregister(rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D)

def rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D___New_orig__() -> "rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_Pointer":
    """rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D___New_orig__() -> rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_Pointer"""
    return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D___New_orig__()

def rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_cast(obj: 'itkLightObject') -> "rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D *":
    """rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_cast(itkLightObject obj) -> rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D"""
    return _rtkIterativeFDKConeBeamReconstructionFilterPython.rtkIterativeFDKConeBeamReconstructionFilterIF3IF3D_cast(obj)


def iterative_fdk_cone_beam_reconstruction_filter(*args, **kwargs):
    """Procedural interface for IterativeFDKConeBeamReconstructionFilter"""
    import itk
    instance = itk.IterativeFDKConeBeamReconstructionFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def iterative_fdk_cone_beam_reconstruction_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.IterativeFDKConeBeamReconstructionFilter, itkTemplate.itkTemplate):
        iterative_fdk_cone_beam_reconstruction_filter.__doc__ = itk.IterativeFDKConeBeamReconstructionFilter.values()[0].__doc__
    else:
        iterative_fdk_cone_beam_reconstruction_filter.__doc__ = itk.IterativeFDKConeBeamReconstructionFilter.__doc__




