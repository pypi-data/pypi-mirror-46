# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rtkThreeDCircularProjectionGeometryXMLFileReaderPython', [dirname(__file__)])
        except ImportError:
            import _rtkThreeDCircularProjectionGeometryXMLFileReaderPython
            return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython
        if fp is not None:
            try:
                _mod = imp.load_module('_rtkThreeDCircularProjectionGeometryXMLFileReaderPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rtkThreeDCircularProjectionGeometryXMLFileReaderPython = swig_import_helper()
    del swig_import_helper
else:
    import _rtkThreeDCircularProjectionGeometryXMLFileReaderPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import rtkThreeDCircularProjectionGeometryPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkPointPython
import rtkProjectionGeometryPython
import ITKCommonBasePython

def rtkThreeDCircularProjectionGeometryXMLFileReader_New():
  return rtkThreeDCircularProjectionGeometryXMLFileReader.New()

class itkXMLFile(ITKCommonBasePython.itkLightProcessObject):
    """Proxy of C++ itkXMLFile class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFilename(self, *args):
        """
        SetFilename(itkXMLFile self, char const * _arg)
        SetFilename(itkXMLFile self, std::string const & _arg)
        """
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_SetFilename(self, *args)


    def GetFilename(self):
        """GetFilename(itkXMLFile self) -> char const *"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_GetFilename(self)


    def CanReadFile(self, name):
        """CanReadFile(itkXMLFile self, char const * name) -> int"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_CanReadFile(self, name)


    def GenerateOutputInformation(self):
        """GenerateOutputInformation(itkXMLFile self)"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_GenerateOutputInformation(self)


    def StartElement(self, name, atts):
        """StartElement(itkXMLFile self, char const * name, char const ** atts)"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_StartElement(self, name, atts)


    def EndElement(self, name):
        """EndElement(itkXMLFile self, char const * name)"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_EndElement(self, name)


    def CharacterDataHandler(self, inData, inLength):
        """CharacterDataHandler(itkXMLFile self, char const * inData, int inLength)"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_CharacterDataHandler(self, inData, inLength)

itkXMLFile.SetFilename = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_SetFilename, None, itkXMLFile)
itkXMLFile.GetFilename = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_GetFilename, None, itkXMLFile)
itkXMLFile.CanReadFile = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_CanReadFile, None, itkXMLFile)
itkXMLFile.GenerateOutputInformation = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_GenerateOutputInformation, None, itkXMLFile)
itkXMLFile.StartElement = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_StartElement, None, itkXMLFile)
itkXMLFile.EndElement = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_EndElement, None, itkXMLFile)
itkXMLFile.CharacterDataHandler = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_CharacterDataHandler, None, itkXMLFile)
itkXMLFile_swigregister = _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLFile_swigregister
itkXMLFile_swigregister(itkXMLFile)

class itkXMLReader3DCPG(itkXMLFile):
    """Proxy of C++ itkXMLReader3DCPG class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetOutputObject(self, obj):
        """SetOutputObject(itkXMLReader3DCPG self, rtkThreeDCircularProjectionGeometry obj)"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLReader3DCPG_SetOutputObject(self, obj)


    def GetOutputObject(self):
        """GetOutputObject(itkXMLReader3DCPG self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLReader3DCPG_GetOutputObject(self)

itkXMLReader3DCPG.SetOutputObject = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLReader3DCPG_SetOutputObject, None, itkXMLReader3DCPG)
itkXMLReader3DCPG.GetOutputObject = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLReader3DCPG_GetOutputObject, None, itkXMLReader3DCPG)
itkXMLReader3DCPG_swigregister = _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.itkXMLReader3DCPG_swigregister
itkXMLReader3DCPG_swigregister(itkXMLReader3DCPG)

class rtkThreeDCircularProjectionGeometryXMLFileReader(itkXMLReader3DCPG):
    """Proxy of C++ rtkThreeDCircularProjectionGeometryXMLFileReader class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> rtkThreeDCircularProjectionGeometryXMLFileReader_Pointer"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(rtkThreeDCircularProjectionGeometryXMLFileReader self) -> rtkThreeDCircularProjectionGeometryXMLFileReader_Pointer"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader_Clone(self)


    def GetModifiableGeometry(self):
        """GetModifiableGeometry(rtkThreeDCircularProjectionGeometryXMLFileReader self) -> rtkThreeDCircularProjectionGeometry"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader_GetModifiableGeometry(self)


    def GetGeometry(self, *args):
        """
        GetGeometry(rtkThreeDCircularProjectionGeometryXMLFileReader self) -> rtkThreeDCircularProjectionGeometry
        GetGeometry(rtkThreeDCircularProjectionGeometryXMLFileReader self) -> rtkThreeDCircularProjectionGeometry
        """
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader_GetGeometry(self, *args)

    __swig_destroy__ = _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.delete_rtkThreeDCircularProjectionGeometryXMLFileReader

    def cast(obj):
        """cast(itkLightObject obj) -> rtkThreeDCircularProjectionGeometryXMLFileReader"""
        return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> rtkThreeDCircularProjectionGeometryXMLFileReader

        Create a new object of the class rtkThreeDCircularProjectionGeometryXMLFileReader and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkThreeDCircularProjectionGeometryXMLFileReader.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = rtkThreeDCircularProjectionGeometryXMLFileReader.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = rtkThreeDCircularProjectionGeometryXMLFileReader.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

rtkThreeDCircularProjectionGeometryXMLFileReader.Clone = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader_Clone, None, rtkThreeDCircularProjectionGeometryXMLFileReader)
rtkThreeDCircularProjectionGeometryXMLFileReader.GetModifiableGeometry = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader_GetModifiableGeometry, None, rtkThreeDCircularProjectionGeometryXMLFileReader)
rtkThreeDCircularProjectionGeometryXMLFileReader.GetGeometry = new_instancemethod(_rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader_GetGeometry, None, rtkThreeDCircularProjectionGeometryXMLFileReader)
rtkThreeDCircularProjectionGeometryXMLFileReader_swigregister = _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader_swigregister
rtkThreeDCircularProjectionGeometryXMLFileReader_swigregister(rtkThreeDCircularProjectionGeometryXMLFileReader)

def rtkThreeDCircularProjectionGeometryXMLFileReader___New_orig__():
    """rtkThreeDCircularProjectionGeometryXMLFileReader___New_orig__() -> rtkThreeDCircularProjectionGeometryXMLFileReader_Pointer"""
    return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader___New_orig__()

def rtkThreeDCircularProjectionGeometryXMLFileReader_cast(obj):
    """rtkThreeDCircularProjectionGeometryXMLFileReader_cast(itkLightObject obj) -> rtkThreeDCircularProjectionGeometryXMLFileReader"""
    return _rtkThreeDCircularProjectionGeometryXMLFileReaderPython.rtkThreeDCircularProjectionGeometryXMLFileReader_cast(obj)



