# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImageRegionRTKPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageRegionRTKPython', [dirname(__file__)])
        except ImportError:
            import _itkImageRegionRTKPython
            return _itkImageRegionRTKPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageRegionRTKPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageRegionRTKPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageRegionRTKPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkIndexPython
import itkOffsetPython
import itkSizePython
import pyBasePython
import ITKCommonBasePython
class vectoritkImageRegion1(object):
    """Proxy of C++ std::vector<(itkImageRegion1)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(vectoritkImageRegion1 self) -> SwigPyIterator"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(vectoritkImageRegion1 self) -> bool"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1___nonzero__(self)


    def __bool__(self):
        """__bool__(vectoritkImageRegion1 self) -> bool"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1___bool__(self)


    def __len__(self):
        """__len__(vectoritkImageRegion1 self) -> std::vector< itkImageRegion1 >::size_type"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::difference_type i, std::vector< itkImageRegion1 >::difference_type j) -> vectoritkImageRegion1"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::difference_type i, std::vector< itkImageRegion1 >::difference_type j)
        __setslice__(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::difference_type i, std::vector< itkImageRegion1 >::difference_type j, vectoritkImageRegion1 v)
        """
        return _itkImageRegionRTKPython.vectoritkImageRegion1___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::difference_type i, std::vector< itkImageRegion1 >::difference_type j)"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::difference_type i)
        __delitem__(vectoritkImageRegion1 self, PySliceObject * slice)
        """
        return _itkImageRegionRTKPython.vectoritkImageRegion1___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(vectoritkImageRegion1 self, PySliceObject * slice) -> vectoritkImageRegion1
        __getitem__(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::difference_type i) -> itkImageRegion1
        """
        return _itkImageRegionRTKPython.vectoritkImageRegion1___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(vectoritkImageRegion1 self, PySliceObject * slice, vectoritkImageRegion1 v)
        __setitem__(vectoritkImageRegion1 self, PySliceObject * slice)
        __setitem__(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::difference_type i, itkImageRegion1 x)
        """
        return _itkImageRegionRTKPython.vectoritkImageRegion1___setitem__(self, *args)


    def pop(self):
        """pop(vectoritkImageRegion1 self) -> itkImageRegion1"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_pop(self)


    def append(self, x):
        """append(vectoritkImageRegion1 self, itkImageRegion1 x)"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_append(self, x)


    def empty(self):
        """empty(vectoritkImageRegion1 self) -> bool"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_empty(self)


    def size(self):
        """size(vectoritkImageRegion1 self) -> std::vector< itkImageRegion1 >::size_type"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_size(self)


    def swap(self, v):
        """swap(vectoritkImageRegion1 self, vectoritkImageRegion1 v)"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_swap(self, v)


    def begin(self):
        """begin(vectoritkImageRegion1 self) -> std::vector< itkImageRegion1 >::iterator"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_begin(self)


    def end(self):
        """end(vectoritkImageRegion1 self) -> std::vector< itkImageRegion1 >::iterator"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_end(self)


    def rbegin(self):
        """rbegin(vectoritkImageRegion1 self) -> std::vector< itkImageRegion1 >::reverse_iterator"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_rbegin(self)


    def rend(self):
        """rend(vectoritkImageRegion1 self) -> std::vector< itkImageRegion1 >::reverse_iterator"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_rend(self)


    def clear(self):
        """clear(vectoritkImageRegion1 self)"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_clear(self)


    def get_allocator(self):
        """get_allocator(vectoritkImageRegion1 self) -> std::vector< itkImageRegion1 >::allocator_type"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_get_allocator(self)


    def pop_back(self):
        """pop_back(vectoritkImageRegion1 self)"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_pop_back(self)


    def erase(self, *args):
        """
        erase(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::iterator pos) -> std::vector< itkImageRegion1 >::iterator
        erase(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::iterator first, std::vector< itkImageRegion1 >::iterator last) -> std::vector< itkImageRegion1 >::iterator
        """
        return _itkImageRegionRTKPython.vectoritkImageRegion1_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(itkImageRegion1)> self) -> vectoritkImageRegion1
        __init__(std::vector<(itkImageRegion1)> self, vectoritkImageRegion1 arg2) -> vectoritkImageRegion1
        __init__(std::vector<(itkImageRegion1)> self, std::vector< itkImageRegion1 >::size_type size) -> vectoritkImageRegion1
        __init__(std::vector<(itkImageRegion1)> self, std::vector< itkImageRegion1 >::size_type size, itkImageRegion1 value) -> vectoritkImageRegion1
        """
        _itkImageRegionRTKPython.vectoritkImageRegion1_swiginit(self, _itkImageRegionRTKPython.new_vectoritkImageRegion1(*args))

    def push_back(self, x):
        """push_back(vectoritkImageRegion1 self, itkImageRegion1 x)"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_push_back(self, x)


    def front(self):
        """front(vectoritkImageRegion1 self) -> itkImageRegion1"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_front(self)


    def back(self):
        """back(vectoritkImageRegion1 self) -> itkImageRegion1"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_back(self)


    def assign(self, n, x):
        """assign(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::size_type n, itkImageRegion1 x)"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_assign(self, n, x)


    def resize(self, *args):
        """
        resize(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::size_type new_size)
        resize(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::size_type new_size, itkImageRegion1 x)
        """
        return _itkImageRegionRTKPython.vectoritkImageRegion1_resize(self, *args)


    def insert(self, *args):
        """
        insert(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::iterator pos, itkImageRegion1 x) -> std::vector< itkImageRegion1 >::iterator
        insert(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::iterator pos, std::vector< itkImageRegion1 >::size_type n, itkImageRegion1 x)
        """
        return _itkImageRegionRTKPython.vectoritkImageRegion1_insert(self, *args)


    def reserve(self, n):
        """reserve(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::size_type n)"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_reserve(self, n)


    def capacity(self):
        """capacity(vectoritkImageRegion1 self) -> std::vector< itkImageRegion1 >::size_type"""
        return _itkImageRegionRTKPython.vectoritkImageRegion1_capacity(self)

    __swig_destroy__ = _itkImageRegionRTKPython.delete_vectoritkImageRegion1
vectoritkImageRegion1.iterator = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_iterator, None, vectoritkImageRegion1)
vectoritkImageRegion1.__nonzero__ = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1___nonzero__, None, vectoritkImageRegion1)
vectoritkImageRegion1.__bool__ = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1___bool__, None, vectoritkImageRegion1)
vectoritkImageRegion1.__len__ = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1___len__, None, vectoritkImageRegion1)
vectoritkImageRegion1.__getslice__ = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1___getslice__, None, vectoritkImageRegion1)
vectoritkImageRegion1.__setslice__ = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1___setslice__, None, vectoritkImageRegion1)
vectoritkImageRegion1.__delslice__ = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1___delslice__, None, vectoritkImageRegion1)
vectoritkImageRegion1.__delitem__ = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1___delitem__, None, vectoritkImageRegion1)
vectoritkImageRegion1.__getitem__ = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1___getitem__, None, vectoritkImageRegion1)
vectoritkImageRegion1.__setitem__ = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1___setitem__, None, vectoritkImageRegion1)
vectoritkImageRegion1.pop = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_pop, None, vectoritkImageRegion1)
vectoritkImageRegion1.append = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_append, None, vectoritkImageRegion1)
vectoritkImageRegion1.empty = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_empty, None, vectoritkImageRegion1)
vectoritkImageRegion1.size = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_size, None, vectoritkImageRegion1)
vectoritkImageRegion1.swap = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_swap, None, vectoritkImageRegion1)
vectoritkImageRegion1.begin = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_begin, None, vectoritkImageRegion1)
vectoritkImageRegion1.end = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_end, None, vectoritkImageRegion1)
vectoritkImageRegion1.rbegin = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_rbegin, None, vectoritkImageRegion1)
vectoritkImageRegion1.rend = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_rend, None, vectoritkImageRegion1)
vectoritkImageRegion1.clear = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_clear, None, vectoritkImageRegion1)
vectoritkImageRegion1.get_allocator = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_get_allocator, None, vectoritkImageRegion1)
vectoritkImageRegion1.pop_back = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_pop_back, None, vectoritkImageRegion1)
vectoritkImageRegion1.erase = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_erase, None, vectoritkImageRegion1)
vectoritkImageRegion1.push_back = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_push_back, None, vectoritkImageRegion1)
vectoritkImageRegion1.front = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_front, None, vectoritkImageRegion1)
vectoritkImageRegion1.back = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_back, None, vectoritkImageRegion1)
vectoritkImageRegion1.assign = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_assign, None, vectoritkImageRegion1)
vectoritkImageRegion1.resize = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_resize, None, vectoritkImageRegion1)
vectoritkImageRegion1.insert = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_insert, None, vectoritkImageRegion1)
vectoritkImageRegion1.reserve = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_reserve, None, vectoritkImageRegion1)
vectoritkImageRegion1.capacity = new_instancemethod(_itkImageRegionRTKPython.vectoritkImageRegion1_capacity, None, vectoritkImageRegion1)
vectoritkImageRegion1_swigregister = _itkImageRegionRTKPython.vectoritkImageRegion1_swigregister
vectoritkImageRegion1_swigregister(vectoritkImageRegion1)

class itkImageRegion1(ITKCommonBasePython.itkRegion):
    """Proxy of C++ itkImageRegion1 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def GetImageDimension():
        """GetImageDimension() -> unsigned int"""
        return _itkImageRegionRTKPython.itkImageRegion1_GetImageDimension()

    GetImageDimension = staticmethod(GetImageDimension)
    __swig_destroy__ = _itkImageRegionRTKPython.delete_itkImageRegion1

    def __init__(self, *args):
        """
        __init__(itkImageRegion1 self) -> itkImageRegion1
        __init__(itkImageRegion1 self, itkImageRegion1 arg0) -> itkImageRegion1
        __init__(itkImageRegion1 self, itkIndex1 index, itkSize1 size) -> itkImageRegion1
        __init__(itkImageRegion1 self, itkSize1 size) -> itkImageRegion1
        """
        _itkImageRegionRTKPython.itkImageRegion1_swiginit(self, _itkImageRegionRTKPython.new_itkImageRegion1(*args))

    def GetModifiableIndex(self):
        """GetModifiableIndex(itkImageRegion1 self) -> itkIndex1"""
        return _itkImageRegionRTKPython.itkImageRegion1_GetModifiableIndex(self)


    def GetModifiableSize(self):
        """GetModifiableSize(itkImageRegion1 self) -> itkSize1"""
        return _itkImageRegionRTKPython.itkImageRegion1_GetModifiableSize(self)


    def SetSize(self, *args):
        """
        SetSize(itkImageRegion1 self, itkSize1 size)
        SetSize(itkImageRegion1 self, unsigned int i, unsigned long sze)
        """
        return _itkImageRegionRTKPython.itkImageRegion1_SetSize(self, *args)


    def GetSize(self, *args):
        """
        GetSize(itkImageRegion1 self) -> itkSize1
        GetSize(itkImageRegion1 self, unsigned int i) -> unsigned long
        """
        return _itkImageRegionRTKPython.itkImageRegion1_GetSize(self, *args)


    def SetIndex(self, *args):
        """
        SetIndex(itkImageRegion1 self, itkIndex1 index)
        SetIndex(itkImageRegion1 self, unsigned int i, long sze)
        """
        return _itkImageRegionRTKPython.itkImageRegion1_SetIndex(self, *args)


    def GetIndex(self, *args):
        """
        GetIndex(itkImageRegion1 self) -> itkIndex1
        GetIndex(itkImageRegion1 self, unsigned int i) -> long
        """
        return _itkImageRegionRTKPython.itkImageRegion1_GetIndex(self, *args)


    def GetUpperIndex(self):
        """GetUpperIndex(itkImageRegion1 self) -> itkIndex1"""
        return _itkImageRegionRTKPython.itkImageRegion1_GetUpperIndex(self)


    def SetUpperIndex(self, idx):
        """SetUpperIndex(itkImageRegion1 self, itkIndex1 idx)"""
        return _itkImageRegionRTKPython.itkImageRegion1_SetUpperIndex(self, idx)


    def ComputeOffsetTable(self, offsetTable):
        """ComputeOffsetTable(itkImageRegion1 self, long * offsetTable)"""
        return _itkImageRegionRTKPython.itkImageRegion1_ComputeOffsetTable(self, offsetTable)


    def __eq__(self, region):
        """__eq__(itkImageRegion1 self, itkImageRegion1 region) -> bool"""
        return _itkImageRegionRTKPython.itkImageRegion1___eq__(self, region)


    def __ne__(self, region):
        """__ne__(itkImageRegion1 self, itkImageRegion1 region) -> bool"""
        return _itkImageRegionRTKPython.itkImageRegion1___ne__(self, region)


    def IsInside(self, *args):
        """
        IsInside(itkImageRegion1 self, itkIndex1 index) -> bool
        IsInside(itkImageRegion1 self, itkImageRegion1 region) -> bool
        """
        return _itkImageRegionRTKPython.itkImageRegion1_IsInside(self, *args)


    def GetNumberOfPixels(self):
        """GetNumberOfPixels(itkImageRegion1 self) -> unsigned long"""
        return _itkImageRegionRTKPython.itkImageRegion1_GetNumberOfPixels(self)


    def PadByRadius(self, *args):
        """
        PadByRadius(itkImageRegion1 self, long radius)
        PadByRadius(itkImageRegion1 self, long const * radius)
        PadByRadius(itkImageRegion1 self, itkSize1 radius)
        """
        return _itkImageRegionRTKPython.itkImageRegion1_PadByRadius(self, *args)


    def ShrinkByRadius(self, *args):
        """
        ShrinkByRadius(itkImageRegion1 self, long radius) -> bool
        ShrinkByRadius(itkImageRegion1 self, long const * radius) -> bool
        ShrinkByRadius(itkImageRegion1 self, itkSize1 radius) -> bool
        """
        return _itkImageRegionRTKPython.itkImageRegion1_ShrinkByRadius(self, *args)


    def Crop(self, region):
        """Crop(itkImageRegion1 self, itkImageRegion1 region) -> bool"""
        return _itkImageRegionRTKPython.itkImageRegion1_Crop(self, region)


    def Slice(self, dim):
        """Slice(itkImageRegion1 self, unsigned int const dim) -> itkImageRegion1"""
        return _itkImageRegionRTKPython.itkImageRegion1_Slice(self, dim)


    def __repr__(self):
        """__repr__(itkImageRegion1 self) -> std::string"""
        return _itkImageRegionRTKPython.itkImageRegion1___repr__(self)

itkImageRegion1.GetModifiableIndex = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_GetModifiableIndex, None, itkImageRegion1)
itkImageRegion1.GetModifiableSize = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_GetModifiableSize, None, itkImageRegion1)
itkImageRegion1.SetSize = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_SetSize, None, itkImageRegion1)
itkImageRegion1.GetSize = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_GetSize, None, itkImageRegion1)
itkImageRegion1.SetIndex = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_SetIndex, None, itkImageRegion1)
itkImageRegion1.GetIndex = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_GetIndex, None, itkImageRegion1)
itkImageRegion1.GetUpperIndex = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_GetUpperIndex, None, itkImageRegion1)
itkImageRegion1.SetUpperIndex = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_SetUpperIndex, None, itkImageRegion1)
itkImageRegion1.ComputeOffsetTable = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_ComputeOffsetTable, None, itkImageRegion1)
itkImageRegion1.__eq__ = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1___eq__, None, itkImageRegion1)
itkImageRegion1.__ne__ = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1___ne__, None, itkImageRegion1)
itkImageRegion1.IsInside = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_IsInside, None, itkImageRegion1)
itkImageRegion1.GetNumberOfPixels = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_GetNumberOfPixels, None, itkImageRegion1)
itkImageRegion1.PadByRadius = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_PadByRadius, None, itkImageRegion1)
itkImageRegion1.ShrinkByRadius = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_ShrinkByRadius, None, itkImageRegion1)
itkImageRegion1.Crop = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_Crop, None, itkImageRegion1)
itkImageRegion1.Slice = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1_Slice, None, itkImageRegion1)
itkImageRegion1.__repr__ = new_instancemethod(_itkImageRegionRTKPython.itkImageRegion1___repr__, None, itkImageRegion1)
itkImageRegion1_swigregister = _itkImageRegionRTKPython.itkImageRegion1_swigregister
itkImageRegion1_swigregister(itkImageRegion1)

def itkImageRegion1_GetImageDimension():
    """itkImageRegion1_GetImageDimension() -> unsigned int"""
    return _itkImageRegionRTKPython.itkImageRegion1_GetImageDimension()



