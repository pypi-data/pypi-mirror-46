Sprint 1: Create MVP Modules with Basic functionality (Done)
    - Build a module to parse the different components within the TLE. (Done)
    - Build a module to that will infer additional orbital elements from
      the parsed TLE information.(Done)
    - Build a module that uses the orbital information to plot the orbit around
      a sphere. (Done)
    - Create project README.md (Done)

Sprint 2: Optimize and Improve on the Basic Modules (Done)
    - Create a dictionary with a few example satellites to test.(Done)
    - Add print functionality to the TLE parsing, and the Draw orbit functions. (Done)
    - Optimize the 3D UI. (Done)
    - Start on a Document that explains the current functions in relation to
      orbital mechanical concepts. (Done)

Sprint 3: Build out Analytics Capabilities
    - Create & Release beta version of PyPi (Done)
    - Create functions that find each of the individual components in a TLE.(Done)
        + Need to fix logic on the scientific_notation_conversion calculation. (Done)
    - Add the ability to plot other celestial objects (Done)
    - Add functionality to create DataFrames out of TLE Data
    - Add X,Y,Z arrows to sphere in Draw.py (Done)
    - Imporove Axial tilt arrows 
    - Update readme to include astronomical objects.
    - Create tests.py

Sprint 4: Add Space-Track and CelesTrak API support
    - Create pipelines between CelesTrack and SpaceTrack for importing TLE data.
    - Work on a Jupyter Notebook explaining the trig involved in drawing the Orbits
    - Add Sphinx Documentation
