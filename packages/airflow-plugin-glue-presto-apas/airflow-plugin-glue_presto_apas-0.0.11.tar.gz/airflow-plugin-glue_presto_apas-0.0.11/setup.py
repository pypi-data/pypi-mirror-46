# -*- coding: utf-8 -*-
from distutils.core import setup

package_dir = \
{'': 'src'}

packages = \
['airflow']

package_data = \
{'': ['*'], 'airflow': ['hooks/*', 'operators/*', 'plugins/*']}

install_requires = \
['apache-airflow>=1.10,<2.0', 'presto-python-client>=0.5.1,<0.6.0']

entry_points = \
{'airflow.plugins': ['glue_presto_apas = '
                     'airflow.plugins.glue_presto_apas:GluePrestoApasPlugin']}

setup_kwargs = {
    'name': 'airflow-plugin-glue-presto-apas',
    'version': '0.0.11',
    'description': 'An Airflow Plugin to Add a Partition As Select(APAS) on Presto that uses Glue Data Catalog as a Hive metastore.',
    'long_description': 'airflow-plugin-glue_presto_apas\n==========================\n\n[![PyPi](https://img.shields.io/pypi/v/airflow-plugin-glue-presto-apas.svg)](https://pypi.org/project/airflow-plugin-glue-presto-apas/)\n\nAn Airflow Plugin to **Add a Partition As Select(APAS)** on Presto that uses Glue Data Catalog as a Hive metastore.\n\n# Usage\n\n```\nfrom datetime import timedelta\n\nimport airflow\nfrom airflow.models import DAG\n\nfrom airflow.operators.glue_add_partition import GlueAddPartitionOperator\nfrom airflow.operators.glue_presto_apas import GluePrestoApasOperator\n\nargs = {\n    \'owner\': \'airflow\',\n    \'depends_on_past\': False,\n    \'start_date\': airflow.utils.dates.days_ago(2),\n    \'email_on_failure\': False,\n    \'email_on_retry\': False,\n    \'retries\': 1,\n    \'retry_delay\': timedelta(minutes=5),\n}\n\n\ndag = DAG(\n    dag_id=\'example-dag\',\n    schedule_interval=\'0 0 * * *\',\n    default_args=args,\n)\n\nGluePrestoApasOperator(task_id=\'example-task-1\',\n                       db=\'example_db\',\n                       table=\'example_table\',\n                       sql=\'example.sql\',\n                       partition_kv={\n                           \'table_schema\': \'example_db\',\n                           \'table_name\': \'example_table\'\n                       },\n                       catalog_region_name=\'ap-northeast-1\',\n                       dag=dag,\n                       )\n\nGlueAddPartitionOperator(task_id=\'example-task-2\',\n                         db=\'example_db\',\n                         table=\'example_table\',\n                         partition_kv={\n                             \'table_schema\': \'example_db\',\n                             \'table_name\': \'example_table\'\n                         },\n                         catalog_region_name=\'ap-northeast-1\',\n                         dag=dag,\n                         )\n\nif __name__ == "__main__":\n    dag.cli()\n```\n\n# Configuration\n\n## glue_presto_apas.GluePrestoApasOperator\n\n- **db**: database name for parititioning (string, required)\n- **table**: table name for parititioning (string, required)\n- **sql**: sql file name for selecting data (string, required)\n- **fmt**: data format when storing data (string, default = `parquet`)\n- **additional_properties**: additional properties for creating table. (dict[string, string], optional)\n- **location**: location for the data (string, default = auto generated by hive repairable way)\n- **partition_kv**: key values for partitioning (dict[string, string], required)\n- **save_mode**: mode when storing data (string, default = `overwrite`, available values are `skip_if_exists`, `error_if_exists`, `ignore`, `overwrite`)\n- **catalog_id**: glue data catalog id if you use a catalog different from account/region default catalog. (string, optional)\n- **catalog_region_name**: glue data catalog region if you use a catalog different from account/region default catalog. (string, us-east-1 )\n- **presto_conn_id**: connection id for presto (string, default = \'presto_default\')\n- **aws_conn_id**: connection id for aws (string, default = \'aws_default\')\n\nTemplates can be used in the options[**db**, **table**, **sql**, **location**, **partition_kv**].\n\n## glue_add_partition.GlueAddPartitionOperator\n\n- **db**: database name for parititioning (string, required)\n- **table**: table name for parititioning (string, required)\n- **location**: location for the data (string, default = auto generated by hive repairable way)\n- **partition_kv**: key values for partitioning (dict[string, string], required)\n- **mode**: mode when storing data (string, default = `overwrite`, available values are `skip_if_exists`, `error_if_exists`, `overwrite`)\n- **follow_location**: Skip to add a partition and drop the partition if the location does not exist. (boolean, default = `True`)\n- **catalog_id**: glue data catalog id if you use a catalog different from account/region default catalog. (string, optional)\n- **catalog_region_name**: glue data catalog region if you use a catalog different from account/region default catalog. (string, us-east-1 )\n- **aws_conn_id**: connection id for aws (string, default = \'aws_default\')\n\nTemplates can be used in the options[**db**, **table**, **location**, **partition_kv**].\n\n# Development\n\n## Run Example\n\n```\nPRESTO_HOST=${YOUR PRESTO HOST} PRESTO_PORT=${YOUR PRESTO PORT} ./run-example.sh\n```\n\n## Release\n\n```\npoetry publish --build\n```\n',
    'author': 'Civitaspo',
    'author_email': 'civitaspo@gmail.com',
    'url': 'https://github.com/civitaspo/airflow-plugin-glue_presto_apas',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
