# Generated by Django 2.0.7 on 2018-07-06 23:07
from os.path import abspath, dirname, join
from django.db import migrations

BASE = join(abspath(dirname(__file__)), '..', 'sql')

with open(join(BASE, 'audit_0002.sql'), 'r') as f:
    sql = f.read()


def update_triggers(apps, schema_editor):
    for Model in apps.get_models():
        if not getattr(Model._meta, 'audit_trigger', False):
            continue
        table = Model._meta.db_table
        schema_editor.execute(
            'DROP TRIGGER IF EXISTS audit_trigger_row ON {}'.format(table),
        )
        schema_editor.execute(
            'DROP TRIGGER IF EXISTS audit_trigger_stm ON {}'.format(table),
        )
        with schema_editor.connection.cursor() as cursor:
            cursor.execute('SELECT to_regclass(\'audit.logged_actions\')')
            has_audit = cursor.fetchone()[0]
        if has_audit:
            schema_editor.execute(
                'SELECT audit.audit_table(\'{}\')'.format(table),
            )


class Migration(migrations.Migration):

    dependencies = [
        ('postgres_audit_triggers', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(sql),
        migrations.RunPython(update_triggers),
    ]
