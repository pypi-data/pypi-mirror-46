
[metadata]
name = spectra
package_name = radiospectra
description = Provide support for some type of radio spectra on solar physics
long_descripton = file: README.rst
author = SunPy Developers
author_email = sunpy@googlegroups.com
license = BSD 2-Clause
url = https://sunpy.org
edit_on_github = True
github_project = sunpy/radiospectra
install_requires = sunpy, bs4, lxml
# Extra Requirements
extra_requires = tests, docs
tests_requires = pytest, pytest-cov, pytest-astropy
docs_requires = sphinx, sunpy-sphinx-theme, sphinx-astropy
# version should be PEP386 compatible (http://www.python.org/dev/peps/pep-0386)
version = 0.2.0
# Note: you will also need to change this in your package's __init__.py
minimum_python_version = 2.7

[ah_bootstrap]
auto_use = True

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[tool:pytest]
minversion = 3.0
testpaths = "radiospectra" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "astropy_helpers" "examples"
doctest_plus = enabled
doctest_optionflags = NORMALIZE_WHITESPACE FLOAT_CMP ELLIPSIS
addopts = -p no:warnings --doctest-rst -m "not figure"
markers =
    online: marks this test function as needing online connectivity.
    figure: marks this test function as using hash-based Matplotlib figure verification. This mark is not meant to be directly applied, but is instead automatically applied when a test function uses the @sunpy.tests.helpers.figure_test decorator.
# Disable internet access for tests not marked remote_data
remote_data_strict = True

[pycodestyle]
max_line_length = 100

[flake8]
max-line-length = 100

[isort]
line_length = 100
not_skip = __init__.py
sections = FUTURE, STDLIB, THIRDPARTY, ASTROPY, FIRSTPARTY, LOCALFOLDER
default_section = THIRDPARTY
known_first_party = radiospectra
known_astropy = astropy, asdf, sunpy
multi_line_output = 0
balanced_wrapping = True
include_trailing_comma = False
length_sort = False
length_sort_stdlib = True

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
