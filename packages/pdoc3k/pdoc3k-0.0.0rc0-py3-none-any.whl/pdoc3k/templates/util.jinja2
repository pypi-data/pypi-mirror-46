{% macro ident(s) -%}
<span class="ident">{{ s }}</span>
{%- endmacro %}

{% macro obj_link(obj, *, force_short=False) -%}
{% set
    name = obj.name if force_short or module.is_public(obj.refname) else obj.refname
    url = obj_url(obj)
%}
{% if url is None %}
{{ name }}
{% else %]
<a href="{{ url }}" title="{{ obj.refname }}">{{ name }}</a>
{% endif %}
{%- endmacro %}

{% macro show_source(d) -%}
    {% if show_source_code %}
    {{ source_container(d.extract_source()) }}
    {% endif %}
{%- endmacro %}

{% macro source_container(src) -%}
    {% if src %}
    <div class="sourcecontainer">
        <a href="#" class="sourcebutton">
            Source <span class="expandicon"></span>
        </a>
        <div class="source hidden">
            {{ clean_source_lines(src) }}
        </div>
    </div>
    {% endif %}
{%- endmacro %}

{% macro desc(d, limit) -%}
    {% call(content) show_docstring(d, d.docstring, limit) %}
        <div class="desc">{{ content }}</div>
    {% endcall %}
{%- endmacro %}

{% macro show_desc(d) -%}
    {{ desc(d, None) }}
    {{ show_source(d) }}
{%- endmacro %}

{% macro show_member_desc(d, limit=None) -%}
    {% if d.inherits and (len(d.docstring) == 0 or d.docstring == d.inherits.docstring) %}
        {% call(content) show_docstring(d, d.inherits.docstring, limit) %}
        <div class="desc inherited">{{ content }}</div>
        {% endcall %}
    {% else %]
        {{ desc(d, limit) }}
    {% endif %}
    {{ show_source(d) }}
{%- endmacro %}

{% macro show_docstring(d, docstring, limit) -%}
    {% if limit is not None %}
        {% set docstring = glimpse(docstring, limit) %}
    {% endif %}
    {% if docstring %}
        {{ caller(mark(docstring, d)) }}
    {% endif %}
{%- endmacro %}

{% macro show_inheritance(d) -%}
    {% if d.inherits is not None %}
        <p class="inheritance">
         <strong title="Inherited from">⤷</strong>
         <code>{{ obj_link(d.inherits.cls) }}.{{ obj_link(d.inherits, force_short=True) }}</code>
        </p>
    {% endif %}
{%- endmacro %}

{% macro name_container(obj) -%}
    <a href="#{{ obj.refname }}" id="{{ obj.refname }}" class="name">
        {{ caller }}
    </a>
{%- endmacro %}

{% macro ident_name(x, ty) -%}
    {% call name_container(x) %}
        <span class="type">{{ ty }}</span> {{ ident(x.name) }}
    {% endcall %}
{%- endmacro %}

{% macro show_var(v) -%}
    {% call name_container(v) %}
        {{ ident(v.name) }}<span class="assign"> = {{ show_value(v.value) }}</span>
    {% endcall %}
{%- endmacro %}

{% macro show_value(val) -%}
    {% if val is None %}
        &lt;⋯&gt;
    {% else %]
        {{ glimpse(val, 50) | e }}
    {% endif %}
{%- endmacro %}

{% macro func_container(f) -%}
    {% set params, ret = f.spec() %}
    <div class="item">
        <a href="#{{ f.refname }}" class="name" id="{{ f.refname }}">
            <div class="funcdef">
                <div class="funcinit">
                    <div class="funcname">
                        <span class="type">{{ f.funcdef() }}</span>
                        {{ ident(f.name) }}(
                    </div>
                    <div class="funcargs">{{ params | e }})</div>
                </div>
                {% if ret is not None %}
                {% set retobj = lookupret(ret) %}
                <div class="funcret">
                    &nbsp;-&gt; {{ obj_link(retobj) }}
                </div>
                {% endif %}
            </div>
        </a>
        {{ caller }}
    </div>
{%- endmacro %}

{% macro show_func(f) -%}
    {% call func_container(f) %}
        {{ show_desc(f) }}
    {% endcall %}
{%- endmacro %}

{% macro show_class_func(f) -%}
    {% call func_container(f) %}
        {{ show_inheritance(f) }}
        {{ show_member_desc(f) }}
    {% endcall %}
{%- endmacro %}

{% macro show_class(c) -%}
    {% set
        class_vars = c.class_variables(),
        smethods = c.functions(),
        cmethods = c.class_methods(),
        inst_vars = c.instance_variables(),
        properties = c.properties(),
        methods = c.methods()
    %}
    <div class="item">
        {{ ident_name(c, "class") }}
        {{ show_desc(c) }}

        <div class="class">
            <h3 title="Listed in Method Resolution Order">Ancestors</h3>
            <ul class="ancestors">
            {% for cls in c.mro %}
                <li>{{ obj_link(cls) }}</li>
            {% endfor %}
            </ul>
            {% if class_vars %}
                <h3>Class variables</h3>
                {% for v in class_vars %}
                    <div class="item">
                    {{ show_var(v) }}
                    {{ show_inheritance(v) }}
                    {{ show_member_desc(v) }}
                    </div>
                {% endfor %}
            {% endif %}
            {% if smethods %}
                <h3 title="Methods with @staticmethod">Static methods</h3>
                {% for f in smethods %}
                    {{ show_class_func(f) }}
                {% endfor %}
            {% endif %}
            {% if cmethods %}
                <h3 title="Methods with @classmethod">Class methods</h3>
                {% for f in cmethods %}
                    {{ show_class_func(f) }}
                {% endfor %}
            {% endif %}
            {% if inst_vars %}
                <h3>Instance variables</h3>
                {% for v in inst_vars %}
                    <div class="item">
                    {{ show_var(v) }}
                    {{ show_inheritance(v) }}
                    {{ show_member_desc(v) }}
                    </div>
                {% endfor %}
            {% endif %}
            {% if properties %}
                <h3 title="Methods with @property">Computed properties</h3>
                {% for p in properties %}
                    {{ show_var(p) }}
                    {{ show_inheritance(p) }}
                    {{ show_member_desc(p) }}
                {% endfor %}
            {% endif %}
            {% if methods %}
                <h3>Methods</h3>
                {% for f in methods %}
                    {{ show_class_func(f) }}
                {% endfor %}
            {% endif %}
        </div>
    </div>
{%- endmacro %}

{% macro render_breadcrumbs(mod) -%}
{% for part, path, sep in breadcrumbs(mod.refname) %}
<a class="breadcrumblink" href="{{ path }}">{{ part }}</a>{{ sep }}
{% endfor %}
{%- endmacro %}

{% macro show_module(module) -%}
    {% set
        variables = module.variables(),
        classes = module.classes(),
        exceptions = module.exceptions(),
        functions = module.functions(),
        submodules = module.submodules()
    %}

    <header id="section-intro">
        <h1 class="modtitle">
            Module <span class="name">{{ render_breadcrumbs(module) }}</span>
        </h1>
        {{ show_desc(module) }}
    </header>

    <section id="section-items">
        {% if variables %}
            <h2 class="sectiontitle" id="header-variables">Module variables</h2>
            {% for v in variables %}
                <div class="item">
                    {{ show_var(v) }}
                    {{ show_desc(v) }}
                </div>
            {% endfor %}
        {% endif %}

        {% if functions %}
            <h2 class="sectiontitle" id="header-functions">Functions</h2>
            {% for f in functions %}
                {{ show_func(f) }}
            {% endfor %}
        {% endif %}

        {% if classes %}
            <h2 class="sectiontitle" id="header-classes">Classes</h2>
            {% for c in classes %}
                {{ show_class(c) }}
            {% endfor %}
        {% endif %}

        {% if exceptions %}
            <h2 class="sectiontitle" id="header-exceptions">Exceptions</h2>
            {% for c in exceptions %}
                {{ show_class(c) }}
            {% endfor %}
        %endif

        {% if submodules %}
            <h2 class="sectiontitle" id="header-submodules">Submodules</h2>
            {% for m in submodules %}
                <div class="item">
                    <a class="name" href="{{ obj_url(m) }}">{{ m.name }}</a>
                    {{ desc(m, limit=300) }}
                </div>
            {% endfor %}
        {% endif %}
    </section>
{%- endmacro %}

{% macro obj_list(objs) -%}
    <ul class="objlist">
    {% for obj in objs %}
        <li>{{ obj_link(obj) }}</lI>
    {% endfor %}
    </ul>
{%- endmacro %}

{% macro class_index(classes, title) -%}
    {% if classes %}
        <li class="indexsection">
            <h1><a href="#header-{{ title.lower() }}" class="sectionlink">{{ title }}</a></h1>
            <ul class="objlist">
            {% for c in classes %}
                <li>
                    {{ obj_link(c) }}
                    {% set methods = c.functions() + c.class_methods() + c.methods() %}
                    {% if methods %}
                        {{ obj_list(methods) }}
                    {% endif %}
                </li>
            {% endfor %}
            </ul>
        </li>
    {% endif %}
{%- endmacro %}

{% macro module_index(module) -%}
    {% set
        variables = module.variables(),
        classes = module.classes(),
        exceptions = module.exceptions(),
        functions = module.functions(),
        submodules = module.submodules(),
        show_index = variables or classes or exceptions or functions or submodules
    %}
    {% if show_index %}
        <div id="index-column">
            <ul id="index">
            {% if variables %}
                <li class="indexsection">
                    <h1><a href="#header-variables" class="sectionlink">Module variables</a></h1>
                    {{ obj_list(variables) }}
                </li>
            {% endif %}

            {% if functions %}
                <li class="indexsection">
                    <h1><a href="#header-functions" class="sectionlink">Functions</a></h1>
                    {{ obj_list(functions) }}
                </li>
            {% endif %}

            {{ class_index(classes, "Classes") }}
            {{ class_index(exceptions, "Exceptions") }}

            {% if submodules %}
                <li class="indexsection">
                    <h1><a href="#header-submodules" class="sectionlink">Submodules</a></h1>
                    {{ obj_list(submodules) }}
                </li>
            {% endif %}
            </ul>
        </div>
    {% endif %}
{%- endmacro %}
