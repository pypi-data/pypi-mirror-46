#
# PySNMP MIB module TIMETRA-PORT-MIB (http://pysnmp.sf.net)
# ASN.1 source file://C:\MIBS\text_mibs\aos\TIMETRA-PORT-MIB
# Produced by pysmi-0.0.6 at Wed May 31 13:17:40 2017
# On host ? platform ? version ? by user ?
# Using Python version 2.7.9 (default, Dec 10 2014, 12:24:55) [MSC v.1500 32 bit (Intel)]
#
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
( AtmVpIdentifier, AtmTrafficDescrParamIndex, ) = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVpIdentifier", "AtmTrafficDescrParamIndex")
( SnmpAdminString, ) = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
( NotificationGroup, ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
( Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Bits, TimeTicks, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, ObjectIdentity, IpAddress, Counter32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Bits", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "IpAddress", "Counter32")
( TimeInterval, MacAddress, TextualConvention, DateAndTime, TruthValue, TimeStamp, RowStatus, DisplayString, RowPointer, ) = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "MacAddress", "TextualConvention", "DateAndTime", "TruthValue", "TimeStamp", "RowStatus", "DisplayString", "RowPointer")
( TmnxAlarmState, tmnxMdaNotifyType, TmnxMDAChanType, tmnxChassisNotifyChassisId, tmnxHwObjs, TmnxPortAdminStatus, tmnxHwNotification, tmnxHwConformance, tmnxChassisIndex, ) = mibBuilder.importSymbols("TIMETRA-CHASSIS-MIB", "TmnxAlarmState", "tmnxMdaNotifyType", "TmnxMDAChanType", "tmnxChassisNotifyChassisId", "tmnxHwObjs", "TmnxPortAdminStatus", "tmnxHwNotification", "tmnxHwConformance", "tmnxChassisIndex")
( timetraSRMIBModules, ) = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "timetraSRMIBModules")
( TPortSchedulerPIRRate, TBurstPercentOrDefaultOverride, TPIRPercentOverride, TmnxSubIdentStringOrEmpty, TNamedItemOrEmpty, TmnxEnabledDisabled, TAdaptationRuleOverride, TMcFrQoSProfileId, TIngressQueueId, THsmdaPIRMRateOverride, TBurstSizeBytesOverride, TCIRRateOverride, TFCName, TPIRRateOverride, TRateType, TmnxSubMgtIntDestId, TmnxEgrPolicerStatMode, TExpSecondaryShaperPIRRate, TSecondaryShaper10GPIRRate, TBurstSizeOverride, TmnxSubMgtOrgStrOrZero, TEgressQueueId, TClassBurstLimit, TQueueId, TExpSecondaryShaperClassRate, TItemDescription, TMlpppQoSProfileId, TPortSchedulerCIR, TCIRPercentOverride, TPortSchedulerPIR, TmnxActionType, THsmdaWeightOverride, TmnxOperState, TEgrPolicerId, TmnxPortID, TNamedItem, TItemLongDescription, ) = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TPortSchedulerPIRRate", "TBurstPercentOrDefaultOverride", "TPIRPercentOverride", "TmnxSubIdentStringOrEmpty", "TNamedItemOrEmpty", "TmnxEnabledDisabled", "TAdaptationRuleOverride", "TMcFrQoSProfileId", "TIngressQueueId", "THsmdaPIRMRateOverride", "TBurstSizeBytesOverride", "TCIRRateOverride", "TFCName", "TPIRRateOverride", "TRateType", "TmnxSubMgtIntDestId", "TmnxEgrPolicerStatMode", "TExpSecondaryShaperPIRRate", "TSecondaryShaper10GPIRRate", "TBurstSizeOverride", "TmnxSubMgtOrgStrOrZero", "TEgressQueueId", "TClassBurstLimit", "TQueueId", "TExpSecondaryShaperClassRate", "TItemDescription", "TMlpppQoSProfileId", "TPortSchedulerCIR", "TCIRPercentOverride", "TPortSchedulerPIR", "TmnxActionType", "THsmdaWeightOverride", "TmnxOperState", "TEgrPolicerId", "TmnxPortID", "TNamedItem", "TItemLongDescription")
tmnxPortMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 25)).setRevisions(("1911-02-01 00:00", "1909-02-28 00:00", "1908-07-01 00:00", "1908-01-01 00:00", "1907-01-01 00:00", "1906-03-16 00:00", "1905-08-31 00:00", "1905-01-24 00:00", "1904-03-01 00:00",))
tmnxPortObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4))
tmnxPortNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7))
tmnxFRObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9))
tmnxQosAppObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10))
tmnxATMObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11))
tmnxPortStatsObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12))
tmnxPortNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2))
tmnxPortNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0))
tmnxPortConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2))
tmnxPortPlcyObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 67))
class TmnxPortOperStatus(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5,)
    namedValues = NamedValues(("unknown", 1), ("inService", 2), ("outOfService", 3), ("diagnosing", 4), ("failed", 5),)

class TmnxPortEtherReportValue(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8,)
    namedValues = NamedValues(("notUsed", 0), ("signalFailure", 1), ("remoteFault", 2), ("localFault", 3), ("noFrameLock", 4), ("highBer", 5), ("noBlockLock", 6), ("noAmLock", 7), ("duplicateLane", 8),)

class TmnxPortEtherReportStatus(Bits, TextualConvention):
    namedValues = NamedValues(("notUsed", 0), ("signalFailure", 1), ("remoteFault", 2), ("localFault", 3), ("noFrameLock", 4), ("highBer", 5), ("noBlockLock", 6), ("noAmLock", 7), ("duplicateLane", 8),)

class TmnxPortEtherCrcMonReportValue(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2,)
    namedValues = NamedValues(("noFault", 0), ("sdThresholdExceeded", 1), ("sfThresholdExceeded", 2),)

class TmnxPortEtherCrcMonReportStatus(Bits, TextualConvention):
    namedValues = NamedValues(("sdThresholdExceeded", 0), ("sfThresholdExceeded", 1),)

class TmnxPortClass(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,)
    namedValues = NamedValues(("none", 1), ("faste", 2), ("gige", 3), ("xgige", 4), ("sonet", 5), ("vport", 6), ("unused", 7), ("xcme", 8), ("tdm", 9), ("xlgige", 10), ("cgige", 11), ("vsme", 12),)

class TmnxPortConnectorType(Unsigned32, TextualConvention):
    pass

class TmnxPortState(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6,)
    namedValues = NamedValues(("none", 1), ("ghost", 2), ("linkDown", 3), ("linkUp", 4), ("up", 5), ("diagnose", 6),)

class TmnxPortType(Unsigned32, TextualConvention):
    pass

class TmnxPortEncapType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,)
    namedValues = NamedValues(("unknown", 0), ("nullEncap", 1), ("qEncap", 2), ("mplsEncap", 3), ("bcpNullEncap", 4), ("bcpDot1qEncap", 5), ("ipcpEncap", 6), ("frEncap", 7), ("pppAutoEncap", 8), ("atmEncap", 9), ("qinqEncap", 10), ("wanMirrorEncap", 11), ("ciscoHDLCEncap", 12), ("cemEncap", 13),)

class TmnxDs0ChannelList(OctetString, TextualConvention):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(0,4)

class TmnxBundleID(Unsigned32, TextualConvention):
    pass

class TmnxDSXBertPattern(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,)
    namedValues = NamedValues(("none", 0), ("ones", 1), ("zeros", 2), ("alternating", 3), ("twoexp3", 4), ("twoexp9", 5), ("twoexp15", 6), ("twoexp20", 7), ("twoexp11", 8), ("twoexp20q", 9), ("twoexp23", 10),)

class TmnxDSXBertOperStatus(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3,)
    namedValues = NamedValues(("none", 0), ("active", 1), ("idle", 2), ("noMdaResources", 3),)

class TmnxDSXIdleCycleFlags(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2,)
    namedValues = NamedValues(("none", 0), ("flags", 1), ("ones", 2),)

class TmnxDSXIdleFillType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2,)
    namedValues = NamedValues(("notApplicable", 0), ("allOnes", 1), ("userDefinedPattern", 2),)

class TmnxDSXLoopback(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3,)
    namedValues = NamedValues(("none", 0), ("line", 1), ("internal", 2), ("remote", 3),)

class TmnxDSXReportAlarm(Bits, TextualConvention):
    namedValues = NamedValues(("notUsed", 0), ("ais", 1), ("los", 2), ("oof", 3), ("rai", 4), ("looped", 5), ("berSd", 6), ("berSf", 7),)

class TmnxDSXClockSource(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4,)
    namedValues = NamedValues(("loopTimed", 1), ("nodeTimed", 2), ("adaptive", 3), ("differential", 4),)

class TmnxDSXClockSyncState(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5,)
    namedValues = NamedValues(("unknown", 0), ("normal", 1), ("holdOver", 2), ("freeRun", 3), ("phaseTracking", 4), ("freqTracking", 5),)

class TmnxDS1Loopback(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7,)
    namedValues = NamedValues(("none", 0), ("line", 1), ("internal", 2), ("fdlAnsi", 3), ("fdlBellcore", 4), ("payloadAnsi", 5), ("inbandAnsi", 6), ("inbandBellcore", 7),)

class TmnxDS3Loopback(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3,)
    namedValues = NamedValues(("none", 0), ("line", 1), ("internal", 2), ("remote", 3),)

class TmnxImaGrpState(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,)
    namedValues = NamedValues(("invalid", 0), ("notConfigured", 1), ("startUp", 2), ("startUpAck", 3), ("configAbortUnsupportedM", 4), ("configAbortIncompatibleSymmetry", 5), ("configAbortOther", 6), ("insufficientLinks", 7), ("blocked", 8), ("operational", 9), ("configAbortUnsupportedImaVersion", 10),)

class TmnxImaGrpFailState(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,)
    namedValues = NamedValues(("noFailure", 1), ("startUpNe", 2), ("startUpFe", 3), ("invalidMValueNe", 4), ("invalidMValueFe", 5), ("failedAssymetricNe", 6), ("failedAssymetricFe", 7), ("insufficientLinksNe", 8), ("insufficientLinksFe", 9), ("blockedNe", 10), ("blockedFe", 11), ("otherFailure", 12), ("invalidImaVersionNe", 13), ("invalidImaVersionFe", 14),)

class TmnxImaLnkState(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8,)
    namedValues = NamedValues(("notInGroup", 1), ("unusableNoGivenReason", 2), ("unusableFault", 3), ("unusableMisconnected", 4), ("unusableInhibited", 5), ("unusableFailed", 6), ("usable", 7), ("active", 8),)

class TmnxImaLnkFailState(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9,)
    namedValues = NamedValues(("noFailure", 1), ("imaLinkFailure", 2), ("lifFailure", 3), ("lodsFailure", 4), ("misConnected", 5), ("blocked", 6), ("fault", 7), ("farEndTxLinkUnusable", 8), ("farEndRxLinkUnusable", 9),)

class TmnxImaTestState(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3,)
    namedValues = NamedValues(("disabled", 1), ("operating", 2), ("failed", 3),)

class TmnxImaGrpClockModes(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2,)
    namedValues = NamedValues(("ctc", 1), ("itc", 2),)

class TmnxImaGrpVersion(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2,)
    namedValues = NamedValues(("oneDotZero", 1), ("oneDotOne", 2),)

class TmnxMcMlpppClassIndex(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,15)

class TmnxMlpppEndpointIdClass(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5,)
    namedValues = NamedValues(("nullClass", 0), ("localAddress", 1), ("ipAddress", 2), ("ieee802dot1GlobalMacAddress", 3), ("pppMagicNumberBlock", 4), ("publicSwitchedNetworkDirNumber", 5),)

class TmnxMlfrLinkDownReason(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5, 7, 8, 9,)
    namedValues = NamedValues(("none", 0), ("outOfService", 1), ("redDiffDelayExceeded", 2), ("loopback", 3), ("negotiating", 4), ("noRxHelloAck", 5), ("rxCause", 7), ("txCause", 8), ("linkReset", 9),)

class TmnxWaveTrackerAlarm(Bits, TextualConvention):
    namedValues = NamedValues(("encFail", 0), ("encDegr", 1), ("pwrFail", 2), ("pwrDegr", 3), ("pwrHigh", 4), ("pwrLow", 5),)

class TmnxOpticalAmpAlarm(Bits, TextualConvention):
    namedValues = NamedValues(("ampIld", 0), ("ampTmp", 1), ("ampMth", 2), ("ampMtl", 3), ("ampLos", 4), ("ampLop", 5), ("ampCom", 6),)

class TmnxOpticalTdcmAlarm(Bits, TextualConvention):
    namedValues = NamedValues(("tdcmNotRdy", 0), ("tdcmMth", 1), ("tdcmMtl", 2), ("tdcmUnLck", 3), ("tdcmTmpLim", 4), ("tdcmEprInv", 5), ("tdcmCom", 6),)

class TmnxOpticalTdcmCtrlMode(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1,)
    namedValues = NamedValues(("automatic", 0), ("manual", 1),)

class TmnxOpticalAmpCtrlState(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4,)
    namedValues = NamedValues(("unknown", 0), ("lossOfsignal", 1), ("adjusting", 2), ("paused", 3), ("converged", 4),)

class TmnxOpticalTdcmCtrlState(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5, 6,)
    namedValues = NamedValues(("unknown", 0), ("disabled", 1), ("waiting", 2), ("sweeping", 3), ("zoneIn", 4), ("fineTuning", 5), ("converged", 6),)

class TmnxOpticalDwdmChannel(Unsigned32, TextualConvention):
    subtypeSpec = Unsigned32.subtypeSpec+ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(17,61),ValueRangeConstraint(170,610),)
class TmnxDigitalDiagnosticFailureBits(Bits, TextualConvention):
    namedValues = NamedValues(("unknown", 0), ("temperature-low-warning", 1), ("temperature-low-alarm", 2), ("temperature-high-warning", 3), ("temperature-high-alarm", 4), ("supplyVoltage-low-warning", 5), ("supplyVoltage-low-alarm", 6), ("supplyVoltage-high-warning", 7), ("supplyVoltage-high-alarm", 8), ("txBiasCurrent-low-warning", 9), ("txBiasCurrent-low-alarm", 10), ("txBiasCurrent-high-warning", 11), ("txBiasCurrent-high-alarm", 12), ("txOutputPower-low-warning", 13), ("txOutputPower-low-alarm", 14), ("txOutputPower-high-warning", 15), ("txOutputPower-high-alarm", 16), ("rxOpticalPower-low-warning", 17), ("rxOpticalPower-low-alarm", 18), ("rxOpticalPower-high-warning", 19), ("rxOpticalPower-high-alarm", 20), ("aux1-low-warning", 21), ("aux1-low-alarm", 22), ("aux1-high-warning", 23), ("aux1-high-alarm", 24), ("aux2-low-warning", 25), ("aux2-low-alarm", 26), ("aux2-high-warning", 27), ("aux2-high-alarm", 28),)

tmnxPortTableLastChange = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 1), TimeStamp()).setMaxAccess("readonly")
tmnxPortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2), )
tmnxPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxPortPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 1), TmnxPortID())
tmnxPortLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
tmnxPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 3), TmnxPortType()).setMaxAccess("readonly")
tmnxPortClass = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 4), TmnxPortClass()).setMaxAccess("readonly")
tmnxPortDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 5), TItemLongDescription().clone(hexValue="")).setMaxAccess("readwrite")
tmnxPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readonly")
tmnxPortAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 7), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readwrite")
tmnxPortUserAssignedMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 8), TruthValue().clone('false')).setMaxAccess("readonly")
tmnxPortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 9), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
tmnxPortHwMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 10), MacAddress()).setMaxAccess("readonly")
tmnxPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3,)).clone(namedValues=NamedValues(("undefined", 0), ("access", 1), ("network", 2), ("hybrid", 3),))).setMaxAccess("readwrite")
tmnxPortEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 12), TmnxPortEncapType()).setMaxAccess("readwrite")
tmnxPortLagId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,200))).setMaxAccess("readwrite")
tmnxPortHoldTimeUp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,90000))).setMaxAccess("readwrite")
tmnxPortHoldTimeDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,90000))).setMaxAccess("readwrite")
tmnxPortUpProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 16), Bits().clone(namedValues=NamedValues(("portUpIpv4", 0), ("portUpMpls", 1), ("portUpBcp", 2), ("portUpIso", 3), ("portUpFr", 4), ("portUpAtm", 5), ("portUpChdlc", 6), ("portUpIma", 7), ("portUpIpv6", 8),))).setMaxAccess("readonly")
tmnxPortConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 17), TmnxPortConnectorType()).setMaxAccess("readonly")
tmnxPortTransceiverType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 25), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,)).clone(namedValues=NamedValues(("unknown", 0), ("gbic", 1), ("moduleConnectorSolderedToMotherboard", 2), ("sfpTransceiver", 3), ("xbiTransceiver", 4), ("xenpakTransceiver", 5), ("xfpTransceiver", 6), ("xffTransceiver", 7), ("xfpeTransceiver", 8), ("xpakTransceiver", 9), ("x2Transceiver", 10), ("dwdmSfpTransceiver", 11), ("qsfpTransceiver", 12), ("qsfpPlusTransceiver", 13), ("cfpTransceiver", 14),))).setMaxAccess("readonly")
tmnxPortTransceiverCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 26), Bits().clone(namedValues=NamedValues(("unknown", 0), ("oc48-longreach", 1), ("oc48-intermediatereach", 2), ("oc48-shortreach", 3), ("oc12-singlemodelongreach", 4), ("oc12-singlemodeinterreach", 5), ("oc12-multimodeshortreach", 6), ("oc3-singlemodelongreach", 7), ("oc3-singlemodeinterreach", 8), ("oc3-multi-modeshortreach", 9), ("gige-1000base-t", 10), ("gige-1000base-cx", 11), ("gige-1000base-lx", 12), ("gige-1000base-sx", 13), ("faste-100base-mm-fx", 14), ("faste-100base-sm-fx", 15), ("xgige-10gbase-sr", 16), ("xgige-10gbase-lr", 17), ("xgige-10gbase-er", 18), ("xgige-10gbase-sw", 19), ("xgige-10gbase-lw", 20), ("xgige-10gbase-ew", 21),))).setMaxAccess("readonly")
tmnxPortTransceiverLaserWaveLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 27), Unsigned32()).setMaxAccess("readonly")
tmnxPortTransceiverDiagCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 28), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("notApplicable", 0), ("true", 1), ("false", 2),))).setMaxAccess("readonly")
tmnxPortTransceiverModelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 29), TNamedItemOrEmpty()).setMaxAccess("readonly")
tmnxPortSFPConnectorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 30), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 32, 33, 128,)).clone(namedValues=NamedValues(("unknown", 0), ("sc", 1), ("fiberChannel-Style1-CopperConnector", 2), ("fiberChannel-Style2-CopperConnector", 3), ("bncortnc", 4), ("fiberChannelCoaxialHeaders", 5), ("fiberJack", 6), ("lc", 7), ("mt-rj", 8), ("mu", 9), ("sg", 10), ("opticalPigtail", 11), ("hssdcII", 32), ("copperPigtail", 33), ("copperGigE", 128),))).setMaxAccess("readonly")
tmnxPortSFPVendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 31), Unsigned32()).setMaxAccess("readonly")
tmnxPortSFPVendorManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 32), DateAndTime()).setMaxAccess("readonly")
tmnxPortSFPMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 33), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("notApplicable", 0), ("ethernet", 1), ("sonetsdh", 2),))).setMaxAccess("readonly")
tmnxPortSFPEquipped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 34), TruthValue()).setMaxAccess("readonly")
tmnxPortEquipped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 35), TruthValue()).setMaxAccess("readonly")
tmnxPortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 36), TruthValue()).setMaxAccess("readonly")
tmnxPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 37), TmnxPortAdminStatus().clone('inService')).setMaxAccess("readwrite")
tmnxPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 38), TmnxPortOperStatus()).setMaxAccess("readonly")
tmnxPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 39), TmnxPortState()).setMaxAccess("readonly")
tmnxPortPrevState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 40), TmnxPortState()).setMaxAccess("readonly")
tmnxPortNumAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 41), Unsigned32()).setMaxAccess("readonly")
tmnxPortAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 42), TmnxAlarmState()).setMaxAccess("readonly")
tmnxPortLastAlarmEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 43), RowPointer()).setMaxAccess("readonly")
tmnxPortClearAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 44), TmnxActionType().clone('notApplicable')).setMaxAccess("readwrite")
tmnxPortSFPVendorSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 45), TNamedItemOrEmpty()).setMaxAccess("readonly")
tmnxPortSFPVendorPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 46), TNamedItemOrEmpty()).setMaxAccess("readonly")
tmnxPortLastStateChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 48), TimeStamp()).setMaxAccess("readonly")
tmnxPortNumChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 49), Unsigned32()).setMaxAccess("readonly")
tmnxPortNetworkEgrQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 50), TNamedItemOrEmpty()).setMaxAccess("readwrite")
tmnxPortBundleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,2000))).setMaxAccess("readonly")
tmnxPortIsLeaf = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 52), TruthValue()).setMaxAccess("readonly")
tmnxPortChanType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 53), TmnxMDAChanType()).setMaxAccess("readonly")
tmnxPortParentPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 54), TmnxPortID()).setMaxAccess("readonly")
tmnxPortOpticalCompliance = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 55), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8,8)).setFixedLength(8)).setMaxAccess("readonly")
tmnxPortLoadBalanceAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 56), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3,)).clone(namedValues=NamedValues(("notApplicable", 0), ("default", 1), ("includeL4", 2), ("excludeL4", 3),)).clone('default')).setMaxAccess("readwrite")
tmnxPortEgrPortSchedPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 57), TNamedItemOrEmpty()).setMaxAccess("readwrite")
tmnxPortLastClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 58), TimeStamp()).setMaxAccess("readonly")
tmnxPortEgrHsmdaSchedPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 59), TNamedItemOrEmpty()).setMaxAccess("readwrite")
tmnxPortIngNamedPoolPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 60), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readwrite")
tmnxPortEgrNamedPoolPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 61), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readwrite")
tmnxPortIngPoolPercentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 62), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,1000)).clone(100)).setMaxAccess("readwrite")
tmnxPortEgrPoolPercentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 63), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,1000)).clone(100)).setMaxAccess("readwrite")
tmnxPortDDMEventSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 64), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxPortSFPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 65), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("not-equipped", 0), ("operational", 1), ("read-error", 2), ("data-corrupt", 3), ("ddm-corrupt", 4), ("unsupported", 5),)).clone('not-equipped')).setMaxAccess("readonly")
tmnxPortReasonDownFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 66), Bits().clone(namedValues=NamedValues(("unknown", 0), ("linklossFwd", 1), ("lagMemberPortStandby", 2), ("ethCfmFault", 3), ("opticalTuning", 4), ("channelOutOfRange", 5), ("channelNotConfigured", 6), ("crcError", 7), ("internalMacTxError", 8), ("noServicePort", 9),))).setMaxAccess("readonly")
tmnxPortSSMRxQualityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 67), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,)).clone(namedValues=NamedValues(("unknown", 0), ("prs", 1), ("stu", 2), ("st2", 3), ("tnc", 4), ("st3e", 5), ("st3", 6), ("smc", 7), ("st4", 8), ("dus", 9), ("prc", 10), ("ssua", 11), ("ssub", 12), ("sec", 13), ("dnu", 14), ("inv", 15), ("pno", 16), ("eec1", 17), ("eec2", 18), ("failed", 19),)).clone('unknown')).setMaxAccess("readonly")
tmnxPortDwdmLaserChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 68), TmnxOpticalDwdmChannel()).setMaxAccess("readwrite")
tmnxPortOtuCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 69), TruthValue()).setMaxAccess("readonly")
tmnxPortWaveTrackerCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 70), TruthValue()).setMaxAccess("readonly")
tmnxPortHybridIngAccessWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 71), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,100)).clone(50)).setMaxAccess("readwrite")
tmnxPortHybridIngNetworkWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 72), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,100)).clone(50)).setMaxAccess("readwrite")
tmnxPortHybridEgrAccessWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 73), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,100)).clone(50)).setMaxAccess("readwrite")
tmnxPortHybridEgrNetworkWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 74), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,100)).clone(50)).setMaxAccess("readwrite")
tmnxPortDwdmRxDtvAdjustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 75), TruthValue().clone('true')).setMaxAccess("readwrite")
tmnxPortDwdmRxDtvDacPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 76), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,10000)).clone(5000)).setUnits('Hundredths of a percent').setMaxAccess("readonly")
tmnxPortInterfaceGroupHandlerIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 77), Unsigned32()).setMaxAccess("readonly")
tmnxPortHoldTimeUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 78), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("seconds", 0), ("centiseconds", 1),)).clone('seconds')).setMaxAccess("readwrite")
tmnxPortLinkLengthInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 79), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6,6)).setFixedLength(6)).setMaxAccess("readonly")
tmnxPortSFPNumLanes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 80), Unsigned32()).setMaxAccess("readonly")
tmnxPortPhysStateChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 2, 1, 81), Counter32()).setMaxAccess("readonly")
tmnxPortTestTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3), )
tmnxPortTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3, 1), )
tmnxPortEntry.registerAugmentions(("TIMETRA-PORT-MIB", "tmnxPortTestEntry"))
tmnxPortTestEntry.setIndexNames(*tmnxPortEntry.getIndexNames())
tmnxPortTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("notInTest", 1), ("inTest", 2),))).setMaxAccess("readonly")
tmnxPortTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4,)).clone(namedValues=NamedValues(("notApplicable", 0), ("loopback1", 1), ("loopback2", 2), ("loopback3", 3), ("singalInsertion", 4),))).setMaxAccess("readwrite")
tmnxPortTestParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3, 1, 3), Unsigned32()).setMaxAccess("readwrite")
tmnxPortTestLastResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3,)).clone(namedValues=NamedValues(("notApplicable", 0), ("success", 1), ("failure", 2), ("timeout", 3),))).setMaxAccess("readonly")
tmnxPortTestStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
tmnxPortTestEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3, 1, 6), DateAndTime()).setMaxAccess("readonly")
tmnxPortTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,256))).setMaxAccess("readwrite")
tmnxPortTestAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 3, 1, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("none", 1), ("startTest", 2), ("stopTest", 3),))).setMaxAccess("readwrite")
tmnxPortEtherTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4), )
tmnxPortEtherEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxPortEtherMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(512,9212),))).setUnits('bytes').setMaxAccess("readwrite")
tmnxPortEtherDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("notApplicable", 0), ("fullDuplex", 1), ("halfDuplex", 2),)).clone('fullDuplex')).setMaxAccess("readwrite")
tmnxPortEtherSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7,)).clone(namedValues=NamedValues(("notApplicable", 0), ("speed10", 1), ("speed100", 2), ("speed1000", 3), ("speed10000", 4), ("speed40000", 5), ("speed100000", 6), ("speed25000", 7),))).setMaxAccess("readwrite")
tmnxPortEtherAutoNegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3,)).clone(namedValues=NamedValues(("notApplicable", 0), ("true", 1), ("false", 2), ("limited", 3),)).clone('true')).setMaxAccess("readwrite")
tmnxPortEtherOperDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("notApplicable", 0), ("fullDuplex", 1), ("halfDuplex", 2),))).setMaxAccess("readonly")
tmnxPortEtherOperSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 6), Unsigned32()).setUnits('mega-bits per second').setMaxAccess("readonly")
tmnxPortEtherAcctPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readwrite")
tmnxPortEtherCollectStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
tmnxPortEtherMDIMDIX = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("unknown", 0), ("mdi", 1), ("mdix", 2),))).setMaxAccess("readonly")
tmnxPortEtherXGigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("notApplicable", 0), ("lan", 1), ("wan", 2),)).clone('lan')).setMaxAccess("readwrite")
tmnxPortEtherEgressRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(1,100000000),)).clone(-1)).setUnits('kilo-bits per second').setMaxAccess("readwrite")
tmnxPortEtherDot1qEtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1536,65535)).clone(33024)).setMaxAccess("readwrite")
tmnxPortEtherQinqEtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1536,65535)).clone(33024)).setMaxAccess("readwrite")
tmnxPortEtherIngressRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(1,100000),)).clone(-1)).setUnits('mega-bits per second').setMaxAccess("readwrite")
tmnxPortEtherReportAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 15), TmnxPortEtherReportStatus().clone(namedValues=NamedValues(("remoteFault", 2), ("localFault", 3),))).setMaxAccess("readwrite")
tmnxPortEtherReportAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 16), TmnxPortEtherReportStatus()).setMaxAccess("readonly")
tmnxPortEtherPkts1519toMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 17), Counter32()).setUnits('Packets').setMaxAccess("readonly")
tmnxPortEtherHCOverPkts1519toMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 18), Counter32()).setUnits('Packets').setMaxAccess("readonly")
tmnxPortEtherHCPkts1519toMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 19), Counter64()).setUnits('Packets').setMaxAccess("readonly")
tmnxPortEtherLacpTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 20), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxPortEtherDownWhenLoopedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 21), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxPortEtherDownWhenLoopedKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,120)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
tmnxPortEtherDownWhenLoopedRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 23), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(10,160),)).clone(120)).setUnits('seconds').setMaxAccess("readwrite")
tmnxPortEtherDownWhenLoopedState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 24), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("noLoopDetected", 1), ("loopDetected", 2),))).setMaxAccess("readonly")
tmnxPortEtherPBBEtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1536,65535)).clone(35047)).setMaxAccess("readwrite")
tmnxPortEtherReasonDownFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 26), Bits().clone(namedValues=NamedValues(("unknown", 0), ("linklossFwd", 1), ("lagMemberPortStandby", 2),))).setMaxAccess("readonly")
tmnxPortEtherSingleFiber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 27), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxPortEtherSSM = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxPortEtherDWLUseBroadcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 29), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxPortEtherSSMCodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 30), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("unknown", 1), ("sonet", 2), ("sdh", 3),)).clone('sdh')).setMaxAccess("readwrite")
tmnxPortEtherSSMTxDus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 31), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxPortEtherSSMRxEsmc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,255))).setMaxAccess("readonly")
tmnxPortEtherSSMTxQualityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 33), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,)).clone(namedValues=NamedValues(("reserved0", 0), ("prs", 1), ("stu", 2), ("st2", 3), ("tnc", 4), ("st3e", 5), ("reserved6", 6), ("smc", 7), ("reserved8", 8), ("dus", 9), ("prc", 10), ("ssua", 11), ("ssub", 12), ("reserved13", 13), ("dnu", 14), ("reserved15", 15), ("pno", 16), ("eec1", 17), ("eec2", 18), ("reserved19", 19),))).setMaxAccess("readonly")
tmnxPortEtherCrcMonSdThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,9))).setMaxAccess("readwrite")
tmnxPortEtherCrcMonSdTMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,9)).clone(1)).setMaxAccess("readwrite")
tmnxPortEtherCrcMonSfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,9))).setMaxAccess("readwrite")
tmnxPortEtherCrcMonSfTMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 37), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,9)).clone(1)).setMaxAccess("readwrite")
tmnxPortEtherCrcMonWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 38), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5,60)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
tmnxPortEtherCrcAlarmReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 39), TmnxPortEtherCrcMonReportStatus()).setMaxAccess("readonly")
tmnxPortEtherDownOnInternalError = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 40), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxPortEtherMinFrameLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 4, 1, 41), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(64,64),ValueRangeConstraint(68,68),)).clone(64)).setUnits('Bytes').setMaxAccess("readwrite")
tmnxSonetTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5), )
tmnxSonetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxSonetSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6,)).clone(namedValues=NamedValues(("oc3", 1), ("oc12", 2), ("oc48", 3), ("oc192", 4), ("oc768", 5), ("oc1", 6),))).setMaxAccess("readwrite")
tmnxSonetClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("loopTimed", 1), ("nodeTimed", 2),)).clone('loopTimed')).setMaxAccess("readwrite")
tmnxSonetFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("unknown", 1), ("sonet", 2), ("sdh", 3),)).clone('sonet')).setMaxAccess("readwrite")
tmnxSonetReportAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 4), Bits().clone(namedValues=NamedValues(("notUsed", 0), ("loc", 1), ("lais", 2), ("lrdi", 3), ("ss1f", 4), ("sb1err", 5), ("lb2erSd", 6), ("lb2erSf", 7), ("slof", 8), ("slos", 9), ("stxptr", 10), ("srxptr", 11), ("lrei", 12),)).clone(namedValues=NamedValues(("loc", 1), ("lrdi", 3), ("lb2erSf", 7), ("slof", 8), ("slos", 9),))).setMaxAccess("readwrite")
tmnxSonetBerSdThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3,9)).clone(6)).setMaxAccess("readwrite")
tmnxSonetBerSfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3,6)).clone(3)).setMaxAccess("readwrite")
tmnxSonetAps = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxSonetApsAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 8), TmnxPortAdminStatus().clone('inService')).setMaxAccess("readwrite")
tmnxSonetApsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 9), TmnxPortOperStatus()).setMaxAccess("readonly")
tmnxSonetApsAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,256)).clone(hexValue="0000000000000000")).setMaxAccess("readwrite")
tmnxSonetApsNeighborAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 11), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
tmnxSonetApsAdvertiseInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 12), TimeInterval().clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
tmnxSonetApsAdvertiseTimeLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 13), TimeInterval()).setUnits('milliseconds').setMaxAccess("readonly")
tmnxSonetApsHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 14), TimeInterval().clone(3000)).setUnits('milliseconds').setMaxAccess("readwrite")
tmnxSonetApsHoldTimeLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 15), TimeInterval()).setUnits('milliseconds').setMaxAccess("readonly")
tmnxSonetLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 16), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("none", 0), ("line", 1), ("internal", 2),))).setMaxAccess("readwrite")
tmnxSonetReportAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 17), Bits().clone(namedValues=NamedValues(("notUsed", 0), ("loc", 1), ("lais", 2), ("lrdi", 3), ("ss1f", 4), ("sb1err", 5), ("lb2erSd", 6), ("lb2erSf", 7), ("slof", 8), ("slos", 9), ("stxptr", 10), ("srxptr", 11), ("lrei", 12),))).setMaxAccess("readonly")
tmnxSonetSectionTraceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 18), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("increment-z0", 1), ("byte", 2), ("string", 3),)).clone('byte')).setMaxAccess("readwrite")
tmnxSonetJ0String = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,16)).clone(hexValue="01")).setMaxAccess("readwrite")
tmnxSonetMonS1Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,255)).clone(204)).setMaxAccess("readonly")
tmnxSonetMonJ0String = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,16))).setMaxAccess("readonly")
tmnxSonetMonK1Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,255))).setMaxAccess("readonly")
tmnxSonetMonK2Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,255))).setMaxAccess("readonly")
tmnxSonetSingleFiber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 24), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxSonetHoldTimeUp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,100)).clone(5)).setUnits('100s of milliseconds').setMaxAccess("readwrite")
tmnxSonetHoldTimeDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,100))).setUnits('100s of milliseconds').setMaxAccess("readwrite")
tmnxSonetSuppressLoOrderAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 27), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxSonetTxDus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxSonetTxS1Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 5, 1, 29), Unsigned32()).setMaxAccess("readonly")
tmnxSonetPathTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6), )
tmnxSonetPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxSonetPathRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 1), RowStatus()).setMaxAccess("readcreate")
tmnxSonetPathLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 2), TimeStamp()).setMaxAccess("readonly")
tmnxSonetPathMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(512,9208),))).setUnits('bytes').setMaxAccess("readcreate")
tmnxSonetPathScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 4), TruthValue()).setMaxAccess("readcreate")
tmnxSonetPathC2Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,254))).setMaxAccess("readcreate")
tmnxSonetPathJ1String = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,62))).setMaxAccess("readcreate")
tmnxSonetPathCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 7), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("crc16", 1), ("crc32", 2),)).clone('crc32')).setMaxAccess("readcreate")
tmnxSonetPathOperMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 8), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
tmnxSonetPathOperMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 9), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
tmnxSonetPathReportAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 10), Bits().clone(namedValues=NamedValues(("notUsed", 0), ("pais", 1), ("plop", 2), ("prdi", 3), ("pb3err", 4), ("pplm", 5), ("prei", 6), ("puneq", 7), ("plcd", 8),)).clone(namedValues=NamedValues(("plop", 2), ("pplm", 5), ("puneq", 7),))).setMaxAccess("readcreate")
tmnxSonetPathAcctPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readcreate")
tmnxSonetPathCollectStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 12), TruthValue().clone('true')).setMaxAccess("readcreate")
tmnxSonetPathReportAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 13), Bits().clone(namedValues=NamedValues(("notUsed", 0), ("pais", 1), ("plop", 2), ("prdi", 3), ("pb3err", 4), ("pplm", 5), ("prei", 6), ("puneq", 7), ("plcd", 8),))).setMaxAccess("readonly")
tmnxSonetPathMonC2Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,255))).setMaxAccess("readonly")
tmnxSonetPathMonJ1String = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
tmnxSonetPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 16), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("ds3", 1), ("e3", 2), ("vtg", 3), ("tug-2", 4), ("tug-3", 5),)).clone('ds3')).setMaxAccess("readcreate")
tmnxSonetPathChildType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 6, 1, 17), TmnxMDAChanType()).setMaxAccess("readcreate")
tmnxPortTypeTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 7), )
tmnxPortTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 7, 1), ).setIndexNames((0, "TIMETRA-PORT-MIB", "tmnxPortTypeIndex"))
tmnxPortTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 7, 1, 1), TmnxPortType())
tmnxPortTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 7, 1, 2), TNamedItemOrEmpty()).setMaxAccess("readonly")
tmnxPortTypeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 7, 1, 3), TItemDescription()).setMaxAccess("readonly")
tmnxPortTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 7, 1, 4), TruthValue()).setMaxAccess("readonly")
tmnxPortConnectTypeTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 8), )
tmnxPortConnectTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 8, 1), ).setIndexNames((0, "TIMETRA-PORT-MIB", "tmnxPortConnectTypeIndex"))
tmnxPortConnectTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 8, 1, 1), TmnxPortConnectorType())
tmnxPortConnectTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 8, 1, 2), TNamedItemOrEmpty()).setMaxAccess("readonly")
tmnxPortConnectTypeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 8, 1, 3), TItemDescription()).setMaxAccess("readonly")
tmnxPortConnectTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 8, 1, 4), TruthValue()).setMaxAccess("readonly")
tmnxPortFCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9), )
tmnxPortFCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxPortFCStatsIndex"))
tmnxPortFCStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 1), TFCName())
tmnxPortFCStatsIngFwdInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 2), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsIngFwdOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 3), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsIngFwdInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 4), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsIngFwdOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 5), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsIngDroInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 6), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsIngDroOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 7), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsIngDroInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 8), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsIngDroOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 9), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsEgrFwdInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 10), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsEgrFwdOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 11), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsEgrFwdInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 12), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsEgrFwdOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 13), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsEgrDroInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 14), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsEgrDroOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 15), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsEgrDroInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 16), Counter64()).setMaxAccess("readonly")
tmnxPortFCStatsEgrDroOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 9, 1, 17), Counter64()).setMaxAccess("readonly")
tmnxDS3Table = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 10), )
tmnxDS3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 10, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxDS3Buildout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("short", 1), ("long", 2),)).clone('short')).setMaxAccess("readcreate")
tmnxDS3LastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 10, 1, 2), TimeStamp()).setMaxAccess("readonly")
tmnxDS3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("ds3", 1), ("e3", 2),)).clone('ds3')).setMaxAccess("readcreate")
tmnxDS3ChannelTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11), )
tmnxDS3ChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxDS3ChannelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 1), RowStatus()).setMaxAccess("readcreate")
tmnxDS3ChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("ds3", 1), ("e3", 2),))).setMaxAccess("readonly")
tmnxDS3ChannelFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6,)).clone(namedValues=NamedValues(("cbit", 1), ("m23", 2), ("g751", 3), ("g832", 4), ("e3-unframed", 5), ("ds3-unframed", 6),)).clone('cbit')).setMaxAccess("readcreate")
tmnxDS3ChannelClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 4), TmnxDSXClockSource().clone('loopTimed')).setMaxAccess("readcreate")
tmnxDS3ChannelChannelized = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 5), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("none", 1), ("ds1", 2), ("e1", 3), ("j1", 4),)).clone('none')).setMaxAccess("readcreate")
tmnxDS3ChannelSubrateCSUMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("notUsed", 0), ("digital-link", 1),)).clone('notUsed')).setMaxAccess("readcreate")
tmnxDS3ChannelSubrate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 7), Unsigned32()).setMaxAccess("readcreate")
tmnxDS3ChannelIdleCycleFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 8), TmnxDSXIdleCycleFlags().clone('flags')).setMaxAccess("readcreate")
tmnxDS3ChannelLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 9), TmnxDS3Loopback().clone('none')).setMaxAccess("readcreate")
tmnxDS3ChannelBitErrorInsertionRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(2,7),))).setMaxAccess("readcreate")
tmnxDS3ChannelBERTPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 11), TmnxDSXBertPattern().clone('none')).setMaxAccess("readcreate")
tmnxDS3ChannelBERTDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,86400))).setUnits('seconds').setMaxAccess("readcreate")
tmnxDS3ChannelMDLEicString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,10))).setMaxAccess("readcreate")
tmnxDS3ChannelMDLLicString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,11))).setMaxAccess("readcreate")
tmnxDS3ChannelMDLFicString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,10))).setMaxAccess("readcreate")
tmnxDS3ChannelMDLUnitString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,6))).setMaxAccess("readcreate")
tmnxDS3ChannelMDLPfiString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,38))).setMaxAccess("readcreate")
tmnxDS3ChannelMDLPortString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,38))).setMaxAccess("readcreate")
tmnxDS3ChannelMDLGenString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,38))).setMaxAccess("readcreate")
tmnxDS3ChannelMDLMessageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 20), Bits().clone(namedValues=NamedValues(("none", 0), ("ds3Path", 1), ("idleSignal", 2), ("testSignal", 3),)).clone(namedValues=NamedValues(("none", 0),))).setMaxAccess("readcreate")
tmnxDS3ChannelFEACLoopRespond = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
tmnxDS3ChannelCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 22), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("crc16", 1), ("crc32", 2),)).clone('crc16')).setMaxAccess("readcreate")
tmnxDS3ChannelMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 23), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(512,9208),))).setUnits('bytes').setMaxAccess("readcreate")
tmnxDS3ChannelOperMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 24), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
tmnxDS3ChannelReportAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 25), TmnxDSXReportAlarm().clone(namedValues=NamedValues(("ais", 1), ("los", 2),))).setMaxAccess("readcreate")
tmnxDS3ChannelReportAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 26), TmnxDSXReportAlarm()).setMaxAccess("readonly")
tmnxDS3ChannelLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 27), TimeStamp()).setMaxAccess("readonly")
tmnxDS3ChannelInFEACLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 28), TruthValue()).setMaxAccess("readonly")
tmnxDS3ChannelMDLMonPortString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,38))).setMaxAccess("readonly")
tmnxDS3ChannelMDLMonGenString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,38))).setMaxAccess("readonly")
tmnxDS3ChannelBERTOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 31), TmnxDSXBertOperStatus()).setMaxAccess("readonly")
tmnxDS3ChannelBERTSynched = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 32), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
tmnxDS3ChannelBERTErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 33), Counter64()).setMaxAccess("readonly")
tmnxDS3ChannelBERTTotalBits = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 34), Counter64()).setMaxAccess("readonly")
tmnxDS3ChannelScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 35), TruthValue()).setMaxAccess("readcreate")
tmnxDS3ChannelAcctPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readcreate")
tmnxDS3ChannelCollectStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 37), TruthValue().clone('true')).setMaxAccess("readcreate")
tmnxDS3ChannelClockSyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 38), TmnxDSXClockSyncState()).setMaxAccess("readonly")
tmnxDS3ChannelClockMasterPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 11, 1, 39), TmnxPortID()).setMaxAccess("readonly")
tmnxDS1Table = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12), )
tmnxDS1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxDS1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 1), RowStatus()).setMaxAccess("readcreate")
tmnxDS1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("ds1", 1), ("e1", 2), ("j1", 3),))).setMaxAccess("readonly")
tmnxDS1Framing = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6,)).clone(namedValues=NamedValues(("esf", 1), ("sf", 2), ("g704-no-crc", 3), ("g704", 4), ("e1-unframed", 5), ("ds1-unframed", 6),)).clone('esf')).setMaxAccess("readcreate")
tmnxDS1IdleCycleFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 4), TmnxDSXIdleCycleFlags().clone('flags')).setMaxAccess("readcreate")
tmnxDS1Loopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 5), TmnxDS1Loopback().clone('none')).setMaxAccess("readcreate")
tmnxDS1InvertData = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
tmnxDS1BitErrorInsertionRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(2,7),))).setMaxAccess("readcreate")
tmnxDS1BERTPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 8), TmnxDSXBertPattern().clone('none')).setMaxAccess("readcreate")
tmnxDS1BERTDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,86400))).setUnits('seconds').setMaxAccess("readcreate")
tmnxDS1ReportAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 10), TmnxDSXReportAlarm().clone(namedValues=NamedValues(("ais", 1), ("los", 2),))).setMaxAccess("readcreate")
tmnxDS1ReportAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 11), TmnxDSXReportAlarm()).setMaxAccess("readonly")
tmnxDS1LastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 12), TimeStamp()).setMaxAccess("readonly")
tmnxDS1ClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 13), TmnxDSXClockSource().clone('loopTimed')).setMaxAccess("readcreate")
tmnxDS1BERTOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 14), TmnxDSXBertOperStatus()).setMaxAccess("readonly")
tmnxDS1BERTSynched = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 15), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
tmnxDS1BERTErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 16), Counter64()).setMaxAccess("readonly")
tmnxDS1BERTTotalBits = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 17), Counter64()).setMaxAccess("readonly")
tmnxDS1RemoteLoopRespond = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
tmnxDS1InRemoteLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 19), TruthValue()).setMaxAccess("readonly")
tmnxDS1InsertSingleBitError = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 20), TmnxActionType()).setMaxAccess("readcreate")
tmnxDS1SignalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 21), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("none", 1), ("cas", 2),)).clone('none')).setMaxAccess("readcreate")
tmnxDS1ClockSyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 22), TmnxDSXClockSyncState()).setMaxAccess("readonly")
tmnxDS1ClockMasterPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 23), TmnxPortID()).setMaxAccess("readonly")
tmnxDS1BerSdThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 24), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1,1),ValueRangeConstraint(5,5),ValueRangeConstraint(10,10),ValueRangeConstraint(50,50),ValueRangeConstraint(100,100),)).clone(5)).setUnits('error bits in million bits received').setMaxAccess("readcreate")
tmnxDS1BerSfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 25), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1,1),ValueRangeConstraint(5,5),ValueRangeConstraint(10,10),ValueRangeConstraint(50,50),ValueRangeConstraint(100,100),)).clone(50)).setUnits('error bits in million bits received').setMaxAccess("readcreate")
tmnxDS1NationalUseBits = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 12, 1, 26), Bits().clone(namedValues=NamedValues(("sa4", 0), ("sa5", 1), ("sa6", 2), ("sa7", 3), ("sa8", 4),))).setMaxAccess("readcreate")
tmnxDS0ChanGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13), )
tmnxDS0ChanGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxDS0ChanGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 1), RowStatus()).setMaxAccess("readcreate")
tmnxDS0ChanGroupTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 2), TmnxDs0ChannelList()).setMaxAccess("readcreate")
tmnxDS0ChanGroupSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("speed-56", 1), ("speed-64", 2),))).setMaxAccess("readcreate")
tmnxDS0ChanGroupCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("crc16", 1), ("crc32", 2),)).clone('crc16')).setMaxAccess("readcreate")
tmnxDS0ChanGroupMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(512,9208),))).setUnits('bytes').setMaxAccess("readcreate")
tmnxDS0ChanGroupOperMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 6), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
tmnxDS0ChanGroupLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 7), TimeStamp()).setMaxAccess("readonly")
tmnxDS0ChanGroupIdleCycleFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 8), TmnxDSXIdleCycleFlags().clone('flags')).setMaxAccess("readcreate")
tmnxDS0ChanGroupScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 9), TruthValue()).setMaxAccess("readcreate")
tmnxDS0ChanGroupAcctPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readcreate")
tmnxDS0ChanGroupCollectStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 11), TruthValue().clone('true')).setMaxAccess("readcreate")
tmnxDS0ChanGroupPayloadFillType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 12), TmnxDSXIdleFillType().clone('notApplicable')).setMaxAccess("readcreate")
tmnxDS0ChanGroupPayloadPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,255))).setMaxAccess("readcreate")
tmnxDS0ChanGroupSignalFillType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 14), TmnxDSXIdleFillType().clone('notApplicable')).setMaxAccess("readcreate")
tmnxDS0ChanGroupSignalPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,15))).setMaxAccess("readcreate")
tmnxDS0ChanGroupBerSfLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 13, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
tmnxBundleTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14), )
tmnxBundleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxBundleBundleID"))
tmnxBundleBundleID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 1), TmnxBundleID())
tmnxBundleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 2), RowStatus()).setMaxAccess("readcreate")
tmnxBundleType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("mlppp", 1), ("mlfr", 2), ("imagrp", 3),)).clone('mlppp')).setMaxAccess("readcreate")
tmnxBundleMinimumLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,8))).setMaxAccess("readcreate")
tmnxBundleNumLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 5), Unsigned32()).setMaxAccess("readonly")
tmnxBundleNumActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 6), Unsigned32()).setMaxAccess("readonly")
tmnxBundleMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(1500,9206),)).clone(1524)).setUnits('bytes').setMaxAccess("readcreate")
tmnxBundleOperMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 8), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
tmnxBundlePeerMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 9), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
tmnxBundleOperMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 10), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
tmnxBundleRedDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,25),ValueRangeConstraint(0,50),))).setUnits('milliseconds').setMaxAccess("readcreate")
tmnxBundleRedDiffDelayAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("none", 0), ("down", 1),)).clone('none')).setMaxAccess("readcreate")
tmnxBundleYellowDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,25))).setUnits('milliseconds').setMaxAccess("readcreate")
tmnxBundleShortSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
tmnxBundleLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 15), TimeStamp()).setMaxAccess("readonly")
tmnxBundleFragmentThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 16), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(128,512),)).clone(128)).setUnits('bytes').setMaxAccess("readcreate")
tmnxBundleUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 17), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
tmnxBundleInputDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 18), Counter32()).setMaxAccess("readonly")
tmnxBundlePrimaryMemberPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 19), TmnxPortID()).setMaxAccess("readonly")
tmnxBundleLFI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 20), TruthValue().clone('false')).setMaxAccess("readcreate")
tmnxBundleProtectedType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 21), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("none", 0), ("working", 1), ("protection", 2),)).clone('none')).setMaxAccess("readcreate")
tmnxBundleParentBundle = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 14, 1, 22), TmnxBundleID()).setMaxAccess("readcreate")
tmnxBundleMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 15), )
tmnxBundleMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 15, 1), ).setIndexNames((0, "TIMETRA-PORT-MIB", "tmnxBundleBundleID"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxBundleMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 15, 1, 1), RowStatus()).setMaxAccess("readcreate")
tmnxBundleMemberActive = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 15, 1, 2), TruthValue()).setMaxAccess("readonly")
tmnxBundleMemberDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 15, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7,)).clone(namedValues=NamedValues(("none", 0), ("outOfService", 1), ("redDiffDelayExceeded", 2), ("mismatchEndPtDiscriminator", 3), ("peerNotBundleMember", 4), ("underNegotiation", 5), ("peerInvalidMlHdrFmt", 6), ("other", 7),))).setMaxAccess("readonly")
tmnxBundleMemberUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 15, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
tmnxPortToChannelTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 16), )
tmnxPortToChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 16, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxChannelIdxString"))
tmnxChannelIdxString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 16, 1, 1), DisplayString())
tmnxChannelPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 16, 1, 2), TmnxPortID()).setMaxAccess("readonly")
tmnxPortIngrMdaQosStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17), )
tmnxPortIngrMdaQosStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxPortIngrMdaQos00StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 1), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos00StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 2), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos01StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 3), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos01StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 4), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos02StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 5), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos02StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 6), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos03StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 7), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos03StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 8), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos04StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 9), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos04StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 10), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos05StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 11), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos05StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 12), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos06StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 13), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos06StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 14), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos07StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 15), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos07StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 16), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos08StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 17), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos08StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 18), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos09StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 19), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos09StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 20), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos10StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 21), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos10StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 22), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos11StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 23), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos11StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 24), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos12StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 25), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos12StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 26), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos13StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 27), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos13StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 28), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos14StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 29), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos14StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 30), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos15StatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 31), Counter64()).setMaxAccess("readonly")
tmnxPortIngrMdaQos15StatDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 17, 1, 32), Counter64()).setMaxAccess("readonly")
tmnxSonetGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 18), )
tmnxSonetGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 18, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxSonetGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 18, 1, 1), TmnxMDAChanType()).setMaxAccess("readonly")
tmnxSonetGroupParentPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 18, 1, 2), TmnxPortID()).setMaxAccess("readonly")
tmnxSonetGroupChildType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 18, 1, 3), TmnxMDAChanType()).setMaxAccess("readwrite")
tmnxSonetGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 18, 1, 4), TNamedItemOrEmpty()).setMaxAccess("readonly")
tmnxCiscoHDLCTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 20), )
tmnxCiscoHDLCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 20, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxCiscoHDLCKeepAliveInt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,300)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
tmnxCiscoHDLCUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 20, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,3)).clone(1)).setMaxAccess("readcreate")
tmnxCiscoHDLCDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3,16)).clone(3)).setMaxAccess("readcreate")
tmnxCiscoHDLCOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 20, 1, 4), TmnxOperState()).setMaxAccess("readonly")
tmnxCiscoHDLCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 3), )
tmnxCiscoHDLCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 3, 1), )
tmnxCiscoHDLCEntry.registerAugmentions(("TIMETRA-PORT-MIB", "tmnxCiscoHDLCStatsEntry"))
tmnxCiscoHDLCStatsEntry.setIndexNames(*tmnxCiscoHDLCEntry.getIndexNames())
tmnxCiscoHDLCDiscardStatInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
tmnxCiscoHDLCDiscardStatOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
tmnxCiscoHDLCStatInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
tmnxCiscoHDLCStatOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
tmnxCiscoHDLCStatInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
tmnxCiscoHDLCStatOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
tmnxFRDlcmiTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1), )
tmnxFRDlcmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxFRDlcmiMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("dte", 1), ("dce", 2), ("bidir", 3),)).clone('dte')).setMaxAccess("readwrite")
tmnxFRDlcmiN392Dce = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,10)).clone(3)).setMaxAccess("readwrite")
tmnxFRDlcmiN393Dce = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,10)).clone(4)).setMaxAccess("readwrite")
tmnxFRDlcmiT392Dce = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5,30)).clone(15)).setUnits('seconds').setMaxAccess("readwrite")
tmnxFRDlcmiTxStatusEnqMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 5), Counter32()).setUnits('messages').setMaxAccess("readonly")
tmnxFRDlcmiRxStatusEnqMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 6), Counter32()).setUnits('messages').setMaxAccess("readonly")
tmnxFRDlcmiStatusEnqMsgTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 7), Counter32()).setUnits('messages').setMaxAccess("readonly")
tmnxFRDlcmiTxStatusMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 8), Counter32()).setUnits('messages').setMaxAccess("readonly")
tmnxFRDlcmiRxStatusMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 9), Counter32()).setUnits('messages').setMaxAccess("readonly")
tmnxFRDlcmiStatusMsgTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 10), Counter32()).setUnits('messages').setMaxAccess("readonly")
tmnxFRDlcmiDiscardedMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 11), Counter32()).setUnits('messages').setMaxAccess("readonly")
tmnxFRDlcmiInvRxSeqNumMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 1, 1, 12), Counter32()).setUnits('messages').setMaxAccess("readonly")
tmnxQosPoolAppTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2), )
tmnxQosPoolAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxObjectType"), (0, "TIMETRA-PORT-MIB", "tmnxObjectId"), (0, "TIMETRA-PORT-MIB", "tmnxObjectAppType"), (0, "TIMETRA-PORT-MIB", "tmnxObjectAppPool"))
tmnxObjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 51,)).clone(namedValues=NamedValues(("mda", 1), ("port", 2), ("unused", 3), ("bundle", 4), ("mpointQueues", 51),)))
tmnxObjectId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 2), TmnxPortID())
tmnxObjectAppType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 51,)).clone(namedValues=NamedValues(("accessIngress", 1), ("accessEgress", 2), ("networkIngress", 3), ("networkEgress", 4), ("system", 51),)))
tmnxObjectAppPool = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 4), TNamedItem())
tmnxObjectAppPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 5), RowStatus()).setMaxAccess("readwrite")
tmnxObjectAppResvCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,100),)).clone(-1)).setMaxAccess("readwrite")
tmnxObjectAppSlopePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 7), TNamedItem().clone('default')).setMaxAccess("readwrite")
tmnxObjectAppPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,100),)).clone(-1)).setMaxAccess("readwrite")
tmnxObjectAppResvCbsAmbrAlrmStep = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,100))).setUnits('percent').setMaxAccess("readwrite")
tmnxObjectAppResvCbsAmbrAlrmMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,100))).setUnits('percent').setMaxAccess("readwrite")
tmnxObjectAppAmbrAlrmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,1000))).setUnits('percent').setMaxAccess("readwrite")
tmnxObjectAppRedAlrmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 10, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,1000))).setUnits('percent').setMaxAccess("readwrite")
tmnxATMIntfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 1), )
tmnxATMIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 1, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxATMIntfCellFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("uni", 1), ("nni", 2),)).clone('uni')).setMaxAccess("readwrite")
tmnxATMIntfMinVpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,4095))).setMaxAccess("readwrite")
tmnxATMIntfMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("direct", 1), ("plcp", 2),)).clone('direct')).setMaxAccess("readwrite")
tmnxATMIntfCustomBufferMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxATMIntfBufferPool = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,100)).clone(100)).setMaxAccess("readwrite")
tmnxATMIntfVcThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(190,117000)).clone(190)).setMaxAccess("readwrite")
tmnxPortATMVpShaperTblLastCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 2), TimeStamp()).setMaxAccess("readonly")
tmnxPortATMVpShaperTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 3), )
tmnxPortATMVpShaperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 3, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxPortATMVpShaperVpi"))
tmnxPortATMVpShaperVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 3, 1, 1), AtmVpIdentifier())
tmnxPortATMVpShaperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
tmnxPortATMVpShaperLastMgmtCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
tmnxPortATMVpShaperEgrAtd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 11, 3, 1, 4), AtmTrafficDescrParamIndex().subtype(subtypeSpec=ValueRangeConstraint(1,1000))).setMaxAccess("readcreate")
tmnxPortNetIngressStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1), )
tmnxPortNetIngressStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxPortNetIngressQueueIndex"))
tmnxPortNetIngressQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1, 1), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1,16)))
tmnxPortNetIngressFwdInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1, 2), Counter64()).setMaxAccess("readonly")
tmnxPortNetIngressFwdOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1, 3), Counter64()).setMaxAccess("readonly")
tmnxPortNetIngressFwdInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1, 4), Counter64()).setMaxAccess("readonly")
tmnxPortNetIngressFwdOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1, 5), Counter64()).setMaxAccess("readonly")
tmnxPortNetIngressDroInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1, 6), Counter64()).setMaxAccess("readonly")
tmnxPortNetIngressDroOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1, 7), Counter64()).setMaxAccess("readonly")
tmnxPortNetIngressDroInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1, 8), Counter64()).setMaxAccess("readonly")
tmnxPortNetIngressDroOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 1, 1, 9), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgressStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2), )
tmnxPortNetEgressStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxPortNetEgressQueueIndex"))
tmnxPortNetEgressQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1, 1), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1,8)))
tmnxPortNetEgressFwdInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1, 2), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgressFwdOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1, 3), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgressFwdInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1, 4), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgressFwdOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1, 5), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgressDroInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1, 6), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgressDroOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1, 7), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgressDroInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1, 8), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgressDroOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 2, 1, 9), Counter64()).setMaxAccess("readonly")
tmnxMcMlpppStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 4), )
tmnxMcMlpppStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 4, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxBundleBundleID"), (0, "TIMETRA-PORT-MIB", "tmnxMcMlpppClassIndex"))
tmnxMcMlpppClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 4, 1, 1), TmnxMcMlpppClassIndex())
tmnxMcMlpppStatsIngressOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 4, 1, 2), Counter32()).setMaxAccess("readonly")
tmnxMcMlpppStatsIngressPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 4, 1, 3), Counter32()).setMaxAccess("readonly")
tmnxMcMlpppStatsIngressErrPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 4, 1, 4), Counter32()).setMaxAccess("readonly")
tmnxMcMlpppStatsEgressOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 4, 1, 5), Counter32()).setMaxAccess("readonly")
tmnxMcMlpppStatsEgressPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 4, 1, 6), Counter32()).setMaxAccess("readonly")
tmnxMcMlpppStatsEgressErrPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 4, 1, 7), Counter32()).setMaxAccess("readonly")
tmnxBundleImaGrpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21), )
tmnxBundleImaGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxBundleBundleID"))
tmnxBundleImaGrpLnkActTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,30000)).clone(10000)).setUnits('milliseconds').setMaxAccess("readcreate")
tmnxBundleImaGrpLnkDeactTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,30000)).clone(2000)).setUnits('milliseconds').setMaxAccess("readcreate")
tmnxBundleImaGrpSymmetryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1,)).clone(namedValues=NamedValues(("symmetric", 1),)).clone('symmetric')).setMaxAccess("readcreate")
tmnxBundleImaGrpTxId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 4), Integer32()).setMaxAccess("readonly")
tmnxBundleImaGrpRxId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 5), Integer32()).setMaxAccess("readonly")
tmnxBundleImaGrpTxRefLnk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 6), TmnxPortID()).setMaxAccess("readonly")
tmnxBundleImaGrpRxRefLnk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 7), TmnxPortID()).setMaxAccess("readonly")
tmnxBundleImaGrpSmNeState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 8), TmnxImaGrpState()).setMaxAccess("readonly")
tmnxBundleImaGrpSmFeState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 9), TmnxImaGrpState()).setMaxAccess("readonly")
tmnxBundleImaGrpSmFailState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 10), TmnxImaGrpFailState()).setMaxAccess("readonly")
tmnxBundleImaGrpSmDownSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 11), Counter32()).setMaxAccess("readonly")
tmnxBundleImaGrpSmOperSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 12), Counter32()).setMaxAccess("readonly")
tmnxBundleImaGrpAvailTxCR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 13), Gauge32()).setMaxAccess("readonly")
tmnxBundleImaGrpAvailRxCR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 14), Gauge32()).setMaxAccess("readonly")
tmnxBundleImaGrpNeFails = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 15), Counter32()).setMaxAccess("readonly")
tmnxBundleImaGrpFeFails = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 16), Counter32()).setMaxAccess("readonly")
tmnxBundleImaGrpTxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 17), Counter32()).setMaxAccess("readonly")
tmnxBundleImaGrpRxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 18), Counter32()).setMaxAccess("readonly")
tmnxBundleImaGrpErrorIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 19), Counter32()).setMaxAccess("readonly")
tmnxBundleImaGrpLostRxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 20), Counter32()).setMaxAccess("readonly")
tmnxBundleImaGrpTxOamLablVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 21), Integer32()).setMaxAccess("readonly")
tmnxBundleImaGrpRxOamLablVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 22), Integer32()).setMaxAccess("readonly")
tmnxBundleImaGrpAlphaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 23), Integer32().clone(2)).setMaxAccess("readcreate")
tmnxBundleImaGrpBetaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 24), Integer32().clone(2)).setMaxAccess("readcreate")
tmnxBundleImaGrpGammaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 25), Integer32().clone(1)).setMaxAccess("readcreate")
tmnxBundleImaGrpNeClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 26), TmnxImaGrpClockModes().clone('ctc')).setMaxAccess("readcreate")
tmnxBundleImaGrpFeClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 27), TmnxImaGrpClockModes().clone('ctc')).setMaxAccess("readcreate")
tmnxBundleImaGrpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 28), TmnxImaGrpVersion().clone('oneDotOne')).setMaxAccess("readcreate")
tmnxBundleImaGrpMaxConfBw = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,8)).clone(8)).setMaxAccess("readcreate")
tmnxBundleImaGrpTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 30), TmnxImaTestState().clone('disabled')).setMaxAccess("readcreate")
tmnxBundleImaGrpTestMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 31), TmnxPortID()).setMaxAccess("readcreate")
tmnxBundleImaGrpTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,255))).setMaxAccess("readcreate")
tmnxBundleImaGrpDiffDelayMaxObs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 33), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
tmnxBundleImaGrpLeastDelayLink = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 21, 1, 34), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
tmnxBundleMemberImaTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22), )
tmnxBundleMemberImaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1), ).setIndexNames((0, "TIMETRA-PORT-MIB", "tmnxBundleBundleID"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxBundleMemberImaNeTxState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 1), TmnxImaLnkState()).setMaxAccess("readonly")
tmnxBundleMemberImaNeRxState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 2), TmnxImaLnkState()).setMaxAccess("readonly")
tmnxBundleMemberImaFeTxState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 3), TmnxImaLnkState()).setMaxAccess("readonly")
tmnxBundleMemberImaFeRxState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 4), TmnxImaLnkState()).setMaxAccess("readonly")
tmnxBundleMemberImaNeRxFailState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 5), TmnxImaLnkFailState()).setMaxAccess("readonly")
tmnxBundleMemberImaFeRxFailState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 6), TmnxImaLnkFailState()).setMaxAccess("readonly")
tmnxBundleMemberImaTxLid = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 7), Integer32()).setMaxAccess("readonly")
tmnxBundleMemberImaRxLid = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 8), Integer32()).setMaxAccess("readonly")
tmnxBundleMemberImaViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 9), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaNeSevErrSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 10), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaFeSevErrSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 11), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaNeUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 12), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaFeUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 13), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaNeTxUnuseSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 14), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaNeRxUnuseSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 15), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaFeTxUnuseSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 16), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaFeRxUnuseSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 17), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaNeTxNumFails = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 18), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaNeRxNumFails = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 19), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaFeTxNumFails = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 20), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaFeRxNumFails = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 21), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaTxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 22), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaRxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 23), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaErrorIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 24), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaLstRxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 25), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaOifAnomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 26), Counter32()).setMaxAccess("readonly")
tmnxBundleMemberImaRxTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 27), TmnxImaTestState()).setMaxAccess("readonly")
tmnxBundleMemberImaRxTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,255))).setMaxAccess("readonly")
tmnxBundleMemberImaRelDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 22, 1, 29), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
tmnxPortScalarObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 19))
tmnxL4LoadBalancing = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 19, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
tmnxLsrIpLoadBalancing = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 19, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("label-only", 1), ("label-ip", 2), ("ip-only", 3),)).clone('label-only')).setMaxAccess("readwrite")
tmnxIpLoadBalancing = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 19, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("standard", 1), ("systemIp", 2),)).clone('standard')).setMaxAccess("readwrite")
tmnxDS1PortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 23), )
tmnxDS1PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 23, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxDS1PortBuildout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 23, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("short", 1), ("long", 2),)).clone('short')).setMaxAccess("readcreate")
tmnxDS1PortLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 23, 1, 2), TimeStamp()).setMaxAccess("readonly")
tmnxDS1PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 23, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("ds1", 1), ("e1", 2), ("j1", 3),)).clone('ds1')).setMaxAccess("readcreate")
tmnxDS1PortLineLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 23, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6,)).clone(namedValues=NamedValues(("lengthNotApplicable", 1), ("length0To133", 2), ("length134To266", 3), ("length267To399", 4), ("length400To533", 5), ("length534To655", 6),))).setMaxAccess("readcreate")
tmnxDS1PortLbo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 23, 1, 5), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("lboNotApplicable", 1), ("lbo0dB", 2), ("lboNeg7p5dB", 3), ("lboNeg15p0dB", 4), ("lboNeg22p5dB", 5),))).setMaxAccess("readcreate")
tmnxDS1PortDbGain = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 23, 1, 6), Integer32()).setUnits('db').setMaxAccess("readonly")
tmnxPortSchedOverrideTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24), )
tmnxPortSchedOverrideEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxPortSchedOverrideRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 1), RowStatus()).setMaxAccess("readcreate")
tmnxPortSchedOverrideSchedName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 2), DisplayString()).setMaxAccess("readonly")
tmnxPortSchedOverrideLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 3), TimeStamp()).setMaxAccess("readonly")
tmnxPortSchedOverrideMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 4), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl1PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 5), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl1CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 6), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl2PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 7), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl2CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 8), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl3PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 9), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl3CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 10), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl4PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 11), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl4CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 12), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl5PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 13), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl5CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 14), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl6PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 15), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl6CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 16), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl7PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 17), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl7CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 18), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl8PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 19), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideLvl8CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 20), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tmnxPortSchedOverrideFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 24, 1, 21), Bits().clone(namedValues=NamedValues(("maxRate", 0), ("lvl1PIR", 1), ("lvl1CIR", 2), ("lvl2PIR", 3), ("lvl2CIR", 4), ("lvl3PIR", 5), ("lvl3CIR", 6), ("lvl4PIR", 7), ("lvl4CIR", 8), ("lvl5PIR", 9), ("lvl5CIR", 10), ("lvl6PIR", 11), ("lvl6CIR", 12), ("lvl7PIR", 13), ("lvl7CIR", 14), ("lvl8PIR", 15), ("lvl8CIR", 16),))).setMaxAccess("readcreate")
tmnxBPGrpAssocTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 25), )
tmnxBPGrpAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 25, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxBundleBundleID"))
tmnxBPGrpAssocWorkingBundleID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 25, 1, 1), TmnxBundleID()).setMaxAccess("readonly")
tmnxBPGrpAssocProtectBundleID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 25, 1, 2), TmnxBundleID()).setMaxAccess("readonly")
tmnxBPGrpAssocActiveBundleID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 25, 1, 3), TmnxBundleID()).setMaxAccess("readonly")
tmnxBundleMlpppTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 26), )
tmnxBundleMlpppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 26, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxBundleBundleID"))
tmnxBundleMlpppEndpointID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 26, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,20))).setMaxAccess("readcreate")
tmnxBundleMlpppEndpointIDClass = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 26, 1, 2), TmnxMlpppEndpointIdClass()).setMaxAccess("readcreate")
tmnxBundleMlpppClassCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 26, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,16))).setMaxAccess("readcreate")
tmnxBundleMlpppIngQoSProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 26, 1, 4), TMlpppQoSProfileId()).setMaxAccess("readcreate")
tmnxBundleMlpppEgrQoSProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 26, 1, 5), TMlpppQoSProfileId()).setMaxAccess("readcreate")
tmnxBundleMlpppMagicNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 26, 1, 6), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
tmnxBundleMlpppStatelessApsSwo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 26, 1, 7), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrTblLastChngd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 27), TimeStamp()).setMaxAccess("readonly")
tmnxHsmdaPortSchOvrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28), )
tmnxHsmdaPortSchOvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxHsmdaPortSchOvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 1), RowStatus()).setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 2), TimeStamp()).setMaxAccess("readonly")
tmnxHsmdaPortSchOvrMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 3), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrGrp1Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 4), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrGrp2Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 5), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass1Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 6), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass1WtInGp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 7), THsmdaWeightOverride().clone(-2)).setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass2Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 8), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass2WtInGp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 9), THsmdaWeightOverride().clone(-2)).setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass3Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 10), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass3WtInGp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 11), THsmdaWeightOverride().clone(-2)).setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass4Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 12), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass4WtInGp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 13), THsmdaWeightOverride().clone(-2)).setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass5Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 14), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass5WtInGp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 15), THsmdaWeightOverride().clone(-2)).setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass6Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 16), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass6WtInGp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 17), THsmdaWeightOverride().clone(-2)).setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass7Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 18), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass7WtInGp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 19), THsmdaWeightOverride().clone(-2)).setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass8Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 20), THsmdaPIRMRateOverride().clone(-2)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxHsmdaPortSchOvrClass8WtInGp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 28, 1, 21), THsmdaWeightOverride().clone(-2)).setMaxAccess("readcreate")
tmnxPortEgrShaperTblLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 29), TimeStamp()).setMaxAccess("readonly")
tmnxPortEgrShaperTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 30), )
tmnxPortEgrShaperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 30, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxPortEgrShaperName"))
tmnxPortEgrShaperName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 30, 1, 1), TNamedItem())
tmnxPortEgrShaperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 30, 1, 2), RowStatus()).setMaxAccess("readcreate")
tmnxPortEgrShaperLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 30, 1, 3), TimeStamp()).setMaxAccess("readonly")
tmnxPortEgrShaperRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 30, 1, 4), TSecondaryShaper10GPIRRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
tmnxDigitalDiagMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31), )
tmnxDigitalDiagMonitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxDDMTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 1), Integer32()).setMaxAccess("readonly")
tmnxDDMTempLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 2), Integer32()).setMaxAccess("readonly")
tmnxDDMTempLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 3), Integer32()).setMaxAccess("readonly")
tmnxDDMTempHiWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 4), Integer32()).setMaxAccess("readonly")
tmnxDDMTempHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 5), Integer32()).setMaxAccess("readonly")
tmnxDDMSupplyVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 6), Integer32()).setMaxAccess("readonly")
tmnxDDMSupplyVoltageLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 7), Integer32()).setMaxAccess("readonly")
tmnxDDMSupplyVoltageLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 8), Integer32()).setMaxAccess("readonly")
tmnxDDMSupplyVoltageHiWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 9), Integer32()).setMaxAccess("readonly")
tmnxDDMSupplyVoltageHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 10), Integer32()).setMaxAccess("readonly")
tmnxDDMTxBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 11), Integer32()).setMaxAccess("readonly")
tmnxDDMTxBiasCurrentLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 12), Integer32()).setMaxAccess("readonly")
tmnxDDMTxBiasCurrentLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 13), Integer32()).setMaxAccess("readonly")
tmnxDDMTxBiasCurrentHiWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 14), Integer32()).setMaxAccess("readonly")
tmnxDDMTxBiasCurrentHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 15), Integer32()).setMaxAccess("readonly")
tmnxDDMTxOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 16), Integer32()).setMaxAccess("readonly")
tmnxDDMTxOutputPowerLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 17), Integer32()).setMaxAccess("readonly")
tmnxDDMTxOutputPowerLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 18), Integer32()).setMaxAccess("readonly")
tmnxDDMTxOutputPowerHiWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 19), Integer32()).setMaxAccess("readonly")
tmnxDDMTxOutputPowerHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 20), Integer32()).setMaxAccess("readonly")
tmnxDDMRxOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 21), Integer32()).setMaxAccess("readonly")
tmnxDDMRxOpticalPowerLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 22), Integer32()).setMaxAccess("readonly")
tmnxDDMRxOpticalPowerLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 23), Integer32()).setMaxAccess("readonly")
tmnxDDMRxOpticalPowerHiWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 24), Integer32()).setMaxAccess("readonly")
tmnxDDMRxOpticalPowerHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 25), Integer32()).setMaxAccess("readonly")
tmnxDDMRxOpticalPowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 26), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("oma", 0), ("average", 1),))).setMaxAccess("readonly")
tmnxDDMAux1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 27), Integer32()).setMaxAccess("readonly")
tmnxDDMAux1LowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 28), Integer32()).setMaxAccess("readonly")
tmnxDDMAux1LowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 29), Integer32()).setMaxAccess("readonly")
tmnxDDMAux1HiWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 30), Integer32()).setMaxAccess("readonly")
tmnxDDMAux1HiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 31), Integer32()).setMaxAccess("readonly")
tmnxDDMAux1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 32), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,)).clone(namedValues=NamedValues(("none", 0), ("adp-bias-voltage", 1), ("reserved-2", 2), ("tec-current", 3), ("laser-temp", 4), ("laser-wavelength", 5), ("voltage-50", 6), ("voltage-33", 7), ("voltage-18", 8), ("voltage-52", 9), ("current-50", 10), ("reserved-11", 11), ("reserved-12", 12), ("current-33", 13), ("current-18", 14), ("current-52", 15),))).setMaxAccess("readonly")
tmnxDDMAux2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 33), Integer32()).setMaxAccess("readonly")
tmnxDDMAux2LowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 34), Integer32()).setMaxAccess("readonly")
tmnxDDMAux2LowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 35), Integer32()).setMaxAccess("readonly")
tmnxDDMAux2HiWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 36), Integer32()).setMaxAccess("readonly")
tmnxDDMAux2HiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 37), Integer32()).setMaxAccess("readonly")
tmnxDDMAux2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 38), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,)).clone(namedValues=NamedValues(("none", 0), ("adp-bias-voltage", 1), ("reserved-2", 2), ("tec-current", 3), ("laser-temp", 4), ("laser-wavelength", 5), ("voltage-50", 6), ("voltage-33", 7), ("voltage-18", 8), ("voltage-52", 9), ("current-50", 10), ("reserved-11", 11), ("reserved-12", 12), ("current-33", 13), ("current-18", 14), ("current-52", 15),))).setMaxAccess("readonly")
tmnxDDMFailedThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 39), TmnxDigitalDiagnosticFailureBits()).setMaxAccess("readonly")
tmnxDDMExternallyCalibrated = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 40), TruthValue()).setMaxAccess("readonly")
tmnxDDMExtCalRxPower4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 41), Unsigned32()).setMaxAccess("readonly")
tmnxDDMExtCalRxPower3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 42), Unsigned32()).setMaxAccess("readonly")
tmnxDDMExtCalRxPower2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 43), Unsigned32()).setMaxAccess("readonly")
tmnxDDMExtCalRxPower1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 44), Unsigned32()).setMaxAccess("readonly")
tmnxDDMExtCalRxPower0 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 45), Unsigned32()).setMaxAccess("readonly")
tmnxDDMExtCalTxLaserBiasSlope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 46), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readonly")
tmnxDDMExtCalTxLaserBiasOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767,32768))).setMaxAccess("readonly")
tmnxDDMExtCalTxPowerSlope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 48), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readonly")
tmnxDDMExtCalTxPowerOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767,32768))).setMaxAccess("readonly")
tmnxDDMExtCalTemperatureSlope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 50), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readonly")
tmnxDDMExtCalTemperatureOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767,32768))).setMaxAccess("readonly")
tmnxDDMExtCalVoltageSlope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 52), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readonly")
tmnxDDMExtCalVoltageOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 31, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767,32768))).setMaxAccess("readonly")
tPortAccIngQGrpTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 32), TimeStamp()).setMaxAccess("readonly")
tPortAccIngQGrpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 33), )
tPortAccIngQGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 33, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortAccIngQGrpName"))
tPortAccIngQGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 33, 1, 1), TNamedItem())
tPortAccIngQGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 33, 1, 2), RowStatus()).setMaxAccess("readcreate")
tPortAccIngQGrpLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 33, 1, 3), TimeStamp()).setMaxAccess("readonly")
tPortAccIngQGrpSchedPol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 33, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
tPortAccIngQGrpAcctgPolId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 33, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readcreate")
tPortAccIngQGrpCollectStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 33, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
tPortAccIngQGrpDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 33, 1, 7), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
tPortAccIngQOverTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 34), TimeStamp()).setMaxAccess("readonly")
tPortAccIngQOverTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35), )
tPortAccIngQOverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortAccIngQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortAccIngQOverQueue"))
tPortAccIngQOverQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 1), TIngressQueueId().subtype(subtypeSpec=ValueRangeConstraint(1,32)))
tPortAccIngQOverRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 2), RowStatus()).setMaxAccess("readcreate")
tPortAccIngQOverLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 3), TimeStamp()).setMaxAccess("readonly")
tPortAccIngQOverCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 4), TBurstSizeOverride().clone(-2)).setUnits('kilo-bytes').setMaxAccess("readcreate")
tPortAccIngQOverMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 5), TBurstSizeOverride().clone(-2)).setUnits('kilo-bytes').setMaxAccess("readcreate")
tPortAccIngQOverHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 6), TBurstPercentOrDefaultOverride().clone(-2)).setMaxAccess("readcreate")
tPortAccIngQOverAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 7), TPIRRateOverride().clone(-2)).setUnits('kbps').setMaxAccess("readcreate")
tPortAccIngQOverAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 8), TCIRRateOverride().clone(-2)).setUnits('kbps').setMaxAccess("readcreate")
tPortAccIngQOverPIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 9), TAdaptationRuleOverride().clone('noOverride')).setMaxAccess("readcreate")
tPortAccIngQOverCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 10), TAdaptationRuleOverride().clone('noOverride')).setMaxAccess("readcreate")
tPortAccIngQOverMBSBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 35, 1, 11), TBurstSizeBytesOverride().clone(-2)).setUnits('bytes').setMaxAccess("readcreate")
tPortAccEgrQGrpTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 36), TimeStamp()).setMaxAccess("readonly")
tPortAccEgrQGrpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37), )
tPortAccEgrQGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortAccEgrQGrpName"))
tPortAccEgrQGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1, 1), TNamedItem())
tPortAccEgrQGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1, 2), RowStatus()).setMaxAccess("readcreate")
tPortAccEgrQGrpLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1, 3), TimeStamp()).setMaxAccess("readonly")
tPortAccEgrQGrpSchedPol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
tPortAccEgrQGrpAggRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1, 5), TPortSchedulerPIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tPortAccEgrQGrpAcctgPolId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readcreate")
tPortAccEgrQGrpCollectStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
tPortAccEgrQGrpFrameBaseActg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
tPortAccEgrQGrpDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 37, 1, 9), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
tPortAccEgrQOverTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 38), TimeStamp()).setMaxAccess("readonly")
tPortAccEgrQOverTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39), )
tPortAccEgrQOverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortAccEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortAccEgrQOverQueue"))
tPortAccEgrQOverQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 1), TEgressQueueId().subtype(subtypeSpec=ValueRangeConstraint(1,8)))
tPortAccEgrQOverRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 2), RowStatus()).setMaxAccess("readcreate")
tPortAccEgrQOverLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 3), TimeStamp()).setMaxAccess("readonly")
tPortAccEgrQOverCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 4), TBurstSizeOverride().clone(-2)).setUnits('kilo-bytes').setMaxAccess("readcreate")
tPortAccEgrQOverMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 5), TBurstSizeOverride().clone(-2)).setUnits('kilo-bytes').setMaxAccess("readcreate")
tPortAccEgrQOverHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 6), TBurstPercentOrDefaultOverride().clone(-2)).setMaxAccess("readcreate")
tPortAccEgrQOverAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 7), TPIRRateOverride().clone(-2)).setUnits('kbps').setMaxAccess("readcreate")
tPortAccEgrQOverAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 8), TCIRRateOverride().clone(-2)).setUnits('kbps').setMaxAccess("readcreate")
tPortAccEgrQOverPIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 9), TAdaptationRuleOverride().clone('noOverride')).setMaxAccess("readcreate")
tPortAccEgrQOverCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 10), TAdaptationRuleOverride().clone('noOverride')).setMaxAccess("readcreate")
tPortAccEgrQOverMBSBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 11), TBurstSizeBytesOverride().clone(-2)).setUnits('bytes').setMaxAccess("readcreate")
tPortAccEgrQOverAdminPIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 12), TPIRPercentOverride().clone(-2)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
tPortAccEgrQOverAdminCIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 13), TCIRPercentOverride().clone(-2)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
tPortAccEgrQOverRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 39, 1, 14), TRateType().clone('kbps')).setMaxAccess("readcreate")
tPortNetEgrQGrpTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 40), TimeStamp()).setMaxAccess("readonly")
tPortNetEgrQGrpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41), )
tPortNetEgrQGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpInstanceId"))
tPortNetEgrQGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 1), TNamedItem())
tPortNetEgrQGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 2), RowStatus()).setMaxAccess("readcreate")
tPortNetEgrQGrpLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 3), TimeStamp()).setMaxAccess("readonly")
tPortNetEgrQGrpSchedPol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
tPortNetEgrQGrpAggRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 5), TPortSchedulerPIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tPortNetEgrQGrpAcctgPolId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readcreate")
tPortNetEgrQGrpCollectStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
tPortNetEgrQGrpFrameBaseActg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
tPortNetEgrQGrpDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 9), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
tPortNetEgrQGrpPlcrCntrlPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 10), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
tPortNetEgrQGrpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 41, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,65535)))
tPortNetEgrQOverTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 42), TimeStamp()).setMaxAccess("readonly")
tPortNetEgrQOverTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43), )
tPortNetEgrQOverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpInstanceId"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQOverQueue"))
tPortNetEgrQOverQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 1), TEgressQueueId().subtype(subtypeSpec=ValueRangeConstraint(1,8)))
tPortNetEgrQOverRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 2), RowStatus()).setMaxAccess("readcreate")
tPortNetEgrQOverLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 3), TimeStamp()).setMaxAccess("readonly")
tPortNetEgrQOverCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 4), TBurstSizeOverride().clone(-2)).setUnits('kilo-bytes').setMaxAccess("readcreate")
tPortNetEgrQOverMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 5), TBurstSizeOverride().clone(-2)).setUnits('kilo-bytes').setMaxAccess("readcreate")
tPortNetEgrQOverHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 6), TBurstPercentOrDefaultOverride().clone(-2)).setMaxAccess("readcreate")
tPortNetEgrQOverAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 7), TPIRRateOverride().clone(-2)).setUnits('kbps').setMaxAccess("readcreate")
tPortNetEgrQOverAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 8), TCIRRateOverride().clone(-2)).setUnits('kbps').setMaxAccess("readcreate")
tPortNetEgrQOverPIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 9), TAdaptationRuleOverride().clone('noOverride')).setMaxAccess("readcreate")
tPortNetEgrQOverCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 10), TAdaptationRuleOverride().clone('noOverride')).setMaxAccess("readcreate")
tPortNetEgrQOverMBSBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 11), TBurstSizeBytesOverride().clone(-2)).setUnits('bytes').setMaxAccess("readcreate")
tPortNetEgrQOverAdminPIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 12), TPIRPercentOverride().clone(-2)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
tPortNetEgrQOverAdminCIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 13), TCIRPercentOverride().clone(-2)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
tPortNetEgrQOverRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 43, 1, 14), TRateType().clone('kbps')).setMaxAccess("readcreate")
tmnxBundleMlfrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 44), )
tmnxBundleMlfrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 44, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxBundleBundleID"))
tmnxBundleMlfrBundleId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 44, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,49))).setMaxAccess("readcreate")
tmnxBundleMlfrIngQoSProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 44, 1, 4), TMcFrQoSProfileId()).setMaxAccess("readcreate")
tmnxBundleMlfrEgrQoSProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 44, 1, 5), TMcFrQoSProfileId()).setMaxAccess("readcreate")
tmnxBundleMlfrHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 44, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,180)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
tmnxBundleMlfrHelloRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 44, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,5)).clone(2)).setUnits('seconds').setMaxAccess("readcreate")
tmnxBundleMlfrAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 44, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,10)).clone(4)).setUnits('seconds').setMaxAccess("readcreate")
tmnxBundleMlfrLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 44, 1, 9), TimeStamp()).setMaxAccess("readonly")
tmnxFrIntfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 2), )
tmnxFrIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 2, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxFrIntfFrf12Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 2, 1, 1), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
tmnxFrIntfLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,49))).setMaxAccess("readcreate")
tmnxFrIntfLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
tmnxFrf12IntfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 3), )
tmnxFrf12IntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 3, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxFrf12IntfFragmentThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(128,512)).clone(128)).setMaxAccess("readcreate")
tmnxFrf12IntfEgrQoSProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 3, 1, 2), TMcFrQoSProfileId()).setMaxAccess("readcreate")
tmnxFrf12IntfLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 9, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
tmnxPortIngQosQStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45), )
tmnxPortIngQosQStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortAccIngQGrpName"), (0, "TIMETRA-PORT-MIB", "tmnxPortIngQosQStatQueueId"))
tmnxPortIngQosQStatQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 1), TIngressQueueId().subtype(subtypeSpec=ValueRangeConstraint(1,32)))
tmnxPortIngQosQStatOffHiPrioPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 2), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatDpdHiPrioPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 3), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatOffLoPrioPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 4), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatDpdLoPrioPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 5), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatOffHiPrioOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 6), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatDpdHiPrioOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 7), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatOffLoPrioOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 8), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatDpdLoPrioOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 9), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatFwdInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 10), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatFwdOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 11), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatFwdInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 12), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatFwdOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 13), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatUncolPktsOff = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 14), Counter64()).setMaxAccess("readonly")
tmnxPortIngQosQStatUncolOctsOff = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 45, 1, 15), Counter64()).setMaxAccess("readonly")
tmnxPortEgrQosQStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46), )
tmnxPortEgrQosQStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortAccEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatQueueId"))
tmnxPortEgrQosQStatQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1, 1), TEgressQueueId().subtype(subtypeSpec=ValueRangeConstraint(1,8)))
tmnxPortEgrQosQStatFwdInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1, 2), Counter64()).setMaxAccess("readonly")
tmnxPortEgrQosQStatDpdInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1, 3), Counter64()).setMaxAccess("readonly")
tmnxPortEgrQosQStatFwdOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1, 4), Counter64()).setMaxAccess("readonly")
tmnxPortEgrQosQStatDpdOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1, 5), Counter64()).setMaxAccess("readonly")
tmnxPortEgrQosQStatFwdInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1, 6), Counter64()).setMaxAccess("readonly")
tmnxPortEgrQosQStatDpdInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1, 7), Counter64()).setMaxAccess("readonly")
tmnxPortEgrQosQStatFwdOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1, 8), Counter64()).setMaxAccess("readonly")
tmnxPortEgrQosQStatDpdOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 46, 1, 9), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgrQStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5), )
tmnxPortNetEgrQStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpInstanceId"), (0, "TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatQueueId"))
tmnxPortNetEgrQFwdInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5, 1, 1), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgrQFwdOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5, 1, 2), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgrQFwdInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5, 1, 3), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgrQFwdOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5, 1, 4), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgrQDroInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5, 1, 5), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgrQDroOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5, 1, 6), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgrQDroInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5, 1, 7), Counter64()).setMaxAccess("readonly")
tmnxPortNetEgrQDroOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 5, 1, 8), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7), )
tPortNetEgrQGrpPStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpInstanceId"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStatQosPolicerId"))
tPortNetEgrQGrpPStatQosPolicerId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 1), TEgrPolicerId())
tPortNetEgrQGrpPStatMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 2), TmnxEgrPolicerStatMode()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffInProfPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 3), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffInProfPktL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 4), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffInProfPktH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 5), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdInProfPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 6), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdInProfPktL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 7), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdInProfPktH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 8), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpInProfPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 9), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpInProfPktL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 10), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpInProfPktH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 11), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffOutProfPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 12), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffOutProfPktL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 13), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffOutProfPktH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 14), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdOutProfPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 15), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdOutProfPktL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 16), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdOutProfPktH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 17), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpOutProfPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 18), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpOutProfPktL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 19), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpOutProfPktH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 20), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffInProfOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 21), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffInProfOctL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 22), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffInProfOctH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 23), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdInProfOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 24), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdInProfOctL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 25), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdInProfOctH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 26), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpInProfOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 27), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpInProfOctL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 28), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpInProfOctH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 29), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffOutProfOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 30), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffOutProfOctL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 31), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStOffOutProfOctH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 32), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdOutProfOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 33), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdOutProfOctL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 34), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStFwdOutProfOctH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 35), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpOutProfOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 36), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpOutProfOctL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 37), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStDrpOutProfOctH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 38), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStUncolPktOff = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 39), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStUncolPktOffL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 40), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStUncolPktOffH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 41), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStUncolOctOff = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 42), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpPStUncolOctOffL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 43), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpPStUncolOctOffH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 7, 1, 44), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6), )
tmnxPortCemStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxPortCemStatsReportAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 1), Bits().clone(namedValues=NamedValues(("notUsed", 0), ("strayPkts", 1), ("malformedPkts", 2), ("pktLoss", 3), ("bfrOverrun", 4), ("bfrUnderrun", 5), ("rmtPktLoss", 6), ("rmtFault", 7), ("rmtRdi", 8),))).setMaxAccess("readonly")
tmnxPortCemStatsIgrForwardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 2), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsIgrDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 3), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrForwardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 4), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 5), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrMissingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 6), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrPktsReOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 7), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrJtrBfrURun = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 8), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrJtrBfrORun = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 9), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrMisOrderDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 10), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrMalformedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 11), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrLBitDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 12), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrMultipleDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 13), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 14), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 15), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 16), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrFailureCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 17), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrURunCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 18), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrORunCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 19), Counter32()).setMaxAccess("readonly")
tmnxPortCemStatsEgrJtrBfrDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 12, 6, 1, 20), Gauge32()).setMaxAccess("readonly")
tmnxBundleMemberMlfrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 47), )
tmnxBundleMemberMlfrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 47, 1), ).setIndexNames((0, "TIMETRA-PORT-MIB", "tmnxBundleBundleID"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxBundleMemberMlfrDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 47, 1, 1), TmnxMlfrLinkDownReason()).setMaxAccess("readonly")
tmnxWaveTrackerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48), )
tmnxWaveTrackerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxWaveTrackerPowerCtrlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
tmnxWaveTrackerEncodeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
tmnxWaveTrackerInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 3), TruthValue().clone('false')).setMaxAccess("readonly")
tmnxWaveTrackerTargetPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2200,300)).clone(-2000)).setUnits('mBm').setMaxAccess("readcreate")
tmnxWaveTrackerWaveKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4095))).setMaxAccess("readcreate")
tmnxWaveTrackerWaveKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4095))).setMaxAccess("readcreate")
tmnxWaveTrackerTrailName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,80))).setMaxAccess("readonly")
tmnxWaveTrackerCfgAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 8), TmnxWaveTrackerAlarm().clone(namedValues=NamedValues(("encFail", 0), ("encDegr", 1), ("pwrFail", 2), ("pwrDegr", 3), ("pwrHigh", 4), ("pwrLow", 5),))).setMaxAccess("readcreate")
tmnxWaveTrackerAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 9), TmnxWaveTrackerAlarm()).setMaxAccess("readonly")
tmnxWaveTrackerMeasuredPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 10), Integer32()).setUnits('mBm').setMaxAccess("readonly")
tmnxWaveTrackerMaxAttainablePwr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 11), Integer32()).setUnits('mBm').setMaxAccess("readonly")
tmnxWaveTrackerMinAttainablePwr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 12), Integer32()).setUnits('mBm').setMaxAccess("readonly")
tmnxWaveTrackerUpperPowerMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 13), Unsigned32()).setUnits('mB').setMaxAccess("readonly")
tmnxWaveTrackerLowerPowerMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 48, 1, 14), Unsigned32()).setUnits('mB').setMaxAccess("readonly")
tPortAccEgrQGrpHMTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 49), TimeStamp()).setMaxAccess("readonly")
tPortAccEgrQGrpHostMatchTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 50), )
tPortAccEgrQGrpHostMatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 50, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortAccEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortAccEgrQGrpHMIntDestId"), (0, "TIMETRA-PORT-MIB", "tPortAccEgrQGrpHMOrgString"))
tPortAccEgrQGrpHMIntDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 50, 1, 1), TmnxSubMgtIntDestId())
tPortAccEgrQGrpHMOrgString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 50, 1, 2), TmnxSubMgtOrgStrOrZero())
tPortAccEgrQGrpHMRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 50, 1, 3), RowStatus()).setMaxAccess("readcreate")
tPortAccEgrQGrpHMLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 50, 1, 4), TimeStamp()).setMaxAccess("readonly")
tPortAccIngSchedStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 51), )
tPortAccIngSchedStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 51, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortAccIngQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortAccIngSchedStatName"))
tPortAccIngSchedStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 51, 1, 1), TNamedItem())
tPortAccIngSchedStatFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 51, 1, 2), Counter64()).setMaxAccess("readonly")
tPortAccIngSchedStatFwdPktsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 51, 1, 3), Counter32()).setMaxAccess("readonly")
tPortAccIngSchedStatFwdPktsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 51, 1, 4), Counter32()).setMaxAccess("readonly")
tPortAccIngSchedStatFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 51, 1, 5), Counter64()).setMaxAccess("readonly")
tPortAccIngSchedStatFwdOctsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 51, 1, 6), Counter32()).setMaxAccess("readonly")
tPortAccIngSchedStatFwdOctsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 51, 1, 7), Counter32()).setMaxAccess("readonly")
tPortAccEgrSchedStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 52), )
tPortAccEgrSchedStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 52, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortAccEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortAccEgrSchedStatName"))
tPortAccEgrSchedStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 52, 1, 1), TNamedItem())
tPortAccEgrSchedStatFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 52, 1, 2), Counter64()).setMaxAccess("readonly")
tPortAccEgrSchedStatFwdPktsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 52, 1, 3), Counter32()).setMaxAccess("readonly")
tPortAccEgrSchedStatFwdPktsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 52, 1, 4), Counter32()).setMaxAccess("readonly")
tPortAccEgrSchedStatFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 52, 1, 5), Counter64()).setMaxAccess("readonly")
tPortAccEgrSchedStatFwdOctsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 52, 1, 6), Counter32()).setMaxAccess("readonly")
tPortAccEgrSchedStatFwdOctsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 52, 1, 7), Counter32()).setMaxAccess("readonly")
tPortNetEgrSchedStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 53), )
tPortNetEgrSchedStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 53, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpInstanceId"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrSchedStatName"))
tPortNetEgrSchedStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 53, 1, 1), TNamedItem())
tPortNetEgrSchedStatFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 53, 1, 2), Counter64()).setMaxAccess("readonly")
tPortNetEgrSchedStatFwdPktsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 53, 1, 3), Counter32()).setMaxAccess("readonly")
tPortNetEgrSchedStatFwdPktsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 53, 1, 4), Counter32()).setMaxAccess("readonly")
tPortNetEgrSchedStatFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 53, 1, 5), Counter64()).setMaxAccess("readonly")
tPortNetEgrSchedStatFwdOctsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 53, 1, 6), Counter32()).setMaxAccess("readonly")
tPortNetEgrSchedStatFwdOctsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 53, 1, 7), Counter32()).setMaxAccess("readonly")
tPortEgrVPortTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 54), TimeStamp()).setMaxAccess("readonly")
tPortEgrVPortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 55), )
tPortEgrVPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 55, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortEgrVPortName"))
tPortEgrVPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 55, 1, 1), TNamedItem())
tPortEgrVPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 55, 1, 2), RowStatus()).setMaxAccess("readcreate")
tPortEgrVPortLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 55, 1, 3), TimeStamp()).setMaxAccess("readonly")
tPortEgrVPortDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 55, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
tPortEgrVPortSchedPol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 55, 1, 5), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
tPortEgrVPortAggRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 55, 1, 6), TPortSchedulerPIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
tPortEgrVPortHMTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 56), TimeStamp()).setMaxAccess("readonly")
tPortEgrVPortHostMatchTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 57), )
tPortEgrVPortHostMatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 57, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortEgrVPortName"), (0, "TIMETRA-PORT-MIB", "tPortEgrVPortHMIntDestId"), (0, "TIMETRA-PORT-MIB", "tPortEgrVPortHMOrgString"))
tPortEgrVPortHMIntDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 57, 1, 1), TmnxSubMgtIntDestId())
tPortEgrVPortHMOrgString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 57, 1, 2), TmnxSubMgtOrgStrOrZero())
tPortEgrVPortHMRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 57, 1, 3), RowStatus()).setMaxAccess("readcreate")
tPortEgrVPortHMLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 57, 1, 4), TimeStamp()).setMaxAccess("readonly")
tmnxOpticalPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 58), )
tmnxOpticalPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 58, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxOpticalPortAmpCfgAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 58, 1, 1), TmnxOpticalAmpAlarm().clone(namedValues=NamedValues(("ampIld", 0), ("ampTmp", 1), ("ampMth", 2), ("ampMtl", 3), ("ampLos", 4), ("ampLop", 5), ("ampCom", 6),))).setMaxAccess("readwrite")
tmnxOpticalPortTdcmCtrlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 58, 1, 2), TmnxOpticalTdcmCtrlMode().clone('automatic')).setMaxAccess("readwrite")
tmnxOpticalPortTdcmManCfgDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 58, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1200,1200))).setUnits('picoseconds per nanometer').setMaxAccess("readwrite")
tmnxOpticalPortTdcmCfgRxChan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 58, 1, 4), TmnxOpticalDwdmChannel()).setMaxAccess("readwrite")
tmnxOpticalPortTdcmCfgAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 58, 1, 5), TmnxOpticalTdcmAlarm().clone(namedValues=NamedValues(("tdcmNotRdy", 0), ("tdcmMth", 1), ("tdcmMtl", 2), ("tdcmUnLck", 3), ("tdcmTmpLim", 4), ("tdcmEprInv", 5), ("tdcmCom", 6),))).setMaxAccess("readwrite")
tmnxOpticalPortTdcmDispSwpStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 58, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1200,1200)).clone(-1200)).setUnits('picoseconds per nanometer').setMaxAccess("readwrite")
tmnxOpticalPortTdcmDispSwpEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 58, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1200,1200)).clone(1200)).setUnits('picoseconds per nanometer').setMaxAccess("readwrite")
tmnxOpticalPortOperTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59), )
tmnxOpticalPortOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
tmnxOpticalPortHasRxAmplifier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 1), TruthValue()).setMaxAccess("readonly")
tmnxOpticalPortHasRxTdcm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 2), TruthValue()).setMaxAccess("readonly")
tmnxOpticalPortAmpPowerIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 3), Integer32()).setUnits('mBm').setMaxAccess("readonly")
tmnxOpticalPortAmpGain = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 4), Unsigned32()).setUnits('mB').setMaxAccess("readonly")
tmnxOpticalPortAmpPowerOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 5), Integer32()).setUnits('mBm').setMaxAccess("readonly")
tmnxOpticalPortAmpPumpTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 6), Integer32()).setUnits('millidegrees Celsius').setMaxAccess("readonly")
tmnxOpticalPortAmpModuleTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 7), Integer32()).setUnits('millidegrees Celsius').setMaxAccess("readonly")
tmnxOpticalPortAmpPumpCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 8), Unsigned32()).setUnits('microAmperes').setMaxAccess("readonly")
tmnxOpticalPortAmpAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 9), TmnxOpticalAmpAlarm()).setMaxAccess("readonly")
tmnxOpticalPortAmpSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,31))).setMaxAccess("readonly")
tmnxOpticalPortAmpCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 11), TmnxOpticalAmpCtrlState()).setMaxAccess("readonly")
tmnxOpticalPortTdcmPowerIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 12), Integer32()).setUnits('mBm').setMaxAccess("readonly")
tmnxOpticalPortTdcmLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 13), Unsigned32()).setUnits('mB').setMaxAccess("readonly")
tmnxOpticalPortTdcmPowerOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 14), Integer32()).setUnits('mBm').setMaxAccess("readonly")
tmnxOpticalPortTdcmRtd1Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 15), Integer32()).setUnits('millidegrees Celsius').setMaxAccess("readonly")
tmnxOpticalPortTdcmRtd2Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 16), Integer32()).setUnits('millidegrees Celsius').setMaxAccess("readonly")
tmnxOpticalPortTdcmRtd3Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 17), Integer32()).setUnits('millidegrees Celsius').setMaxAccess("readonly")
tmnxOpticalPortTdcmRtd4Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 18), Integer32()).setUnits('millidegrees Celsius').setMaxAccess("readonly")
tmnxOpticalPortTdcmModuleTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 19), Integer32()).setUnits('millidegrees Celsius').setMaxAccess("readonly")
tmnxOpticalPortTdcmMinDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 20), Integer32()).setUnits('picoseconds per nanometer').setMaxAccess("readonly")
tmnxOpticalPortTdcmMaxDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 21), Integer32()).setUnits('picoseconds per nanometer').setMaxAccess("readonly")
tmnxOpticalPortTdcmAutoDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 22), Integer32()).setUnits('picoseconds per nanometer').setMaxAccess("readonly")
tmnxOpticalPortTdcmMeasDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 23), Integer32()).setUnits('picoseconds per nanometer').setMaxAccess("readonly")
tmnxOpticalPortTdcmPresRxChan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 24), TmnxOpticalDwdmChannel()).setMaxAccess("readonly")
tmnxOpticalPortTdcmAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 25), TmnxOpticalTdcmAlarm()).setMaxAccess("readonly")
tmnxOpticalPortTdcmSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 26), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,31))).setMaxAccess("readonly")
tmnxOpticalPortTdcmCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 27), TmnxOpticalTdcmCtrlState()).setMaxAccess("readonly")
tmnxOpticalPortDwdmChannelMin = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 28), TmnxOpticalDwdmChannel()).setMaxAccess("readonly")
tmnxOpticalPortDwdmChannelMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 29), TmnxOpticalDwdmChannel()).setMaxAccess("readonly")
tmnxOpticalPortLaserTunability = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 59, 1, 30), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("unequipped", 0), ("notTunable", 1), ("fullyTunable", 2),))).setMaxAccess("readonly")
tmnxPortEgrExpShaperTblLastChngd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 60), TimeStamp()).setMaxAccess("readonly")
tmnxPortEgrExpShaperTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61), )
tmnxPortEgrExpShaperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperName"))
tmnxPortEgrExpShaperName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 1), TNamedItem())
tmnxPortEgrExpShaperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 2), RowStatus()).setMaxAccess("readcreate")
tmnxPortEgrExpShaperRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 3), TExpSecondaryShaperPIRRate().clone(-1)).setUnits('Kbps').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass1Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 4), TExpSecondaryShaperClassRate().clone(-1)).setUnits('Kbps').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass2Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 5), TExpSecondaryShaperClassRate().clone(-1)).setUnits('Kbps').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass3Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 6), TExpSecondaryShaperClassRate().clone(-1)).setUnits('Kbps').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass4Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 7), TExpSecondaryShaperClassRate().clone(-1)).setUnits('Kbps').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass5Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 8), TExpSecondaryShaperClassRate().clone(-1)).setUnits('Kbps').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass6Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 9), TExpSecondaryShaperClassRate().clone(-1)).setUnits('Kbps').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass7Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 10), TExpSecondaryShaperClassRate().clone(-1)).setUnits('Kbps').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass8Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 11), TExpSecondaryShaperClassRate().clone(-1)).setUnits('Kbps').setMaxAccess("readcreate")
tmnxPortEgrExpShaperLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 12), TimeStamp()).setMaxAccess("readonly")
tmnxPortEgrExpShaperLoBrstMaxCls = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,8)).clone(8)).setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass1Thresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,8190),)).clone(-1)).setUnits('kbytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass2Thresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,8190),)).clone(-1)).setUnits('kbytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass3Thresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,8190),)).clone(-1)).setUnits('kbytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass4Thresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,8190),)).clone(-1)).setUnits('kbytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass5Thresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,8190),)).clone(-1)).setUnits('kbytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass6Thresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,8190),)).clone(-1)).setUnits('kbytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass7Thresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,8190),)).clone(-1)).setUnits('kbytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperClass8Thresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,8190),)).clone(-1)).setUnits('kbytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,8190),)).clone(-1)).setUnits('kbytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperLoBurstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 23), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperHiBurstInc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1,-1),ValueRangeConstraint(0,65528),)).clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperCl1BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 25), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperCl2BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 26), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperCl3BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 27), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperCl4BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 28), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperCl5BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 29), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperCl6BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 30), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperCl7BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 31), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tmnxPortEgrExpShaperCl8BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 61, 1, 32), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
tPortEgrExpShaperStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62), )
tPortEgrExpShaperStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperName"))
tPortEgrExpShaperStLstClrdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 1), TimeStamp()).setMaxAccess("readonly")
tPortEgrExpShaperCls1StFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 2), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls1StFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 3), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls1StMonOvrOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 4), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls2StFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 5), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls2StFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 6), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls2StMonOvrOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 7), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls3StFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 8), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls3StFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 9), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls3StMonOvrOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 10), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls4StFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 11), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls4StFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 12), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls4StMonOvrOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 13), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls5StFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 14), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls5StFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 15), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls5StMonOvrOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 16), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls6StFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 17), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls6StFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 18), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls6StMonOvrOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 19), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls7StFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 20), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls7StFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 21), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls7StMonOvrOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 22), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls8StFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 23), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls8StFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 24), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperCls8StMonOvrOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 25), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperAggStFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 26), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperAggStFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 27), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperAggStMonOvrOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 62, 1, 28), Counter64()).setMaxAccess("readonly")
tPortEgrExpShaperStatsHLTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63), )
tPortEgrExpShaperStatsHLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperName"))
tPortEgrExpShaperCls1StFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 1), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls1StFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 2), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls1StFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 3), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls1StFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 4), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls1StMonOvrOL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 5), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls1StMonOvrOH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 6), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls2StFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 7), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls2StFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 8), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls2StFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 9), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls2StFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 10), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls2StMonOvrOL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 11), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls2StMonOvrOH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 12), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls3StFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 13), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls3StFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 14), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls3StFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 15), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls3StFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 16), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls3StMonOvrOL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 17), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls3StMonOvrOH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 18), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls4StFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 19), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls4StFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 20), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls4StFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 21), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls4StFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 22), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls4StMonOvrOL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 23), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls4StMonOvrOH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 24), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls5StFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 25), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls5StFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 26), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls5StFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 27), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls5StFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 28), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls5StMonOvrOL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 29), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls5StMonOvrOH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 30), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls6StFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 31), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls6StFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 32), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls6StFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 33), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls6StFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 34), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls6StMonOvrOL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 35), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls6StMonOvrOH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 36), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls7StFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 37), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls7StFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 38), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls7StFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 39), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls7StFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 40), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls7StMonOvrOL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 41), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls7StMonOvrOH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 42), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls8StFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 43), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls8StFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 44), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls8StFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 45), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls8StFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 46), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls8StMonOvrOL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 47), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperCls8StMonOvrOH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 48), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperAggStFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 49), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperAggStFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 50), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperAggStFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 51), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperAggStFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 52), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperAggStMonOvrOL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 53), Counter32()).setMaxAccess("readonly")
tPortEgrExpShaperAggStMonOvrOH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 63, 1, 54), Counter32()).setMaxAccess("readonly")
tPortEgrVPortAggStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 64), )
tPortEgrVPortAggStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 64, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortEgrVPortName"), (0, "TIMETRA-PORT-MIB", "tPortEgrVPStLvl"))
tPortEgrVPStLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 64, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1,8),ValueRangeConstraint(4294967295,4294967295),)))
tPortEgrVPStLstClrdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 64, 1, 2), TimeStamp()).setMaxAccess("readonly")
tPortEgrVPStLvlFwdPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 64, 1, 3), Counter64()).setMaxAccess("readonly")
tPortEgrVPStLvlFwdOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 64, 1, 4), Counter64()).setMaxAccess("readonly")
tPortEgrVPStLvlDpdPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 64, 1, 5), Counter64()).setMaxAccess("readonly")
tPortEgrVPStLvlDpdOct = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 64, 1, 6), Counter64()).setMaxAccess("readonly")
tPortEgrVPortAggStatsHLTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65), )
tPortEgrVPortAggStatsHLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortEgrVPortName"), (0, "TIMETRA-PORT-MIB", "tPortEgrVPStLvl"))
tPortEgrVPStLvlFwdPktL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65, 1, 1), Counter32()).setMaxAccess("readonly")
tPortEgrVPStLvlFwdPktH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65, 1, 2), Counter32()).setMaxAccess("readonly")
tPortEgrVPStLvlFwdOctL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65, 1, 3), Counter32()).setMaxAccess("readonly")
tPortEgrVPStLvlFwdOctH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65, 1, 4), Counter32()).setMaxAccess("readonly")
tPortEgrVPStLvlDpdPktL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65, 1, 5), Counter32()).setMaxAccess("readonly")
tPortEgrVPStLvlDpdPktH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65, 1, 6), Counter32()).setMaxAccess("readonly")
tPortEgrVPStLvlDpdOctL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65, 1, 7), Counter32()).setMaxAccess("readonly")
tPortEgrVPStLvlDpdOctH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 65, 1, 8), Counter32()).setMaxAccess("readonly")
tmnxDDMLaneTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66), )
tmnxDDMLaneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tmnxDDMLaneId"))
tmnxDDMLaneId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,16)))
tmnxDDMLaneTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 2), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTempLowWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 3), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTempLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 4), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTempHiWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 5), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTempHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 6), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 7), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxBiasCurrentLowWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 8), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxBiasCurrentLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 9), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxBiasCurrentHiWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 10), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxBiasCurrentHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 11), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 12), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxOutputPowerLowWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 13), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxOutputPowerLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 14), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxOutputPowerHiWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 15), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneTxOutputPowerHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 16), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneRxOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 17), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneRxOpticalPwrLowWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 18), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneRxOpticalPwrLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 19), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneRxOpticalPwrHiWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 20), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneRxOpticalPwrHiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 21), Integer32()).setMaxAccess("readonly")
tmnxDDMLaneRxOpticalPowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 22), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("oma", 0), ("average", 1),))).setMaxAccess("readonly")
tmnxDDMLaneFailedThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 66, 1, 23), TmnxDigitalDiagnosticFailureBits()).setMaxAccess("readonly")
tPortNetEgrQGrpArbitStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 68), )
tPortNetEgrQGrpArbitStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 68, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpName"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpInstanceId"), (0, "TIMETRA-PORT-MIB", "tPortNetEgrQGrpArbitStatName"))
tPortNetEgrQGrpArbitStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 68, 1, 1), TNamedItem())
tPortNetEgrQGrpArbitStatFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 68, 1, 2), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpArbitStatFwdPktsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 68, 1, 3), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpArbitStatFwdPktsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 68, 1, 4), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpArbitStatFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 68, 1, 5), Counter64()).setMaxAccess("readonly")
tPortNetEgrQGrpArbitStatFwdOctsL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 68, 1, 6), Counter32()).setMaxAccess("readonly")
tPortNetEgrQGrpArbitStatFwdOctsH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 68, 1, 7), Counter32()).setMaxAccess("readonly")
tmnxPortPlcyTableLastCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 67, 1), TimeStamp()).setMaxAccess("readonly")
tmnxPortPlcyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 67, 2), )
tmnxPortPlcyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 67, 2, 1), ).setIndexNames((1, "TIMETRA-PORT-MIB", "tmnxPortPlcyName"))
tmnxPortPlcyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 67, 2, 1, 1), TNamedItem())
tmnxPortPlcyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 67, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
tmnxPortPlcyLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 67, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
tmnxPortPlcyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 67, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
tmnxPortPlcyEgrPortSchedPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 67, 2, 1, 5), TNamedItemOrEmpty()).setMaxAccess("readwrite")
tmnxPwPortTblLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 69), TimeStamp()).setMaxAccess("readonly")
tmnxPwPortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 70), )
tmnxPwPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 70, 1), ).setIndexNames((0, "TIMETRA-PORT-MIB", "tmnxPwPortId"))
tmnxPwPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 70, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,10239)))
tmnxPwPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 70, 1, 2), RowStatus()).setMaxAccess("readcreate")
tmnxPwPortLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 70, 1, 3), TimeStamp()).setMaxAccess("readonly")
tmnxPwPortEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 4, 70, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(2, 10,)).clone(namedValues=NamedValues(("dot1q", 2), ("qinq", 10),)).clone('dot1q')).setMaxAccess("readcreate")
tmnxPortNotifyPortId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 1), TmnxPortID()).setMaxAccess("accessiblefornotify")
tmnxPortNotifySonetAlarmReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,)).clone(namedValues=NamedValues(("notUsed", 0), ("loc", 1), ("lais", 2), ("lrdi", 3), ("ss1f", 4), ("sb1err", 5), ("lb2erSd", 6), ("lb2erSf", 7), ("slof", 8), ("slos", 9), ("stxptr", 10), ("srxptr", 11), ("lrei", 12),))).setMaxAccess("accessiblefornotify")
tmnxPortNotifySonetPathAlarmReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8,)).clone(namedValues=NamedValues(("notUsed", 0), ("pais", 1), ("plop", 2), ("prdi", 3), ("pb3err", 4), ("pplm", 5), ("prei", 6), ("puneq", 7), ("plcd", 8),))).setMaxAccess("accessiblefornotify")
tmnxPortNotifyError = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("txClockError", 1), ("rxClockError", 2), ("txFifoError", 3), ("laserError", 4), ("miscError", 5),))).setMaxAccess("accessiblefornotify")
tmnxPortNotifyDS3AlarmReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 5), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("notUsed", 0), ("ais", 1), ("los", 2), ("oof", 3), ("rai", 4), ("looped", 5),))).setMaxAccess("accessiblefornotify")
tmnxPortNotifyDS1AlarmReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7,)).clone(namedValues=NamedValues(("notUsed", 0), ("ais", 1), ("los", 2), ("oof", 3), ("rai", 4), ("looped", 5), ("berSd", 6), ("berSf", 7),))).setMaxAccess("accessiblefornotify")
tmnxPortNotifyBundleId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 7), TmnxBundleID()).setMaxAccess("accessiblefornotify")
tmnxPortNotifyEtherAlarmReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 8), TmnxPortEtherReportValue()).setMaxAccess("accessiblefornotify")
tmnxDDMFailedObject = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,)).clone(namedValues=NamedValues(("unknown", 0), ("temperature-low-warning", 1), ("temperature-low-alarm", 2), ("temperature-high-warning", 3), ("temperature-high-alarm", 4), ("supplyVoltage-low-warning", 5), ("supplyVoltage-low-alarm", 6), ("supplyVoltage-high-warning", 7), ("supplyVoltage-high-alarm", 8), ("txBiasCurrent-low-warning", 9), ("txBiasCurrent-low-alarm", 10), ("txBiasCurrent-high-warning", 11), ("txBiasCurrent-high-alarm", 12), ("txOutputPower-low-warning", 13), ("txOutputPower-low-alarm", 14), ("txOutputPower-high-warning", 15), ("txOutputPower-high-alarm", 16), ("rxOpticalPower-low-warning", 17), ("rxOpticalPower-low-alarm", 18), ("rxOpticalPower-high-warning", 19), ("rxOpticalPower-high-alarm", 20), ("aux1-low-warning", 21), ("aux1-low-alarm", 22), ("aux1-high-warning", 23), ("aux1-high-alarm", 24), ("aux2-low-warning", 25), ("aux2-low-alarm", 26), ("aux2-high-warning", 27), ("aux2-high-alarm", 28),))).setMaxAccess("accessiblefornotify")
tmnxDSXClockSyncStateObject = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 10), TmnxDSXClockSyncState()).setMaxAccess("accessiblefornotify")
tmnxPortNotifyDescription = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 11), DisplayString()).setMaxAccess("accessiblefornotify")
tmnxPortNotifyWTAlarmReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6,)).clone(namedValues=NamedValues(("notUsed", 0), ("encFail", 1), ("encDegr", 2), ("pwrFail", 3), ("pwrDegr", 4), ("pwrHigh", 5), ("pwrLow", 6),))).setMaxAccess("accessiblefornotify")
tmnxHostMatchNotifyIntDestId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 13), TmnxSubMgtIntDestId()).setMaxAccess("accessiblefornotify")
tmnxHostMatchNotifyOrgString = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 14), TmnxSubMgtOrgStrOrZero()).setMaxAccess("accessiblefornotify")
tmnxHostMatchNotifySubIdent = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 15), TmnxSubIdentStringOrEmpty()).setMaxAccess("accessiblefornotify")
tmnxObjAppResvSize = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 16), Unsigned32()).setUnits('kilo-bytes').setMaxAccess("accessiblefornotify")
tmnxObjAppResvCbsOld = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 17), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
tmnxObjAppResvCbsNew = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 18), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
tmnxObjAppSumOfQResvSize = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 19), Unsigned32()).setUnits('kilo-bytes').setMaxAccess("accessiblefornotify")
tmnxObjType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 20), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("mda", 1), ("port", 2), ("unused", 3), ("bundle", 4),))).setMaxAccess("accessiblefornotify")
tmnxObjPortId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 21), TmnxPortID()).setMaxAccess("accessiblefornotify")
tmnxObjMdaId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 22), TmnxPortID()).setMaxAccess("accessiblefornotify")
tmnxObjAppType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 23), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6,)).clone(namedValues=NamedValues(("accessIngress", 1), ("accessEgress", 2), ("networkIngress", 3), ("networkEgress", 4), ("ingress", 5), ("egress", 6),))).setMaxAccess("accessiblefornotify")
tmnxObjAppPool = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 24), TNamedItemOrEmpty()).setMaxAccess("accessiblefornotify")
tmnxObjNamedPoolPolicy = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 25), TNamedItemOrEmpty()).setMaxAccess("accessiblefornotify")
tmnxPortNotifyEtherCrcThreshold = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 27), Unsigned32()).setMaxAccess("accessiblefornotify")
tmnxPortNotifyEtherCrcMultiplier = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 28), Unsigned32()).setMaxAccess("accessiblefornotify")
tmnxPortNotifyEtherCrcAlarmValue = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 29), TmnxPortEtherCrcMonReportValue()).setMaxAccess("accessiblefornotify")
tmnxObjAppResvSizeOld = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 30), Unsigned32()).setUnits('kilo-bytes').setMaxAccess("accessiblefornotify")
tmnxDDMLaneIdOrModule = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 2, 7, 31), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0,0),ValueRangeConstraint(1,16),))).setMaxAccess("accessiblefornotify")
tmnxEqOobPortFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 1)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxChassisNotifyChassisId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxEqPortFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 2)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxChassisNotifyChassisId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxEqPortSonetAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 4)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifySonetAlarmReason"),))
tmnxEqPortSonetAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 5)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifySonetAlarmReason"),))
tmnxEqPortSonetPathAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 6)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifySonetPathAlarmReason"),))
tmnxEqPortSonetPathAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 7)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifySonetPathAlarmReason"),))
tmnxEqPortSFPInserted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 8)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxEqPortSFPRemoved = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 9)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxEqPortWrongSFP = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 10)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxEqPortSFPCorrupted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 11)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxPortNotifyBerSdTca = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 12)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxSonetBerSdThreshold"),))
tmnxPortNotifyBerSfTca = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 13)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxSonetBerSfThreshold"),))
tmnxEqPortError = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 14)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyError"),))
tmnxEqPortDS3Alarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 15)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyDS3AlarmReason"),))
tmnxEqPortDS3AlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 16)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyDS3AlarmReason"),))
tmnxEqPortDS1Alarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 17)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyDS1AlarmReason"),))
tmnxEqPortDS1AlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 18)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyDS1AlarmReason"),))
tmnxEqPortBndlYellowDiffExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 19)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxBundleYellowDiffDelay"),))
tmnxEqPortBndlRedDiffExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 20)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxBundleRedDiffDelay"),))
tmnxEqPortBndlBadEndPtDiscr = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 21)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleMemberDownReason"),))
tmnxEqPortEtherAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 22)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherAlarmReason"),))
tmnxEqPortEtherAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 23)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherAlarmReason"),))
tmnxDS1E1LoopbackStarted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 24)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxDS1Loopback"),))
tmnxDS1E1LoopbackStopped = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 25)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxDS1Loopback"),))
tmnxDS3E3LoopbackStarted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 26)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLoopback"),))
tmnxDS3E3LoopbackStopped = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 27)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLoopback"),))
tmnxSonetSDHLoopbackStarted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 28)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxSonetLoopback"),))
tmnxSonetSDHLoopbackStopped = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 29)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxSonetLoopback"),))
tmnxEqPortEtherLoopDetected = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 30)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxEqPortEtherLoopCleared = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 31)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxEqPortSpeedCfgNotCompatible = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 32)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSpeed"), ("TIMETRA-PORT-MIB", "tmnxMdaNotifyType"),))
tmnxEqPortDuplexCfgNotCompatible = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 33)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDuplex"), ("TIMETRA-PORT-MIB", "tmnxMdaNotifyType"),))
tmnxEqPortIngressRateCfgNotCompatible = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 34)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxMdaNotifyType"),))
tmnxEqDigitalDiagMonitorFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 35)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxDDMFailedObject"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneIdOrModule"),))
tmnxEqPortSFPStatusFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 36)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortSFPStatus"),))
tmnxDSXClockSyncStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 37)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxDSXClockSyncStateObject"),))
tmnxQosServiceDegraded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 3)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxChassisNotifyChassisId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxPortUnsupportedFunction = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 38)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyDescription"),))
tmnxBundleMemberMlfrLoopback = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 39)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleMemberMlfrDownReason"),))
tmnxEqPortWaveTrackerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 40)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyWTAlarmReason"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerAlarmState"),))
tPortAccEgrQGrpHostMatchFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 41)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxHostMatchNotifyIntDestId"), ("TIMETRA-PORT-MIB", "tmnxHostMatchNotifyOrgString"), ("TIMETRA-PORT-MIB", "tmnxHostMatchNotifySubIdent"),))
tPortEgrVPortHostMatchFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 42)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxHostMatchNotifyIntDestId"), ("TIMETRA-PORT-MIB", "tmnxHostMatchNotifyOrgString"), ("TIMETRA-PORT-MIB", "tmnxHostMatchNotifySubIdent"),))
tmnxEqDigitalDiagMonitorClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 43)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxDDMFailedObject"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneIdOrModule"),))
tmnxEqPortOpticalAmpAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 44)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpAlarmState"),))
tmnxEqPortOpticalTdcmAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 45)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmAlarmState"),))
tmnxEqSonetClockSrcNotCompatible = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 46)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxSonetClockSource"), ("TIMETRA-PORT-MIB", "tmnxMdaNotifyType"),))
tmnxEqSonetSfThreshNotCompatible = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 47)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxSonetBerSfThreshold"), ("TIMETRA-PORT-MIB", "tmnxMdaNotifyType"),))
tmnxEqSonetFramingNotCompatible = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 48)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxSonetFraming"), ("TIMETRA-PORT-MIB", "tmnxMdaNotifyType"),))
tmnxResvCbsPoolThreshGreen = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 49)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxObjType"), ("TIMETRA-PORT-MIB", "tmnxObjPortId"), ("TIMETRA-PORT-MIB", "tmnxObjMdaId"), ("TIMETRA-PORT-MIB", "tmnxObjAppType"), ("TIMETRA-PORT-MIB", "tmnxObjAppPool"), ("TIMETRA-PORT-MIB", "tmnxObjNamedPoolPolicy"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvSize"), ("TIMETRA-PORT-MIB", "tmnxObjAppSumOfQResvSize"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvCbsOld"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvCbsNew"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvSizeOld"),))
tmnxResvCbsPoolThreshAmber = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 50)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxObjType"), ("TIMETRA-PORT-MIB", "tmnxObjPortId"), ("TIMETRA-PORT-MIB", "tmnxObjMdaId"), ("TIMETRA-PORT-MIB", "tmnxObjAppType"), ("TIMETRA-PORT-MIB", "tmnxObjAppPool"), ("TIMETRA-PORT-MIB", "tmnxObjNamedPoolPolicy"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvSize"), ("TIMETRA-PORT-MIB", "tmnxObjAppSumOfQResvSize"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvCbsOld"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvCbsNew"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvSizeOld"),))
tmnxResvCbsPoolThreshRed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 51)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxObjType"), ("TIMETRA-PORT-MIB", "tmnxObjPortId"), ("TIMETRA-PORT-MIB", "tmnxObjMdaId"), ("TIMETRA-PORT-MIB", "tmnxObjAppType"), ("TIMETRA-PORT-MIB", "tmnxObjAppPool"), ("TIMETRA-PORT-MIB", "tmnxObjNamedPoolPolicy"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvSize"), ("TIMETRA-PORT-MIB", "tmnxObjAppSumOfQResvSize"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvCbsOld"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvCbsNew"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvSizeOld"),))
tmnxEqPortEtherCrcAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 52)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherCrcThreshold"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherCrcMultiplier"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherCrcAlarmValue"),))
tmnxEqPortEtherCrcAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 53)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherCrcThreshold"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherCrcMultiplier"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherCrcAlarmValue"),))
tmnxEqPortEtherInternalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 54)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxEqPortEtherInternalAlarmClr = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 2, 2, 0, 55)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),))
tmnxPortCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1))
tmnxPortGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2))
tmnxPortComp7750 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 3))
tmnxPortComp7450 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 4))
tmnxPortComp7710 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 5))
tmnxPortComp7750V4v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 3, 2)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV3v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxMlImaBundleGroup"),))
tmnxPortComp7750V5v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 3, 3)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxMlImaBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV5v0Group"),))
tmnxPortComp7750V6v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 3, 4)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMlImaBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV6v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"),))
tmnxPortComp7750V6v1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 3, 5)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortTDME1GroupV6v1"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMlImaBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV6v1Group"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxNamedPoolGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"),))
tmnxPortComp7750V7v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 3, 6)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortTDME1GroupV6v1"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMlImaBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxNamedPoolGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"), ("TIMETRA-PORT-MIB", "tmnxPortQV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortQStatV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxMcMfrBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxFrIntfGroup"), ("TIMETRA-PORT-MIB", "tmnxFrf12IntfGroup"), ("TIMETRA-PORT-MIB", "tmnxPortSchedStatsGroup"),))
tmnxPortComp7750V8v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 3, 7)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortTDME1GroupV6v1"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMlImaBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxNamedPoolGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"), ("TIMETRA-PORT-MIB", "tmnxPortQV8v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortQStatV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxMcMfrBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxFrIntfGroup"), ("TIMETRA-PORT-MIB", "tmnxFrf12IntfGroup"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerGroup"), ("TIMETRA-PORT-MIB", "tmnxPortDwdmGroup"), ("TIMETRA-PORT-MIB", "tmnxPortGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortCEMGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedStatsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortVPortGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v9"),))
tmnxPortComp7750V9v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 3, 8)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortTDME1GroupV6v1"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV9v4"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMlImaBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxNamedPoolGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"), ("TIMETRA-PORT-MIB", "tmnxPortQV8v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortQStatV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxMcMfrBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxFrIntfGroup"), ("TIMETRA-PORT-MIB", "tmnxFrf12IntfGroup"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerGroup"), ("TIMETRA-PORT-MIB", "tmnxPortDwdmGroup"), ("TIMETRA-PORT-MIB", "tmnxPortGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortCEMGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedStatsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortVPortV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortGroup"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV9v0"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortObjAppV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortGroupV9v0"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v9"), ("TIMETRA-PORT-MIB", "tmnxPortEgrVPortStatsV9v0Group"),))
tmnxPortComp7450V4v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 4, 2)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV3v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"),))
tmnxPortComp7450V5v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 4, 3)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV5v0Group"),))
tmnxPortComp7450V6v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 4, 4)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV6v0Group"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"),))
tmnxPortComp7450V6v1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 4, 5)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV6v1Group"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxNamedPoolGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"),))
tmnxPortComp7450V7v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 4, 6)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxNamedPoolGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"), ("TIMETRA-PORT-MIB", "tmnxPortQV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortQStatV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortSchedStatsGroup"),))
tmnxPortComp7450V8v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 4, 7)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxNamedPoolGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"), ("TIMETRA-PORT-MIB", "tmnxPortQV8v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortQStatV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerGroup"), ("TIMETRA-PORT-MIB", "tmnxPortDwdmGroup"), ("TIMETRA-PORT-MIB", "tmnxPortGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortCEMGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedStatsGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v9"),))
tmnxPortComp7710V3v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 5, 1)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupR2r1"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleV3v0Group"), ("TIMETRA-PORT-MIB", "tmnx7710PortTDMGroupV3v0"),))
tmnxPortComp7710V5v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 5, 2)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV5v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnx7710PortTDMGroupV5v0"),))
tmnxPortComp7710V6v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 5, 3)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV6v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnx7710PortTDMGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"),))
tmnxPortComp7710V6v1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 5, 4)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV6v1Group"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortTDME1GroupV6v1"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV4v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnx7710PortTDMGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"),))
tmnxPortComp7710V7v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 5, 5)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortTDME1GroupV6v1"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnx7710PortTDMGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"), ("TIMETRA-PORT-MIB", "tmnxPortQV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortQStatV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortSchedStatsGroup"),))
tmnxPortComp7710V8v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 5, 6)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortTDME1GroupV6v1"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnx7710PortTDMGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"), ("TIMETRA-PORT-MIB", "tmnxPortQV8v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortQStatV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerGroup"), ("TIMETRA-PORT-MIB", "tmnxPortDwdmGroup"), ("TIMETRA-PORT-MIB", "tmnxPortGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortCEMGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedStatsGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v9"),))
tmnxPortComplianceV9v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 6)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortTDME1GroupV6v1"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV9v4"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMlImaBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxNamedPoolGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"), ("TIMETRA-PORT-MIB", "tmnxPortQV8v0Group"), ("TIMETRA-PORT-MIB", "tmnx7710PortTDMGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortQStatV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxMcMfrBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxFrIntfGroup"), ("TIMETRA-PORT-MIB", "tmnxFrf12IntfGroup"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerGroup"), ("TIMETRA-PORT-MIB", "tmnxPortDwdmGroup"), ("TIMETRA-PORT-MIB", "tmnxPortGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortCEMGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedStatsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortVPortV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortGroup"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV9v0"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortObjAppV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortGroupV9v0"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v9"), ("TIMETRA-PORT-MIB", "tmnxPortEgrVPortStatsV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEtherV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortV9v0Group"),))
tmnxPortComplianceV10v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 1, 7)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortSonetV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortTDMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortTDME1GroupV6v1"), ("TIMETRA-PORT-MIB", "tmnxPortFRGroup"), ("TIMETRA-PORT-MIB", "tmnxQosAppObjsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortTestGroup"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV9v4"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQosStatR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxPortStatsR2r1Group"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCGroup"), ("TIMETRA-PORT-MIB", "tmnxScalarPortV3v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlBundleGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMlImaBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxPortSchedV5v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEthernetV10v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortCemGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxHsmdaGroupV10v0"), ("TIMETRA-PORT-MIB", "tmnxNamedPoolGroupV6v0"), ("TIMETRA-PORT-MIB", "tmnxDigitalDiagMonitorGroup"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneGroupV10v0"), ("TIMETRA-PORT-MIB", "tmnxPortQV8v0Group"), ("TIMETRA-PORT-MIB", "tmnx7710PortTDMGroupV5v0"), ("TIMETRA-PORT-MIB", "tmnxPortQStatV7v0Group"), ("TIMETRA-PORT-MIB", "tmnxMcMfrBundleGroup"), ("TIMETRA-PORT-MIB", "tmnxFrIntfGroup"), ("TIMETRA-PORT-MIB", "tmnxFrf12IntfGroup"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerGroup"), ("TIMETRA-PORT-MIB", "tmnxPortDwdmGroup"), ("TIMETRA-PORT-MIB", "tmnxPortGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortCEMGroupV8v0"), ("TIMETRA-PORT-MIB", "tmnxPortSchedStatsGroup"), ("TIMETRA-PORT-MIB", "tmnxPortVPortV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxMlpppBundleGroupV7v0"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortGroup"), ("TIMETRA-PORT-MIB", "tmnxPortATMGroupV9v0"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortObjAppV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortGroupV9v0"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationGroupV8v9"), ("TIMETRA-PORT-MIB", "tmnxPortEgrVPortStatsV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortEtherV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortNotificationV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortV9v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgrV10v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortPlcyGroup"), ("TIMETRA-PORT-MIB", "tmnxPwPortV10v0Group"), ("TIMETRA-PORT-MIB", "tmnxPortLoadBalGroupV10v0"),))
tmnxPortFRGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 5)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxFRDlcmiMode"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiN392Dce"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiN393Dce"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiT392Dce"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiTxStatusEnqMsgs"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiRxStatusEnqMsgs"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiStatusEnqMsgTimeouts"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiTxStatusMsgs"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiRxStatusMsgs"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiStatusMsgTimeouts"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiDiscardedMsgs"), ("TIMETRA-PORT-MIB", "tmnxFRDlcmiInvRxSeqNumMsgs"),))
tmnxQosAppObjsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 6)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxObjectAppPoolRowStatus"), ("TIMETRA-PORT-MIB", "tmnxObjectAppResvCbs"), ("TIMETRA-PORT-MIB", "tmnxObjectAppSlopePolicy"), ("TIMETRA-PORT-MIB", "tmnxObjectAppPoolSize"),))
tmnxPortTestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 7)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortTestState"), ("TIMETRA-PORT-MIB", "tmnxPortTestMode"), ("TIMETRA-PORT-MIB", "tmnxPortTestParameter"), ("TIMETRA-PORT-MIB", "tmnxPortTestLastResult"), ("TIMETRA-PORT-MIB", "tmnxPortTestStartTime"), ("TIMETRA-PORT-MIB", "tmnxPortTestEndTime"), ("TIMETRA-PORT-MIB", "tmnxPortTestDuration"), ("TIMETRA-PORT-MIB", "tmnxPortTestAction"),))
tmnxPortObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 11)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS1IdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxSonetPathType"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsIngFwdInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsIngFwdOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsIngFwdInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsIngFwdOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsIngDroInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsIngDroOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsIngDroInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsIngDroOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsEgrFwdInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsEgrFwdOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsEgrFwdInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsEgrFwdOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsEgrDroInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsEgrDroOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsEgrDroInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortFCStatsEgrDroOutProfOcts"),))
tmnxPortIngrMdaQosStatR2r1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 14)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos00StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos00StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos01StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos01StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos02StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos02StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos03StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos03StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos04StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos04StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos05StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos05StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos06StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos06StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos07StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos07StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos08StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos08StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos09StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos09StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos10StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos10StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos11StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos11StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos12StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos12StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos13StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos13StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos14StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos14StatDropOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos15StatDropPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngrMdaQos15StatDropOcts"),))
tmnxPortStatsR2r1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 16)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNetIngressFwdInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetIngressFwdOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetIngressFwdInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetIngressFwdOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetIngressDroInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetIngressDroOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetIngressDroInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetIngressDroOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgressFwdInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgressFwdOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgressFwdInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgressFwdOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgressDroInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgressDroOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgressDroInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgressDroOutProfOcts"),))
tmnxPortNotificationGroupR2r1 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 17)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPInserted"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPRemoved"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPCorrupted"), ("TIMETRA-PORT-MIB", "tmnxEqPortError"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlYellowDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlRedDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlBadEndPtDiscr"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarmClear"),))
tmnxPortNotifyObjsGroupR2r1 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 18)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifySonetAlarmReason"), ("TIMETRA-PORT-MIB", "tmnxPortNotifySonetPathAlarmReason"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyError"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyDS3AlarmReason"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyDS1AlarmReason"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyBundleId"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherAlarmReason"),))
tmnxPortNotifyObsoleteGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 20)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxEqOobPortFailure"), ("TIMETRA-PORT-MIB", "tmnxEqPortFailure"), ("TIMETRA-PORT-MIB", "tmnxQosServiceDegraded"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyBerSdTca"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyBerSfTca"), ("TIMETRA-PORT-MIB", "tmnxEqPortWrongSFP"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPCorrupted"),))
tmnxPortSonetV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 21)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxSonetSpeed"), ("TIMETRA-PORT-MIB", "tmnxSonetClockSource"), ("TIMETRA-PORT-MIB", "tmnxSonetFraming"), ("TIMETRA-PORT-MIB", "tmnxSonetReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxSonetBerSdThreshold"), ("TIMETRA-PORT-MIB", "tmnxSonetBerSfThreshold"), ("TIMETRA-PORT-MIB", "tmnxSonetLoopback"), ("TIMETRA-PORT-MIB", "tmnxSonetReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxSonetSectionTraceMode"), ("TIMETRA-PORT-MIB", "tmnxSonetJ0String"), ("TIMETRA-PORT-MIB", "tmnxSonetMonS1Byte"), ("TIMETRA-PORT-MIB", "tmnxSonetMonJ0String"), ("TIMETRA-PORT-MIB", "tmnxSonetMonK1Byte"), ("TIMETRA-PORT-MIB", "tmnxSonetMonK2Byte"), ("TIMETRA-PORT-MIB", "tmnxSonetSingleFiber"), ("TIMETRA-PORT-MIB", "tmnxSonetHoldTimeUp"), ("TIMETRA-PORT-MIB", "tmnxSonetHoldTimeDown"), ("TIMETRA-PORT-MIB", "tmnxSonetPathRowStatus"), ("TIMETRA-PORT-MIB", "tmnxSonetPathLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxSonetPathMTU"), ("TIMETRA-PORT-MIB", "tmnxSonetPathScramble"), ("TIMETRA-PORT-MIB", "tmnxSonetPathC2Byte"), ("TIMETRA-PORT-MIB", "tmnxSonetPathJ1String"), ("TIMETRA-PORT-MIB", "tmnxSonetPathCRC"), ("TIMETRA-PORT-MIB", "tmnxSonetPathOperMTU"), ("TIMETRA-PORT-MIB", "tmnxSonetPathOperMRU"), ("TIMETRA-PORT-MIB", "tmnxSonetPathReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxSonetPathAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxSonetPathCollectStats"), ("TIMETRA-PORT-MIB", "tmnxSonetPathReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxSonetPathMonC2Byte"), ("TIMETRA-PORT-MIB", "tmnxSonetPathMonJ1String"), ("TIMETRA-PORT-MIB", "tmnxSonetPathChildType"), ("TIMETRA-PORT-MIB", "tmnxSonetGroupType"), ("TIMETRA-PORT-MIB", "tmnxSonetGroupParentPortID"), ("TIMETRA-PORT-MIB", "tmnxSonetGroupChildType"), ("TIMETRA-PORT-MIB", "tmnxSonetGroupName"),))
tmnxPortTDMV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 22)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS3Buildout"), ("TIMETRA-PORT-MIB", "tmnxDS3Type"), ("TIMETRA-PORT-MIB", "tmnxDS3LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFraming"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelChannelized"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrateCSUMode"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelIdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLoopback"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLEicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLLicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLFicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLUnitString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPfiString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMessageType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFEACLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelCRC"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelInFEACLoop"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS1RowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1Type"), ("TIMETRA-PORT-MIB", "tmnxDS1Framing"), ("TIMETRA-PORT-MIB", "tmnxDS1Loopback"), ("TIMETRA-PORT-MIB", "tmnxDS1InvertData"), ("TIMETRA-PORT-MIB", "tmnxDS1BitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS1ClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS1RemoteLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS1InRemoteLoop"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupTimeSlots"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupSpeed"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupCRC"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupIdleCycleFlags"),))
tmnxPortATMV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 23)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxATMIntfCellFormat"), ("TIMETRA-PORT-MIB", "tmnxATMIntfMinVpValue"),))
tmnxScalarPortV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 24)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxL4LoadBalancing"),))
tmnxPortV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 25)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortTableLastChange"), ("TIMETRA-PORT-MIB", "tmnxPortLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxPortType"), ("TIMETRA-PORT-MIB", "tmnxPortClass"), ("TIMETRA-PORT-MIB", "tmnxPortDescription"), ("TIMETRA-PORT-MIB", "tmnxPortName"), ("TIMETRA-PORT-MIB", "tmnxPortAlias"), ("TIMETRA-PORT-MIB", "tmnxPortUserAssignedMac"), ("TIMETRA-PORT-MIB", "tmnxPortMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortHwMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortMode"), ("TIMETRA-PORT-MIB", "tmnxPortEncapType"), ("TIMETRA-PORT-MIB", "tmnxPortLagId"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeUp"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeDown"), ("TIMETRA-PORT-MIB", "tmnxPortUpProtocols"), ("TIMETRA-PORT-MIB", "tmnxPortConnectorType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverCode"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverLaserWaveLen"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverDiagCapable"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverModelNumber"), ("TIMETRA-PORT-MIB", "tmnxPortSFPConnectorCode"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorOUI"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorManufactureDate"), ("TIMETRA-PORT-MIB", "tmnxPortSFPMedia"), ("TIMETRA-PORT-MIB", "tmnxPortSFPEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorSerialNum"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorPartNum"), ("TIMETRA-PORT-MIB", "tmnxPortEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortLinkStatus"), ("TIMETRA-PORT-MIB", "tmnxPortAdminStatus"), ("TIMETRA-PORT-MIB", "tmnxPortOperStatus"), ("TIMETRA-PORT-MIB", "tmnxPortState"), ("TIMETRA-PORT-MIB", "tmnxPortPrevState"), ("TIMETRA-PORT-MIB", "tmnxPortNumAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortAlarmState"), ("TIMETRA-PORT-MIB", "tmnxPortLastAlarmEvent"), ("TIMETRA-PORT-MIB", "tmnxPortClearAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortLastStateChanged"), ("TIMETRA-PORT-MIB", "tmnxPortNumChannels"), ("TIMETRA-PORT-MIB", "tmnxPortNetworkEgrQueues"), ("TIMETRA-PORT-MIB", "tmnxPortIsLeaf"), ("TIMETRA-PORT-MIB", "tmnxPortChanType"), ("TIMETRA-PORT-MIB", "tmnxPortParentPortID"), ("TIMETRA-PORT-MIB", "tmnxPortLoadBalanceAlgorithm"), ("TIMETRA-PORT-MIB", "tmnxPortTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxChannelPortID"), ("TIMETRA-PORT-MIB", "tmnxPortOpticalCompliance"), ("TIMETRA-PORT-MIB", "tmnxL4LoadBalancing"),))
tmnxCiscoHDLCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 26)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxCiscoHDLCKeepAliveInt"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCUpCount"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCDownCount"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCOperState"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCDiscardStatInPkts"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCDiscardStatOutPkts"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCStatInPkts"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCStatOutPkts"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCStatInOctets"), ("TIMETRA-PORT-MIB", "tmnxCiscoHDLCStatOutOctets"),))
tmnxMlBundleV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 27)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleRowStatus"), ("TIMETRA-PORT-MIB", "tmnxBundleType"), ("TIMETRA-PORT-MIB", "tmnxBundleMinimumLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleNumLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleNumActiveLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundleOperMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundlePeerMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundleOperMTU"), ("TIMETRA-PORT-MIB", "tmnxBundleRedDiffDelay"), ("TIMETRA-PORT-MIB", "tmnxBundleRedDiffDelayAction"), ("TIMETRA-PORT-MIB", "tmnxBundleYellowDiffDelay"), ("TIMETRA-PORT-MIB", "tmnxBundleShortSequence"), ("TIMETRA-PORT-MIB", "tmnxBundleLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxBundleFragmentThreshold"), ("TIMETRA-PORT-MIB", "tmnxBundleUpTime"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberRowStatus"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberActive"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberDownReason"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberUpTime"), ("TIMETRA-PORT-MIB", "tmnxBundleInputDiscards"), ("TIMETRA-PORT-MIB", "tmnxBundlePrimaryMemberPortID"), ("TIMETRA-PORT-MIB", "tmnxBundleLFI"), ("TIMETRA-PORT-MIB", "tmnxPortBundleNumber"),))
tmnxObsoleteGroupV3v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 28)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxSonetAps"), ("TIMETRA-PORT-MIB", "tmnxSonetApsAdminStatus"), ("TIMETRA-PORT-MIB", "tmnxSonetApsOperStatus"), ("TIMETRA-PORT-MIB", "tmnxSonetApsAuthKey"), ("TIMETRA-PORT-MIB", "tmnxSonetApsNeighborAddr"), ("TIMETRA-PORT-MIB", "tmnxSonetApsAdvertiseInterval"), ("TIMETRA-PORT-MIB", "tmnxSonetApsAdvertiseTimeLeft"), ("TIMETRA-PORT-MIB", "tmnxSonetApsHoldTime"), ("TIMETRA-PORT-MIB", "tmnxSonetApsHoldTimeLeft"),))
tmnxPortEthernetV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 29)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEtherMTU"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAutoNegotiate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCollectStats"), ("TIMETRA-PORT-MIB", "tmnxPortEtherMDIMDIX"), ("TIMETRA-PORT-MIB", "tmnxPortEtherXGigMode"), ("TIMETRA-PORT-MIB", "tmnxPortEtherEgressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDot1qEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherQinqEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherIngressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxPortEtherPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCOverPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCPkts1519toMax"),))
tmnxPortTDMGroupV4v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 30)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS3Buildout"), ("TIMETRA-PORT-MIB", "tmnxDS3Type"), ("TIMETRA-PORT-MIB", "tmnxDS3LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFraming"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelChannelized"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrateCSUMode"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelIdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLoopback"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLEicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLLicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLFicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLUnitString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPfiString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMessageType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFEACLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelCRC"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelInFEACLoop"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelScramble"), ("TIMETRA-PORT-MIB", "tmnxDS1RowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1Type"), ("TIMETRA-PORT-MIB", "tmnxDS1Framing"), ("TIMETRA-PORT-MIB", "tmnxDS1Loopback"), ("TIMETRA-PORT-MIB", "tmnxDS1InvertData"), ("TIMETRA-PORT-MIB", "tmnxDS1BitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS1ClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS1RemoteLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS1InRemoteLoop"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupTimeSlots"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupSpeed"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupCRC"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupIdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupScramble"),))
tmnxPortATMGroupV4v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 31)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxATMIntfCellFormat"), ("TIMETRA-PORT-MIB", "tmnxATMIntfMinVpValue"), ("TIMETRA-PORT-MIB", "tmnxATMIntfMapping"),))
tmnxMlBundleGroupV4v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 32)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleRowStatus"), ("TIMETRA-PORT-MIB", "tmnxBundleType"), ("TIMETRA-PORT-MIB", "tmnxBundleMinimumLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleNumLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleNumActiveLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundleOperMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundlePeerMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundleOperMTU"), ("TIMETRA-PORT-MIB", "tmnxBundleRedDiffDelay"), ("TIMETRA-PORT-MIB", "tmnxBundleRedDiffDelayAction"), ("TIMETRA-PORT-MIB", "tmnxBundleYellowDiffDelay"), ("TIMETRA-PORT-MIB", "tmnxBundleShortSequence"), ("TIMETRA-PORT-MIB", "tmnxBundleLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxBundleFragmentThreshold"), ("TIMETRA-PORT-MIB", "tmnxBundleUpTime"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberRowStatus"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberActive"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberDownReason"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberUpTime"), ("TIMETRA-PORT-MIB", "tmnxBundleInputDiscards"), ("TIMETRA-PORT-MIB", "tmnxBundlePrimaryMemberPortID"), ("TIMETRA-PORT-MIB", "tmnxBundleLFI"), ("TIMETRA-PORT-MIB", "tmnxPortBundleNumber"),))
tmnxMlImaBundleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 33)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleImaGrpLnkActTimer"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpLnkDeactTimer"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpSymmetryMode"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpTxId"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpRxId"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpTxRefLnk"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpRxRefLnk"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpSmNeState"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpSmFeState"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpSmFailState"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpSmDownSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpSmOperSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpAvailTxCR"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpAvailRxCR"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpNeFails"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpFeFails"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpTxIcpCells"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpRxIcpCells"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpErrorIcpCells"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpLostRxIcpCells"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpTxOamLablVal"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpRxOamLablVal"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpAlphaValue"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpBetaValue"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpGammaValue"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpNeClockMode"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpFeClockMode"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpVersion"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpMaxConfBw"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpTestState"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpTestMember"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpTestPattern"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpDiffDelayMaxObs"), ("TIMETRA-PORT-MIB", "tmnxBundleImaGrpLeastDelayLink"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaNeTxState"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaNeRxState"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaFeTxState"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaFeRxState"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaNeRxFailState"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaFeRxFailState"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaTxLid"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaRxLid"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaViolations"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaNeSevErrSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaFeSevErrSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaNeUnavailSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaFeUnavailSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaNeTxUnuseSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaNeRxUnuseSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaFeTxUnuseSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaFeRxUnuseSecs"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaNeTxNumFails"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaNeRxNumFails"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaFeTxNumFails"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaFeRxNumFails"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaTxIcpCells"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaRxIcpCells"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaErrorIcpCells"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaLstRxIcpCells"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaOifAnomalies"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaRxTestState"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaRxTestPattern"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberImaRelDelay"),))
tmnx7710PortTDMGroupV3v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 34)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS3ChannelAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelCollectStats"), ("TIMETRA-PORT-MIB", "tmnxDS1PortBuildout"), ("TIMETRA-PORT-MIB", "tmnxDS1PortLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS1PortType"), ("TIMETRA-PORT-MIB", "tmnxDS1PortLineLength"), ("TIMETRA-PORT-MIB", "tmnxDS1PortLbo"), ("TIMETRA-PORT-MIB", "tmnxDS1PortDbGain"), ("TIMETRA-PORT-MIB", "tmnxDS1InsertSingleBitError"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupCollectStats"),))
tmnxPortGroupV4v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 35)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortTableLastChange"), ("TIMETRA-PORT-MIB", "tmnxPortLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxPortType"), ("TIMETRA-PORT-MIB", "tmnxPortClass"), ("TIMETRA-PORT-MIB", "tmnxPortDescription"), ("TIMETRA-PORT-MIB", "tmnxPortName"), ("TIMETRA-PORT-MIB", "tmnxPortAlias"), ("TIMETRA-PORT-MIB", "tmnxPortUserAssignedMac"), ("TIMETRA-PORT-MIB", "tmnxPortMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortHwMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortMode"), ("TIMETRA-PORT-MIB", "tmnxPortEncapType"), ("TIMETRA-PORT-MIB", "tmnxPortLagId"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeUp"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeDown"), ("TIMETRA-PORT-MIB", "tmnxPortUpProtocols"), ("TIMETRA-PORT-MIB", "tmnxPortConnectorType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverCode"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverLaserWaveLen"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverDiagCapable"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverModelNumber"), ("TIMETRA-PORT-MIB", "tmnxPortSFPConnectorCode"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorOUI"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorManufactureDate"), ("TIMETRA-PORT-MIB", "tmnxPortSFPMedia"), ("TIMETRA-PORT-MIB", "tmnxPortSFPEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorSerialNum"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorPartNum"), ("TIMETRA-PORT-MIB", "tmnxPortEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortLinkStatus"), ("TIMETRA-PORT-MIB", "tmnxPortAdminStatus"), ("TIMETRA-PORT-MIB", "tmnxPortOperStatus"), ("TIMETRA-PORT-MIB", "tmnxPortState"), ("TIMETRA-PORT-MIB", "tmnxPortPrevState"), ("TIMETRA-PORT-MIB", "tmnxPortNumAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortAlarmState"), ("TIMETRA-PORT-MIB", "tmnxPortLastAlarmEvent"), ("TIMETRA-PORT-MIB", "tmnxPortClearAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortLastStateChanged"), ("TIMETRA-PORT-MIB", "tmnxPortNumChannels"), ("TIMETRA-PORT-MIB", "tmnxPortNetworkEgrQueues"), ("TIMETRA-PORT-MIB", "tmnxPortIsLeaf"), ("TIMETRA-PORT-MIB", "tmnxPortChanType"), ("TIMETRA-PORT-MIB", "tmnxPortParentPortID"), ("TIMETRA-PORT-MIB", "tmnxPortLoadBalanceAlgorithm"), ("TIMETRA-PORT-MIB", "tmnxPortTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxChannelPortID"), ("TIMETRA-PORT-MIB", "tmnxPortOpticalCompliance"), ("TIMETRA-PORT-MIB", "tmnxL4LoadBalancing"),))
tmnxObsoleteGroupV5v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 36)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortTransceiverCode"),))
tmnxPortSchedV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 37)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEgrPortSchedPlcy"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideRowStatus"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideSchedName"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLastChanged"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideMaxRate"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl1PIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl1CIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl2PIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl2CIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl3PIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl3CIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl4PIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl4CIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl5PIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl5CIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl6PIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl6CIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl7PIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl7CIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl8PIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideLvl8CIR"), ("TIMETRA-PORT-MIB", "tmnxPortSchedOverrideFlags"),))
tmnxPortEthernetV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 38)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEtherMTU"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAutoNegotiate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCollectStats"), ("TIMETRA-PORT-MIB", "tmnxPortEtherMDIMDIX"), ("TIMETRA-PORT-MIB", "tmnxPortEtherXGigMode"), ("TIMETRA-PORT-MIB", "tmnxPortEtherEgressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDot1qEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherQinqEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherIngressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxPortEtherPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCOverPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherLacpTunnel"),))
tmnxPortGroupV5v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 39)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortTableLastChange"), ("TIMETRA-PORT-MIB", "tmnxPortLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxPortType"), ("TIMETRA-PORT-MIB", "tmnxPortClass"), ("TIMETRA-PORT-MIB", "tmnxPortDescription"), ("TIMETRA-PORT-MIB", "tmnxPortName"), ("TIMETRA-PORT-MIB", "tmnxPortAlias"), ("TIMETRA-PORT-MIB", "tmnxPortUserAssignedMac"), ("TIMETRA-PORT-MIB", "tmnxPortMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortHwMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortMode"), ("TIMETRA-PORT-MIB", "tmnxPortEncapType"), ("TIMETRA-PORT-MIB", "tmnxPortLagId"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeUp"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeDown"), ("TIMETRA-PORT-MIB", "tmnxPortUpProtocols"), ("TIMETRA-PORT-MIB", "tmnxPortConnectorType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverCode"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverLaserWaveLen"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverDiagCapable"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverModelNumber"), ("TIMETRA-PORT-MIB", "tmnxPortSFPConnectorCode"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorOUI"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorManufactureDate"), ("TIMETRA-PORT-MIB", "tmnxPortSFPMedia"), ("TIMETRA-PORT-MIB", "tmnxPortSFPEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorSerialNum"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorPartNum"), ("TIMETRA-PORT-MIB", "tmnxPortEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortLinkStatus"), ("TIMETRA-PORT-MIB", "tmnxPortAdminStatus"), ("TIMETRA-PORT-MIB", "tmnxPortOperStatus"), ("TIMETRA-PORT-MIB", "tmnxPortState"), ("TIMETRA-PORT-MIB", "tmnxPortPrevState"), ("TIMETRA-PORT-MIB", "tmnxPortNumAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortAlarmState"), ("TIMETRA-PORT-MIB", "tmnxPortLastAlarmEvent"), ("TIMETRA-PORT-MIB", "tmnxPortClearAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortLastStateChanged"), ("TIMETRA-PORT-MIB", "tmnxPortNumChannels"), ("TIMETRA-PORT-MIB", "tmnxPortNetworkEgrQueues"), ("TIMETRA-PORT-MIB", "tmnxPortIsLeaf"), ("TIMETRA-PORT-MIB", "tmnxPortChanType"), ("TIMETRA-PORT-MIB", "tmnxPortParentPortID"), ("TIMETRA-PORT-MIB", "tmnxPortLoadBalanceAlgorithm"), ("TIMETRA-PORT-MIB", "tmnxPortTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxChannelPortID"), ("TIMETRA-PORT-MIB", "tmnxPortOpticalCompliance"), ("TIMETRA-PORT-MIB", "tmnxL4LoadBalancing"), ("TIMETRA-PORT-MIB", "tmnxPortLastClearedTime"),))
tmnxMlBundleGroupV5v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 40)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleRowStatus"), ("TIMETRA-PORT-MIB", "tmnxBundleType"), ("TIMETRA-PORT-MIB", "tmnxBundleMinimumLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleNumLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleNumActiveLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundleOperMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundlePeerMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundleOperMTU"), ("TIMETRA-PORT-MIB", "tmnxBundleRedDiffDelay"), ("TIMETRA-PORT-MIB", "tmnxBundleRedDiffDelayAction"), ("TIMETRA-PORT-MIB", "tmnxBundleYellowDiffDelay"), ("TIMETRA-PORT-MIB", "tmnxBundleShortSequence"), ("TIMETRA-PORT-MIB", "tmnxBundleLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxBundleFragmentThreshold"), ("TIMETRA-PORT-MIB", "tmnxBundleUpTime"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberRowStatus"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberActive"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberDownReason"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberUpTime"), ("TIMETRA-PORT-MIB", "tmnxBundleInputDiscards"), ("TIMETRA-PORT-MIB", "tmnxBundlePrimaryMemberPortID"), ("TIMETRA-PORT-MIB", "tmnxBundleLFI"), ("TIMETRA-PORT-MIB", "tmnxPortBundleNumber"), ("TIMETRA-PORT-MIB", "tmnxBundleProtectedType"), ("TIMETRA-PORT-MIB", "tmnxBundleParentBundle"), ("TIMETRA-PORT-MIB", "tmnxBPGrpAssocWorkingBundleID"), ("TIMETRA-PORT-MIB", "tmnxBPGrpAssocProtectBundleID"), ("TIMETRA-PORT-MIB", "tmnxBPGrpAssocActiveBundleID"),))
tmnxPortNotificationGroupV5v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 41)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPInserted"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPRemoved"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPCorrupted"), ("TIMETRA-PORT-MIB", "tmnxEqPortError"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlYellowDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlRedDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlBadEndPtDiscr"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxDS1E1LoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxDS1E1LoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxDS3E3LoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxDS3E3LoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxSonetSDHLoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxSonetSDHLoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxEqPortSpeedCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortDuplexCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortIngressRateCfgNotCompatible"),))
tmnxPortTDMGroupV5v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 42)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS3ChannelAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelCollectStats"), ("TIMETRA-PORT-MIB", "tmnxDS3Buildout"), ("TIMETRA-PORT-MIB", "tmnxDS3Type"), ("TIMETRA-PORT-MIB", "tmnxDS3LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFraming"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelChannelized"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrateCSUMode"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelIdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLoopback"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLEicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLLicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLFicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLUnitString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPfiString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMessageType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFEACLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelCRC"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelInFEACLoop"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelScramble"), ("TIMETRA-PORT-MIB", "tmnxDS1RowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1Type"), ("TIMETRA-PORT-MIB", "tmnxDS1Framing"), ("TIMETRA-PORT-MIB", "tmnxDS1Loopback"), ("TIMETRA-PORT-MIB", "tmnxDS1InvertData"), ("TIMETRA-PORT-MIB", "tmnxDS1BitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS1ClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS1RemoteLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS1InRemoteLoop"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupTimeSlots"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupSpeed"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupCRC"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupIdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupScramble"),))
tmnx7710PortTDMGroupV5v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 43)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS1PortBuildout"), ("TIMETRA-PORT-MIB", "tmnxDS1PortLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS1PortType"), ("TIMETRA-PORT-MIB", "tmnxDS1PortLineLength"), ("TIMETRA-PORT-MIB", "tmnxDS1PortLbo"), ("TIMETRA-PORT-MIB", "tmnxDS1PortDbGain"), ("TIMETRA-PORT-MIB", "tmnxDS1InsertSingleBitError"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupCollectStats"),))
tmnxPortCemGroupV6v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 44)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS3ChannelClockSyncState"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelClockMasterPortId"), ("TIMETRA-PORT-MIB", "tmnxDS1SignalMode"), ("TIMETRA-PORT-MIB", "tmnxDS1ClockSyncState"), ("TIMETRA-PORT-MIB", "tmnxDS1ClockMasterPortId"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupPayloadFillType"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupPayloadPattern"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupSignalFillType"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupSignalPattern"),))
tmnxMcMlpppBundleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 45)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleMlpppClassCount"), ("TIMETRA-PORT-MIB", "tmnxBundleMlpppIngQoSProfId"), ("TIMETRA-PORT-MIB", "tmnxBundleMlpppEgrQoSProfId"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppStatsIngressOct"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppStatsIngressPkt"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppStatsIngressErrPkt"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppStatsEgressOct"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppStatsEgressPkt"), ("TIMETRA-PORT-MIB", "tmnxMcMlpppStatsEgressErrPkt"),))
tmnxPortNotificationGroupV6v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 46)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPInserted"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPRemoved"), ("TIMETRA-PORT-MIB", "tmnxEqPortError"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlYellowDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlRedDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlBadEndPtDiscr"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxDS1E1LoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxDS1E1LoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxDS3E3LoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxDS3E3LoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxSonetSDHLoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxSonetSDHLoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherLoopDetected"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherLoopCleared"), ("TIMETRA-PORT-MIB", "tmnxEqPortSpeedCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortDuplexCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortIngressRateCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqDigitalDiagMonitorFailure"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPStatusFailure"), ("TIMETRA-PORT-MIB", "tmnxDSXClockSyncStateChange"),))
tmnxPortEthernetV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 47)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEtherMTU"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAutoNegotiate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCollectStats"), ("TIMETRA-PORT-MIB", "tmnxPortEtherMDIMDIX"), ("TIMETRA-PORT-MIB", "tmnxPortEtherXGigMode"), ("TIMETRA-PORT-MIB", "tmnxPortEtherEgressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDot1qEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherQinqEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherIngressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxPortEtherPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCOverPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherLacpTunnel"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedEnabled"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedKeepAlive"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedRetry"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedState"), ("TIMETRA-PORT-MIB", "tmnxPortEtherPBBEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReasonDownFlags"),))
tmnxMlBundleGroupV6v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 48)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleRowStatus"), ("TIMETRA-PORT-MIB", "tmnxBundleType"), ("TIMETRA-PORT-MIB", "tmnxBundleMinimumLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleNumLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleNumActiveLinks"), ("TIMETRA-PORT-MIB", "tmnxBundleRedDiffDelay"), ("TIMETRA-PORT-MIB", "tmnxBundleRedDiffDelayAction"), ("TIMETRA-PORT-MIB", "tmnxBundleLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxBundleFragmentThreshold"), ("TIMETRA-PORT-MIB", "tmnxBundleUpTime"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberRowStatus"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberActive"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberDownReason"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberUpTime"), ("TIMETRA-PORT-MIB", "tmnxBundleInputDiscards"), ("TIMETRA-PORT-MIB", "tmnxBundlePrimaryMemberPortID"), ("TIMETRA-PORT-MIB", "tmnxPortBundleNumber"), ("TIMETRA-PORT-MIB", "tmnxBundleProtectedType"), ("TIMETRA-PORT-MIB", "tmnxBundleParentBundle"), ("TIMETRA-PORT-MIB", "tmnxBPGrpAssocWorkingBundleID"), ("TIMETRA-PORT-MIB", "tmnxBPGrpAssocProtectBundleID"), ("TIMETRA-PORT-MIB", "tmnxBPGrpAssocActiveBundleID"),))
tmnxMlpppBundleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 49)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleMlpppEndpointID"), ("TIMETRA-PORT-MIB", "tmnxBundleMlpppEndpointIDClass"), ("TIMETRA-PORT-MIB", "tmnxBundleYellowDiffDelay"), ("TIMETRA-PORT-MIB", "tmnxBundleShortSequence"), ("TIMETRA-PORT-MIB", "tmnxBundleMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundleOperMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundlePeerMRRU"), ("TIMETRA-PORT-MIB", "tmnxBundleOperMTU"), ("TIMETRA-PORT-MIB", "tmnxBundleLFI"), ("TIMETRA-PORT-MIB", "tmnxBundleMlpppMagicNumber"),))
tmnxPortNotificationGroupV3v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 50)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPInserted"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPRemoved"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPCorrupted"), ("TIMETRA-PORT-MIB", "tmnxEqPortError"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlYellowDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlRedDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlBadEndPtDiscr"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSpeedCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortDuplexCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortIngressRateCfgNotCompatible"),))
tmnxHsmdaGroupV6v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 51)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEgrHsmdaSchedPlcy"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrTblLastChngd"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrRowStatus"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrLastChanged"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrMaxRate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrGrp1Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrGrp2Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass1Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass1WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass2Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass2WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass3Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass3WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass4Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass4WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass5Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass5WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass6Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass6WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass7Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass7WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass8Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass8WtInGp"), ("TIMETRA-PORT-MIB", "tmnxPortEgrShaperTblLastChanged"), ("TIMETRA-PORT-MIB", "tmnxPortEgrShaperRowStatus"), ("TIMETRA-PORT-MIB", "tmnxPortEgrShaperLastChanged"), ("TIMETRA-PORT-MIB", "tmnxPortEgrShaperRate"),))
tmnxPortTDMGroupV6v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 52)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS3ChannelAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelCollectStats"), ("TIMETRA-PORT-MIB", "tmnxDS3Buildout"), ("TIMETRA-PORT-MIB", "tmnxDS3Type"), ("TIMETRA-PORT-MIB", "tmnxDS3LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFraming"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelChannelized"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrateCSUMode"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelIdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLoopback"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLEicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLLicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLFicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLUnitString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPfiString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMessageType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFEACLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelCRC"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelInFEACLoop"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelScramble"), ("TIMETRA-PORT-MIB", "tmnxDS1RowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1Type"), ("TIMETRA-PORT-MIB", "tmnxDS1Framing"), ("TIMETRA-PORT-MIB", "tmnxDS1Loopback"), ("TIMETRA-PORT-MIB", "tmnxDS1InvertData"), ("TIMETRA-PORT-MIB", "tmnxDS1BitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS1ClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS1RemoteLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS1InRemoteLoop"), ("TIMETRA-PORT-MIB", "tmnxDS1BerSdThreshold"), ("TIMETRA-PORT-MIB", "tmnxDS1BerSfThreshold"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupTimeSlots"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupSpeed"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupCRC"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupIdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupScramble"),))
tmnxDigitalDiagMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 53)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDDMTemperature"), ("TIMETRA-PORT-MIB", "tmnxDDMTempLowWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMTempLowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMTempHiWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMTempHiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMSupplyVoltage"), ("TIMETRA-PORT-MIB", "tmnxDDMSupplyVoltageLowWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMSupplyVoltageLowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMSupplyVoltageHiWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMSupplyVoltageHiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMTxBiasCurrent"), ("TIMETRA-PORT-MIB", "tmnxDDMTxBiasCurrentLowWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMTxBiasCurrentLowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMTxBiasCurrentHiWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMTxBiasCurrentHiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMTxOutputPower"), ("TIMETRA-PORT-MIB", "tmnxDDMTxOutputPowerLowWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMTxOutputPowerLowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMTxOutputPowerHiWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMTxOutputPowerHiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMRxOpticalPower"), ("TIMETRA-PORT-MIB", "tmnxDDMRxOpticalPowerLowWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMRxOpticalPowerLowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMRxOpticalPowerHiWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMRxOpticalPowerHiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMRxOpticalPowerType"), ("TIMETRA-PORT-MIB", "tmnxDDMAux1"), ("TIMETRA-PORT-MIB", "tmnxDDMAux1LowWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMAux1LowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMAux1HiWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMAux1HiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMAux1Type"), ("TIMETRA-PORT-MIB", "tmnxDDMAux2"), ("TIMETRA-PORT-MIB", "tmnxDDMAux2LowWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMAux2LowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMAux2HiWarning"), ("TIMETRA-PORT-MIB", "tmnxDDMAux2HiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMAux2Type"), ("TIMETRA-PORT-MIB", "tmnxDDMFailedThresholds"), ("TIMETRA-PORT-MIB", "tmnxDDMExternallyCalibrated"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalRxPower4"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalRxPower3"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalRxPower2"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalRxPower1"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalRxPower0"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalTxLaserBiasSlope"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalTxLaserBiasOffset"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalTxPowerSlope"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalTxPowerOffset"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalTemperatureSlope"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalTemperatureOffset"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalVoltageSlope"), ("TIMETRA-PORT-MIB", "tmnxDDMExtCalVoltageOffset"),))
tmnxPortGroupV6v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 54)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortTableLastChange"), ("TIMETRA-PORT-MIB", "tmnxPortLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxPortType"), ("TIMETRA-PORT-MIB", "tmnxPortClass"), ("TIMETRA-PORT-MIB", "tmnxPortDescription"), ("TIMETRA-PORT-MIB", "tmnxPortName"), ("TIMETRA-PORT-MIB", "tmnxPortAlias"), ("TIMETRA-PORT-MIB", "tmnxPortUserAssignedMac"), ("TIMETRA-PORT-MIB", "tmnxPortMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortHwMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortMode"), ("TIMETRA-PORT-MIB", "tmnxPortEncapType"), ("TIMETRA-PORT-MIB", "tmnxPortLagId"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeUp"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeDown"), ("TIMETRA-PORT-MIB", "tmnxPortUpProtocols"), ("TIMETRA-PORT-MIB", "tmnxPortConnectorType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverLaserWaveLen"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverDiagCapable"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverModelNumber"), ("TIMETRA-PORT-MIB", "tmnxPortSFPConnectorCode"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorOUI"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorManufactureDate"), ("TIMETRA-PORT-MIB", "tmnxPortSFPMedia"), ("TIMETRA-PORT-MIB", "tmnxPortSFPEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorSerialNum"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorPartNum"), ("TIMETRA-PORT-MIB", "tmnxPortEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortLinkStatus"), ("TIMETRA-PORT-MIB", "tmnxPortAdminStatus"), ("TIMETRA-PORT-MIB", "tmnxPortOperStatus"), ("TIMETRA-PORT-MIB", "tmnxPortState"), ("TIMETRA-PORT-MIB", "tmnxPortPrevState"), ("TIMETRA-PORT-MIB", "tmnxPortNumAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortAlarmState"), ("TIMETRA-PORT-MIB", "tmnxPortLastAlarmEvent"), ("TIMETRA-PORT-MIB", "tmnxPortClearAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortLastStateChanged"), ("TIMETRA-PORT-MIB", "tmnxPortNumChannels"), ("TIMETRA-PORT-MIB", "tmnxPortNetworkEgrQueues"), ("TIMETRA-PORT-MIB", "tmnxPortIsLeaf"), ("TIMETRA-PORT-MIB", "tmnxPortChanType"), ("TIMETRA-PORT-MIB", "tmnxPortParentPortID"), ("TIMETRA-PORT-MIB", "tmnxPortLoadBalanceAlgorithm"), ("TIMETRA-PORT-MIB", "tmnxPortTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxChannelPortID"), ("TIMETRA-PORT-MIB", "tmnxPortOpticalCompliance"), ("TIMETRA-PORT-MIB", "tmnxL4LoadBalancing"), ("TIMETRA-PORT-MIB", "tmnxPortLastClearedTime"), ("TIMETRA-PORT-MIB", "tmnxPortDDMEventSuppression"), ("TIMETRA-PORT-MIB", "tmnxPortSFPStatus"), ("TIMETRA-PORT-MIB", "tmnxPortReasonDownFlags"),))
tmnxNamedPoolGroupV6v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 55)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortIngNamedPoolPlcy"), ("TIMETRA-PORT-MIB", "tmnxPortEgrNamedPoolPlcy"), ("TIMETRA-PORT-MIB", "tmnxPortIngPoolPercentRate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrPoolPercentRate"),))
tmnxPortEthernetV6v1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 56)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEtherMTU"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAutoNegotiate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCollectStats"), ("TIMETRA-PORT-MIB", "tmnxPortEtherMDIMDIX"), ("TIMETRA-PORT-MIB", "tmnxPortEtherXGigMode"), ("TIMETRA-PORT-MIB", "tmnxPortEtherEgressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDot1qEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherQinqEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherIngressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxPortEtherPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCOverPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherLacpTunnel"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedEnabled"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedKeepAlive"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedRetry"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedState"), ("TIMETRA-PORT-MIB", "tmnxPortEtherPBBEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReasonDownFlags"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSingleFiber"),))
tmnxPortNotifyObjsGroupV6v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 57)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDDMFailedObject"), ("TIMETRA-PORT-MIB", "tmnxDSXClockSyncStateObject"),))
tmnxPortQV7v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 58)).setObjects(*(("TIMETRA-PORT-MIB", "tPortAccEgrQGrpAggRateLimit"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpRowStatus"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpSchedPol"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpAcctgPolId"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpCollectStats"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpFrameBaseActg"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverLastChanged"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverRowStatus"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverAdminCIR"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverAdminPIR"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverCBS"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverHiPrioOnly"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverMBS"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpRowStatus"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpSchedPol"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpAcctgPolId"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpCollectStats"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverLastChanged"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverRowStatus"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverAdminCIR"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverAdminPIR"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverCBS"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverHiPrioOnly"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverMBS"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpAcctgPolId"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpAggRateLimit"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpCollectStats"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpFrameBaseActg"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpLastChgd"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpRowStatus"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpSchedPol"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverAdminCIR"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverAdminPIR"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverCBS"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverHiPrioOnly"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverLastChanged"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverMBS"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverRowStatus"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverCIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverPIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverCIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverPIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverCIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverPIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpDescr"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpDescr"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpDescr"),))
tmnxMcMfrBundleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 59)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleMlfrBundleId"), ("TIMETRA-PORT-MIB", "tmnxBundleMlfrIngQoSProfId"), ("TIMETRA-PORT-MIB", "tmnxBundleMlfrEgrQoSProfId"), ("TIMETRA-PORT-MIB", "tmnxBundleMlfrHelloTimer"), ("TIMETRA-PORT-MIB", "tmnxBundleMlfrHelloRetryCount"), ("TIMETRA-PORT-MIB", "tmnxBundleMlfrAckTimer"), ("TIMETRA-PORT-MIB", "tmnxBundleMlfrLastChanged"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberMlfrDownReason"),))
tmnxFrIntfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 60)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxFrIntfFrf12Mode"), ("TIMETRA-PORT-MIB", "tmnxFrIntfLinkId"), ("TIMETRA-PORT-MIB", "tmnxFrIntfLastChanged"),))
tmnxFrf12IntfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 61)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxFrf12IntfFragmentThreshold"), ("TIMETRA-PORT-MIB", "tmnxFrf12IntfEgrQoSProfId"), ("TIMETRA-PORT-MIB", "tmnxFrf12IntfLastChanged"),))
tmnxPortQStatV7v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 62)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatDpdInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatDpdInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatDpdOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatDpdOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatFwdInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatFwdInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatFwdOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortEgrQosQStatFwdOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatDpdHiPrioOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatDpdHiPrioPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatDpdLoPrioOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatDpdLoPrioPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatFwdInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatFwdInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatFwdOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatFwdOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatOffHiPrioOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatOffHiPrioPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatOffLoPrioOcts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatOffLoPrioPkts"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatUncolOctsOff"), ("TIMETRA-PORT-MIB", "tmnxPortIngQosQStatUncolPktsOff"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgrQDroInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgrQDroInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgrQDroOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgrQDroOutProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgrQFwdInProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgrQFwdInProfPkts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgrQFwdOutProfOcts"), ("TIMETRA-PORT-MIB", "tmnxPortNetEgrQFwdOutProfPkts"),))
tmnxPortEthernetV7v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 63)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEtherMTU"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAutoNegotiate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperDuplex"), ("TIMETRA-PORT-MIB", "tmnxPortEtherOperSpeed"), ("TIMETRA-PORT-MIB", "tmnxPortEtherAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCollectStats"), ("TIMETRA-PORT-MIB", "tmnxPortEtherMDIMDIX"), ("TIMETRA-PORT-MIB", "tmnxPortEtherXGigMode"), ("TIMETRA-PORT-MIB", "tmnxPortEtherEgressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDot1qEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherQinqEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherIngressRate"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxPortEtherReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxPortEtherPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCOverPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherHCPkts1519toMax"), ("TIMETRA-PORT-MIB", "tmnxPortEtherLacpTunnel"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedEnabled"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedKeepAlive"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedRetry"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownWhenLoopedState"), ("TIMETRA-PORT-MIB", "tmnxPortEtherPBBEtype"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSingleFiber"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSSM"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDWLUseBroadcastAddr"),))
tmnxPortGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 64)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortTableLastChange"), ("TIMETRA-PORT-MIB", "tmnxPortLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxPortType"), ("TIMETRA-PORT-MIB", "tmnxPortClass"), ("TIMETRA-PORT-MIB", "tmnxPortDescription"), ("TIMETRA-PORT-MIB", "tmnxPortName"), ("TIMETRA-PORT-MIB", "tmnxPortAlias"), ("TIMETRA-PORT-MIB", "tmnxPortUserAssignedMac"), ("TIMETRA-PORT-MIB", "tmnxPortMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortHwMacAddress"), ("TIMETRA-PORT-MIB", "tmnxPortMode"), ("TIMETRA-PORT-MIB", "tmnxPortEncapType"), ("TIMETRA-PORT-MIB", "tmnxPortLagId"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeUp"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeDown"), ("TIMETRA-PORT-MIB", "tmnxPortUpProtocols"), ("TIMETRA-PORT-MIB", "tmnxPortConnectorType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverType"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverLaserWaveLen"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverDiagCapable"), ("TIMETRA-PORT-MIB", "tmnxPortTransceiverModelNumber"), ("TIMETRA-PORT-MIB", "tmnxPortSFPConnectorCode"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorOUI"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorManufactureDate"), ("TIMETRA-PORT-MIB", "tmnxPortSFPMedia"), ("TIMETRA-PORT-MIB", "tmnxPortSFPEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorSerialNum"), ("TIMETRA-PORT-MIB", "tmnxPortSFPVendorPartNum"), ("TIMETRA-PORT-MIB", "tmnxPortEquipped"), ("TIMETRA-PORT-MIB", "tmnxPortLinkStatus"), ("TIMETRA-PORT-MIB", "tmnxPortAdminStatus"), ("TIMETRA-PORT-MIB", "tmnxPortOperStatus"), ("TIMETRA-PORT-MIB", "tmnxPortState"), ("TIMETRA-PORT-MIB", "tmnxPortPrevState"), ("TIMETRA-PORT-MIB", "tmnxPortNumAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortAlarmState"), ("TIMETRA-PORT-MIB", "tmnxPortLastAlarmEvent"), ("TIMETRA-PORT-MIB", "tmnxPortClearAlarms"), ("TIMETRA-PORT-MIB", "tmnxPortLastStateChanged"), ("TIMETRA-PORT-MIB", "tmnxPortNumChannels"), ("TIMETRA-PORT-MIB", "tmnxPortNetworkEgrQueues"), ("TIMETRA-PORT-MIB", "tmnxPortIsLeaf"), ("TIMETRA-PORT-MIB", "tmnxPortChanType"), ("TIMETRA-PORT-MIB", "tmnxPortParentPortID"), ("TIMETRA-PORT-MIB", "tmnxPortLoadBalanceAlgorithm"), ("TIMETRA-PORT-MIB", "tmnxPortTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeName"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeDescription"), ("TIMETRA-PORT-MIB", "tmnxPortConnectTypeStatus"), ("TIMETRA-PORT-MIB", "tmnxChannelPortID"), ("TIMETRA-PORT-MIB", "tmnxPortOpticalCompliance"), ("TIMETRA-PORT-MIB", "tmnxL4LoadBalancing"), ("TIMETRA-PORT-MIB", "tmnxLsrIpLoadBalancing"), ("TIMETRA-PORT-MIB", "tmnxPortLastClearedTime"), ("TIMETRA-PORT-MIB", "tmnxPortDDMEventSuppression"), ("TIMETRA-PORT-MIB", "tmnxPortSFPStatus"), ("TIMETRA-PORT-MIB", "tmnxPortReasonDownFlags"), ("TIMETRA-PORT-MIB", "tmnxPortSSMRxQualityLevel"), ("TIMETRA-PORT-MIB", "tmnxPortDwdmLaserChannel"), ("TIMETRA-PORT-MIB", "tmnxPortOtuCapable"), ("TIMETRA-PORT-MIB", "tmnxSonetSuppressLoOrderAlarm"),))
tmnxPortNotifyObjsGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 65)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyDescription"),))
tmnxPortNotificationGroupV7v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 66)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPInserted"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPRemoved"), ("TIMETRA-PORT-MIB", "tmnxEqPortError"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlYellowDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlRedDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlBadEndPtDiscr"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxDS1E1LoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxDS1E1LoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxDS3E3LoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxDS3E3LoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxSonetSDHLoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxSonetSDHLoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherLoopDetected"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherLoopCleared"), ("TIMETRA-PORT-MIB", "tmnxEqPortSpeedCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortDuplexCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortIngressRateCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqDigitalDiagMonitorFailure"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPStatusFailure"), ("TIMETRA-PORT-MIB", "tmnxDSXClockSyncStateChange"), ("TIMETRA-PORT-MIB", "tmnxPortUnsupportedFunction"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberMlfrLoopback"), ("TIMETRA-PORT-MIB", "tmnxEqPortWaveTrackerAlarm"),))
tmnxPortEtherObsoleteV7v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 67)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEtherReasonDownFlags"),))
tmnxPortTDMGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 68)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS3ChannelAcctPolicyId"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelCollectStats"), ("TIMETRA-PORT-MIB", "tmnxDS3Buildout"), ("TIMETRA-PORT-MIB", "tmnxDS3Type"), ("TIMETRA-PORT-MIB", "tmnxDS3LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFraming"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelChannelized"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrateCSUMode"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelSubrate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelIdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLoopback"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLEicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLLicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLFicString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLUnitString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPfiString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMessageType"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelFEACLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelCRC"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelInFEACLoop"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonPortString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelMDLMonGenString"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelBERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS3ChannelScramble"), ("TIMETRA-PORT-MIB", "tmnxDS1RowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1Type"), ("TIMETRA-PORT-MIB", "tmnxDS1Framing"), ("TIMETRA-PORT-MIB", "tmnxDS1Loopback"), ("TIMETRA-PORT-MIB", "tmnxDS1InvertData"), ("TIMETRA-PORT-MIB", "tmnxDS1BitErrorInsertionRate"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTPattern"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTDuration"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxDS1ReportAlarmStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1LastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS1ClockSource"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTOperStatus"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTSynched"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTErrors"), ("TIMETRA-PORT-MIB", "tmnxDS1BERTTotalBits"), ("TIMETRA-PORT-MIB", "tmnxDS1RemoteLoopRespond"), ("TIMETRA-PORT-MIB", "tmnxDS1InRemoteLoop"), ("TIMETRA-PORT-MIB", "tmnxDS1BerSdThreshold"), ("TIMETRA-PORT-MIB", "tmnxDS1BerSfThreshold"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupRowStatus"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupTimeSlots"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupSpeed"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupCRC"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupOperMTU"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupLastChangeTime"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupIdleCycleFlags"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupScramble"), ("TIMETRA-PORT-MIB", "tmnxDS0ChanGroupBerSfLinkDown"),))
tmnxPortTDME1GroupV6v1 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 69)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDS1NationalUseBits"),))
tmnxPortNotifyObjsGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 70)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyWTAlarmReason"), ("TIMETRA-PORT-MIB", "tmnxHostMatchNotifyIntDestId"), ("TIMETRA-PORT-MIB", "tmnxHostMatchNotifyOrgString"), ("TIMETRA-PORT-MIB", "tmnxHostMatchNotifySubIdent"),))
tmnxWaveTrackerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 71)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortWaveTrackerCapable"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerAlarmState"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerCfgAlarms"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerEncodeEnable"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerInUse"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerLowerPowerMargin"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerMaxAttainablePwr"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerMeasuredPower"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerMinAttainablePwr"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerPowerCtrlEnable"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerTargetPower"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerTrailName"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerUpperPowerMargin"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerWaveKey1"), ("TIMETRA-PORT-MIB", "tmnxWaveTrackerWaveKey2"),))
tmnxPortGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 72)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortHybridIngAccessWeight"), ("TIMETRA-PORT-MIB", "tmnxPortHybridIngNetworkWeight"), ("TIMETRA-PORT-MIB", "tmnxPortHybridEgrAccessWeight"), ("TIMETRA-PORT-MIB", "tmnxPortHybridEgrNetworkWeight"), ("TIMETRA-PORT-MIB", "tmnxPortInterfaceGroupHandlerIdx"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSSMCodeType"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSSMTxDus"), ("TIMETRA-PORT-MIB", "tmnxSonetTxDus"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverMBSBytes"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverMBSBytes"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverMBSBytes"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverAdminPIRPercent"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverAdminCIRPercent"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverRateType"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverAdminPIRPercent"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverAdminCIRPercent"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverRateType"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpHMTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpHMRowStatus"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpHMLastChgd"), ("TIMETRA-PORT-MIB", "tmnxPortHoldTimeUnits"), ("TIMETRA-PORT-MIB", "tPortEgrVPortHMRowStatus"), ("TIMETRA-PORT-MIB", "tPortEgrVPortHMLastChgd"), ("TIMETRA-PORT-MIB", "tmnxSonetTxS1Byte"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSSMRxEsmc"), ("TIMETRA-PORT-MIB", "tmnxPortEtherSSMTxQualityLevel"),))
tmnxPortDwdmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 73)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortDwdmLaserChannel"), ("TIMETRA-PORT-MIB", "tmnxPortDwdmRxDtvAdjustEnable"), ("TIMETRA-PORT-MIB", "tmnxPortDwdmRxDtvDacPercent"),))
tmnxPortATMGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 74)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxATMIntfCellFormat"), ("TIMETRA-PORT-MIB", "tmnxATMIntfMinVpValue"), ("TIMETRA-PORT-MIB", "tmnxATMIntfMapping"), ("TIMETRA-PORT-MIB", "tmnxATMIntfCustomBufferMode"), ("TIMETRA-PORT-MIB", "tmnxATMIntfBufferPool"), ("TIMETRA-PORT-MIB", "tmnxATMIntfVcThreshold"),))
tmnxPortCEMGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 75)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortCemStatsReportAlarm"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsIgrForwardedPkts"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsIgrDroppedPkts"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrForwardedPkts"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrDroppedPkts"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrMissingPkts"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrPktsReOrder"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrJtrBfrURun"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrJtrBfrORun"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrMisOrderDrop"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrMalformedPkts"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrLBitDrop"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrMultipleDrop"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrESs"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrSESs"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrUASs"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrFailureCounts"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrURunCounts"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrORunCounts"), ("TIMETRA-PORT-MIB", "tmnxPortCemStatsEgrJtrBfrDepth"),))
tmnxPortQV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 76)).setObjects(*(("TIMETRA-PORT-MIB", "tPortAccEgrQGrpAggRateLimit"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpRowStatus"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpSchedPol"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpAcctgPolId"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpCollectStats"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpFrameBaseActg"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverLastChanged"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverRowStatus"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverAdminCIR"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverAdminPIR"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverCBS"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverHiPrioOnly"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpRowStatus"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpSchedPol"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpAcctgPolId"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpCollectStats"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverLastChanged"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverRowStatus"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverAdminCIR"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverAdminPIR"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverCBS"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverHiPrioOnly"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpAcctgPolId"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpAggRateLimit"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpCollectStats"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpFrameBaseActg"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpLastChgd"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpRowStatus"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpSchedPol"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverAdminCIR"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverAdminPIR"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverCBS"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverHiPrioOnly"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverLastChanged"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverRowStatus"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverCIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortAccEgrQOverPIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverCIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverPIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverCIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverPIRAdaptation"), ("TIMETRA-PORT-MIB", "tPortAccIngQGrpDescr"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpDescr"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpDescr"),))
tmnxPortQObsoleteV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 77)).setObjects(*(("TIMETRA-PORT-MIB", "tPortAccEgrQOverMBS"), ("TIMETRA-PORT-MIB", "tPortAccIngQOverMBS"), ("TIMETRA-PORT-MIB", "tPortNetEgrQOverMBS"),))
tmnxPortNotificationGroupV8v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 78)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortSonetPathAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPInserted"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPRemoved"), ("TIMETRA-PORT-MIB", "tmnxEqPortError"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS3AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1Alarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortDS1AlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlYellowDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlRedDiffExceeded"), ("TIMETRA-PORT-MIB", "tmnxEqPortBndlBadEndPtDiscr"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxDS1E1LoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxDS1E1LoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxDS3E3LoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxDS3E3LoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxSonetSDHLoopbackStarted"), ("TIMETRA-PORT-MIB", "tmnxSonetSDHLoopbackStopped"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherLoopDetected"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherLoopCleared"), ("TIMETRA-PORT-MIB", "tmnxEqPortSpeedCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortDuplexCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqPortIngressRateCfgNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqDigitalDiagMonitorFailure"), ("TIMETRA-PORT-MIB", "tmnxEqPortSFPStatusFailure"), ("TIMETRA-PORT-MIB", "tmnxDSXClockSyncStateChange"), ("TIMETRA-PORT-MIB", "tmnxPortUnsupportedFunction"), ("TIMETRA-PORT-MIB", "tmnxBundleMemberMlfrLoopback"), ("TIMETRA-PORT-MIB", "tmnxEqPortWaveTrackerAlarm"), ("TIMETRA-PORT-MIB", "tPortAccEgrQGrpHostMatchFailure"), ("TIMETRA-PORT-MIB", "tPortEgrVPortHostMatchFailure"), ("TIMETRA-PORT-MIB", "tmnxEqDigitalDiagMonitorClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortOpticalAmpAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortOpticalTdcmAlarm"),))
tmnxPortSchedStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 79)).setObjects(*(("TIMETRA-PORT-MIB", "tPortAccEgrSchedStatFwdOcts"), ("TIMETRA-PORT-MIB", "tPortAccEgrSchedStatFwdPkts"), ("TIMETRA-PORT-MIB", "tPortAccIngSchedStatFwdOcts"), ("TIMETRA-PORT-MIB", "tPortAccIngSchedStatFwdPkts"), ("TIMETRA-PORT-MIB", "tPortNetEgrSchedStatFwdOcts"), ("TIMETRA-PORT-MIB", "tPortNetEgrSchedStatFwdPkts"), ("TIMETRA-PORT-MIB", "tPortAccEgrSchedStatFwdOctsHi"), ("TIMETRA-PORT-MIB", "tPortAccEgrSchedStatFwdOctsLo"), ("TIMETRA-PORT-MIB", "tPortAccEgrSchedStatFwdPktsHi"), ("TIMETRA-PORT-MIB", "tPortAccEgrSchedStatFwdPktsLo"), ("TIMETRA-PORT-MIB", "tPortAccIngSchedStatFwdOctsHi"), ("TIMETRA-PORT-MIB", "tPortAccIngSchedStatFwdOctsLo"), ("TIMETRA-PORT-MIB", "tPortAccIngSchedStatFwdPktsHi"), ("TIMETRA-PORT-MIB", "tPortAccIngSchedStatFwdPktsLo"), ("TIMETRA-PORT-MIB", "tPortNetEgrSchedStatFwdOctsHi"), ("TIMETRA-PORT-MIB", "tPortNetEgrSchedStatFwdOctsLo"), ("TIMETRA-PORT-MIB", "tPortNetEgrSchedStatFwdPktsHi"), ("TIMETRA-PORT-MIB", "tPortNetEgrSchedStatFwdPktsLo"),))
tmnxPortVPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 80)).setObjects(*(("TIMETRA-PORT-MIB", "tPortEgrVPortDescr"), ("TIMETRA-PORT-MIB", "tPortEgrVPortLastChanged"), ("TIMETRA-PORT-MIB", "tPortEgrVPortRowStatus"), ("TIMETRA-PORT-MIB", "tPortEgrVPortSchedPol"), ("TIMETRA-PORT-MIB", "tPortEgrVPortTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortEgrVPortHMTableLastChgd"),))
tmnxMlpppBundleGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 81)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxBundleMlpppStatelessApsSwo"),))
tmnxOpticalPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 82)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpCfgAlarms"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmCtrlMode"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmManCfgDisp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmCfgRxChan"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmCfgAlarms"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortHasRxAmplifier"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortHasRxTdcm"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpPowerIn"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpGain"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpPowerOut"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpPumpTemp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpModuleTemp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpPumpCurrent"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpAlarmState"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpSerialNum"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortAmpCtrlState"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmPowerIn"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmLoss"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmPowerOut"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmRtd1Temp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmRtd2Temp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmRtd3Temp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmRtd4Temp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmModuleTemp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmMinDisp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmMaxDisp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmAutoDisp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmMeasDisp"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmPresRxChan"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmAlarmState"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmSerialNum"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmCtrlState"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmDispSwpStart"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortTdcmDispSwpEnd"),))
tmnxPortATMGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 90)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortATMVpShaperTblLastCh"), ("TIMETRA-PORT-MIB", "tmnxPortATMVpShaperRowStatus"), ("TIMETRA-PORT-MIB", "tmnxPortATMVpShaperLastMgmtCh"), ("TIMETRA-PORT-MIB", "tmnxPortATMVpShaperEgrAtd"),))
tmnxPortVPortV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 91)).setObjects(*(("TIMETRA-PORT-MIB", "tPortEgrVPortDescr"), ("TIMETRA-PORT-MIB", "tPortEgrVPortLastChanged"), ("TIMETRA-PORT-MIB", "tPortEgrVPortRowStatus"), ("TIMETRA-PORT-MIB", "tPortEgrVPortSchedPol"), ("TIMETRA-PORT-MIB", "tPortEgrVPortTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortEgrVPortHMTableLastChgd"), ("TIMETRA-PORT-MIB", "tPortEgrVPortAggRateLimit"),))
tmnxPortEgrExpShaperV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 92)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperTblLastChngd"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperRowStatus"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperRate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass1Rate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass2Rate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass3Rate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass4Rate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass5Rate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass6Rate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass7Rate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass8Rate"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperLastChanged"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass1Thresh"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass2Thresh"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass3Thresh"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass4Thresh"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass5Thresh"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass6Thresh"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass7Thresh"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperClass8Thresh"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperLoBrstMaxCls"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls1StFwdPkts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls1StFwdOcts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls1StMonOvrOct"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls2StFwdPkts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls2StFwdOcts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls2StMonOvrOct"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls3StFwdPkts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls3StFwdOcts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls3StMonOvrOct"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls4StFwdPkts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls4StFwdOcts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls4StMonOvrOct"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls5StFwdPkts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls5StFwdOcts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls5StMonOvrOct"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls6StFwdPkts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls6StFwdOcts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls6StMonOvrOct"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls7StFwdPkts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls7StFwdOcts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls7StMonOvrOct"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls8StFwdPkts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls8StFwdOcts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls8StMonOvrOct"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperAggStFwdPkts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperAggStFwdOcts"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperAggStMonOvrOct"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperStLstClrdTime"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls1StFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls1StFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls1StFwdOctsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls1StFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls1StMonOvrOL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls1StMonOvrOH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls2StFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls2StFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls2StFwdOctsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls2StFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls2StMonOvrOL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls2StMonOvrOH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls3StFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls3StFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls3StFwdOctsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls3StFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls3StMonOvrOL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls3StMonOvrOH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls4StFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls4StFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls4StFwdOctsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls4StFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls4StMonOvrOL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls4StMonOvrOH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls5StFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls5StFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls5StFwdOctsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls5StFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls5StMonOvrOL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls5StMonOvrOH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls6StFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls6StFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls6StFwdOctsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls6StFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls6StMonOvrOL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls6StMonOvrOH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls7StFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls7StFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls7StFwdOctsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls7StFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls7StMonOvrOL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls7StMonOvrOH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls8StFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls8StFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls8StFwdOctsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls8StFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls8StMonOvrOL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperCls8StMonOvrOH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperAggStFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperAggStFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperAggStFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperAggStFwdOctsH"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperAggStMonOvrOL"), ("TIMETRA-PORT-MIB", "tPortEgrExpShaperAggStMonOvrOH"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperThresh"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperLoBurstLimit"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperHiBurstInc"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperCl1BrstLimit"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperCl2BrstLimit"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperCl3BrstLimit"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperCl4BrstLimit"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperCl5BrstLimit"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperCl6BrstLimit"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperCl7BrstLimit"), ("TIMETRA-PORT-MIB", "tmnxPortEgrExpShaperCl8BrstLimit"),))
tmnxPortNotificationGroupV9v4 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 93)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxEqSonetClockSrcNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqSonetSfThreshNotCompatible"), ("TIMETRA-PORT-MIB", "tmnxEqSonetFramingNotCompatible"),))
tmnxPortObjAppV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 94)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxObjectAppResvCbsAmbrAlrmStep"), ("TIMETRA-PORT-MIB", "tmnxObjectAppResvCbsAmbrAlrmMax"), ("TIMETRA-PORT-MIB", "tmnxObjectAppAmbrAlrmThresh"), ("TIMETRA-PORT-MIB", "tmnxObjectAppRedAlrmThresh"),))
tmnxOpticalPortGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 95)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxOpticalPortDwdmChannelMin"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortDwdmChannelMax"), ("TIMETRA-PORT-MIB", "tmnxOpticalPortLaserTunability"),))
tmnxPortNotifyObjsGroupV8v9 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 96)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxObjType"), ("TIMETRA-PORT-MIB", "tmnxObjPortId"), ("TIMETRA-PORT-MIB", "tmnxObjMdaId"), ("TIMETRA-PORT-MIB", "tmnxObjAppType"), ("TIMETRA-PORT-MIB", "tmnxObjAppPool"), ("TIMETRA-PORT-MIB", "tmnxObjNamedPoolPolicy"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvSize"), ("TIMETRA-PORT-MIB", "tmnxObjAppSumOfQResvSize"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvCbsOld"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvCbsNew"), ("TIMETRA-PORT-MIB", "tmnxObjAppResvSizeOld"),))
tmnxPortNotificationGroupV8v9 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 97)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxResvCbsPoolThreshGreen"), ("TIMETRA-PORT-MIB", "tmnxResvCbsPoolThreshAmber"), ("TIMETRA-PORT-MIB", "tmnxResvCbsPoolThreshRed"),))
tmnxPortEgrVPortStatsV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 99)).setObjects(*(("TIMETRA-PORT-MIB", "tPortEgrVPStLstClrdTime"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlFwdPkt"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlFwdOct"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlDpdPkt"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlDpdOct"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlFwdPktL"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlFwdPktH"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlFwdOctL"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlFwdOctH"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlDpdPktL"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlDpdPktH"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlDpdOctL"), ("TIMETRA-PORT-MIB", "tPortEgrVPStLvlDpdOctH"),))
tmnxPortNotifyObjsV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 100)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherCrcThreshold"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherCrcMultiplier"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyEtherCrcAlarmValue"),))
tmnxPortEtherV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 101)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEtherCrcMonSdThreshold"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCrcMonSdTMultiplier"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCrcMonSfThreshold"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCrcMonSfTMultiplier"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCrcMonWindowSize"), ("TIMETRA-PORT-MIB", "tmnxPortEtherCrcAlarmReason"), ("TIMETRA-PORT-MIB", "tmnxPortEtherDownOnInternalError"),))
tmnxPortNotificationV9v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 102)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxEqPortEtherCrcAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherCrcAlarmClear"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherInternalAlarm"), ("TIMETRA-PORT-MIB", "tmnxEqPortEtherInternalAlarmClr"),))
tmnxPortV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 103)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortLinkLengthInfo"),))
tmnxPortNetEgrV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 104)).setObjects(*(("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPlcrCntrlPolicy"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStatMode"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffInProfPkt"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffInProfPktL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffInProfPktH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdInProfPkt"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdInProfPktL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdInProfPktH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpInProfPkt"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpInProfPktL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpInProfPktH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffOutProfPkt"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffOutProfPktL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffOutProfPktH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdOutProfPkt"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdOutProfPktL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdOutProfPktH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpOutProfPkt"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpOutProfPktL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpOutProfPktH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffInProfOct"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffInProfOctL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffInProfOctH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdInProfOct"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdInProfOctL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdInProfOctH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpInProfOct"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpInProfOctL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpInProfOctH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffOutProfOct"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffOutProfOctL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStOffOutProfOctH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdOutProfOct"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdOutProfOctL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStFwdOutProfOctH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpOutProfOct"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpOutProfOctL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStDrpOutProfOctH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStUncolPktOff"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStUncolPktOffL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStUncolPktOffH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStUncolOctOff"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStUncolOctOffL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpPStUncolOctOffH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpArbitStatFwdPkts"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpArbitStatFwdPktsL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpArbitStatFwdPktsH"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpArbitStatFwdOcts"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpArbitStatFwdOctsL"), ("TIMETRA-PORT-MIB", "tPortNetEgrQGrpArbitStatFwdOctsH"),))
tmnxDDMLaneGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 105)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortSFPNumLanes"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTemperature"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTempLowWarn"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTempLowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTempHiWarn"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTempHiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxBiasCurrent"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxBiasCurrentLowWarn"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxBiasCurrentLowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxBiasCurrentHiWarn"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxBiasCurrentHiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxOutputPower"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxOutputPowerLowWarn"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxOutputPowerLowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxOutputPowerHiWarn"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneTxOutputPowerHiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneRxOpticalPower"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneRxOpticalPwrLowWarn"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneRxOpticalPwrLowAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneRxOpticalPwrHiWarn"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneRxOpticalPwrHiAlarm"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneRxOpticalPowerType"), ("TIMETRA-PORT-MIB", "tmnxDDMLaneFailedThresholds"),))
tmnxPortNotifyObjsGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 106)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxDDMLaneIdOrModule"),))
tmnxPortPlcyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 107)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortPlcyTableLastCh"), ("TIMETRA-PORT-MIB", "tmnxPortPlcyRowStatus"), ("TIMETRA-PORT-MIB", "tmnxPortPlcyLastCh"), ("TIMETRA-PORT-MIB", "tmnxPortPlcyDescription"), ("TIMETRA-PORT-MIB", "tmnxPortPlcyEgrPortSchedPlcy"),))
tmnxPortLoadBalGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 108)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxIpLoadBalancing"),))
tmnxPortEthernetV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 109)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEtherMinFrameLength"), ("TIMETRA-PORT-MIB", "tmnxPortPhysStateChangeCount"),))
tmnxHsmdaGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 110)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEgrHsmdaSchedPlcy"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrTblLastChngd"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrRowStatus"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrLastChanged"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrMaxRate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrGrp1Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrGrp2Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass1Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass1WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass2Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass2WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass3Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass3WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass4Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass4WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass5Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass5WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass6Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass6WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass7Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass7WtInGp"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass8Rate"), ("TIMETRA-PORT-MIB", "tmnxHsmdaPortSchOvrClass8WtInGp"),))
tmnxPortObsoletedV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 111)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPortEgrShaperTblLastChanged"), ("TIMETRA-PORT-MIB", "tmnxPortEgrShaperRowStatus"), ("TIMETRA-PORT-MIB", "tmnxPortEgrShaperLastChanged"), ("TIMETRA-PORT-MIB", "tmnxPortEgrShaperRate"),))
tmnxPwPortV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 2, 2, 2, 112)).setObjects(*(("TIMETRA-PORT-MIB", "tmnxPwPortTblLastChanged"), ("TIMETRA-PORT-MIB", "tmnxPwPortRowStatus"), ("TIMETRA-PORT-MIB", "tmnxPwPortLastChgd"), ("TIMETRA-PORT-MIB", "tmnxPwPortEncapType"),))
mibBuilder.exportSymbols("TIMETRA-PORT-MIB", tmnxPortNotifyBerSdTca=tmnxPortNotifyBerSdTca, tmnxBundleImaGrpTxIcpCells=tmnxBundleImaGrpTxIcpCells, tPortEgrVPStLvlFwdPktH=tPortEgrVPStLvlFwdPktH, tmnxPortSFPVendorManufactureDate=tmnxPortSFPVendorManufactureDate, tmnxDS3ChannelMDLEicString=tmnxDS3ChannelMDLEicString, tPortEgrExpShaperCls7StMonOvrOct=tPortEgrExpShaperCls7StMonOvrOct, tmnxSonetPathCRC=tmnxSonetPathCRC, tmnxDDMLaneRxOpticalPowerType=tmnxDDMLaneRxOpticalPowerType, tmnxMcMlpppStatsEgressPkt=tmnxMcMlpppStatsEgressPkt, tPortEgrExpShaperCls6StFwdPktsL=tPortEgrExpShaperCls6StFwdPktsL, tmnxBundleImaGrpSymmetryMode=tmnxBundleImaGrpSymmetryMode, tmnxDS0ChanGroupPayloadFillType=tmnxDS0ChanGroupPayloadFillType, TmnxDS1Loopback=TmnxDS1Loopback, tmnxBundleMemberTable=tmnxBundleMemberTable, tmnxOpticalPortDwdmChannelMin=tmnxOpticalPortDwdmChannelMin, tmnxOpticalPortTdcmAlarmState=tmnxOpticalPortTdcmAlarmState, tmnxDDMLaneTxBiasCurrentHiWarn=tmnxDDMLaneTxBiasCurrentHiWarn, tmnxPortFCStatsIngFwdOutProfPkts=tmnxPortFCStatsIngFwdOutProfPkts, tmnxPortLinkLengthInfo=tmnxPortLinkLengthInfo, tmnxPortEthernetV6v1Group=tmnxPortEthernetV6v1Group, tmnxSonetGroupEntry=tmnxSonetGroupEntry, tmnxBundleImaGrpFeClockMode=tmnxBundleImaGrpFeClockMode, tmnxSonetPathEntry=tmnxSonetPathEntry, tmnxPortEgrExpShaperClass1Thresh=tmnxPortEgrExpShaperClass1Thresh, tmnxSonetPathC2Byte=tmnxSonetPathC2Byte, tmnxPortCEMGroupV8v0=tmnxPortCEMGroupV8v0, tmnxBundleRedDiffDelay=tmnxBundleRedDiffDelay, TmnxPortOperStatus=TmnxPortOperStatus, tmnxOpticalPortTdcmMinDisp=tmnxOpticalPortTdcmMinDisp, tmnxPortTestLastResult=tmnxPortTestLastResult, tPortNetEgrQGrpArbitStatName=tPortNetEgrQGrpArbitStatName, tmnxDS1E1LoopbackStopped=tmnxDS1E1LoopbackStopped, tmnxPortNotificationGroupV8v0=tmnxPortNotificationGroupV8v0, tmnxPortSchedOverrideLvl1CIR=tmnxPortSchedOverrideLvl1CIR, tPortNetEgrQGrpCollectStats=tPortNetEgrQGrpCollectStats, tmnxPortComp7710V7v0=tmnxPortComp7710V7v0, tmnxDS3ChannelMDLLicString=tmnxDS3ChannelMDLLicString, tmnxEqPortSonetPathAlarmClear=tmnxEqPortSonetPathAlarmClear, tPortEgrExpShaperCls2StFwdPktsL=tPortEgrExpShaperCls2StFwdPktsL, TmnxMcMlpppClassIndex=TmnxMcMlpppClassIndex, tmnxQosAppObjs=tmnxQosAppObjs, tPortEgrExpShaperAggStMonOvrOct=tPortEgrExpShaperAggStMonOvrOct, tmnxPortEgrQosQStatEntry=tmnxPortEgrQosQStatEntry, tPortAccEgrQOverQueue=tPortAccEgrQOverQueue, tmnxPortIngrMdaQos05StatDropOcts=tmnxPortIngrMdaQos05StatDropOcts, tmnxDS3Entry=tmnxDS3Entry, tmnxPortSchedOverrideLvl8CIR=tmnxPortSchedOverrideLvl8CIR, tmnxDDMExtCalTxPowerOffset=tmnxDDMExtCalTxPowerOffset, tmnxPortNotificationObjects=tmnxPortNotificationObjects, tmnxPortTypeTable=tmnxPortTypeTable, tPortEgrVPStLvlDpdPkt=tPortEgrVPStLvlDpdPkt, tmnxBundleMemberActive=tmnxBundleMemberActive, tmnxDDMLaneTempHiWarn=tmnxDDMLaneTempHiWarn, tPortNetEgrQGrpPStDrpInProfOctL=tPortNetEgrQGrpPStDrpInProfOctL, TmnxPortEtherReportValue=TmnxPortEtherReportValue, tmnxDS0ChanGroupMTU=tmnxDS0ChanGroupMTU, tPortAccIngQOverQueue=tPortAccIngQOverQueue, tmnxPortPlcyEgrPortSchedPlcy=tmnxPortPlcyEgrPortSchedPlcy, tmnxHsmdaPortSchOvrClass8Rate=tmnxHsmdaPortSchOvrClass8Rate, tmnxOpticalPortCfgTable=tmnxOpticalPortCfgTable, tPortAccIngQGrpAcctgPolId=tPortAccIngQGrpAcctgPolId, tPortEgrExpShaperStLstClrdTime=tPortEgrExpShaperStLstClrdTime, tmnxBundleMemberImaRxIcpCells=tmnxBundleMemberImaRxIcpCells, tPortEgrExpShaperCls7StFwdOctsL=tPortEgrExpShaperCls7StFwdOctsL, tmnxBundleMlpppIngQoSProfId=tmnxBundleMlpppIngQoSProfId, tmnxPortPlcyObjs=tmnxPortPlcyObjs, tPortAccIngQOverLastChanged=tPortAccIngQOverLastChanged, tmnxPortCemStatsEgrMisOrderDrop=tmnxPortCemStatsEgrMisOrderDrop, tmnxOpticalPortTdcmAutoDisp=tmnxOpticalPortTdcmAutoDisp, tmnxPortNetIngressStatsTable=tmnxPortNetIngressStatsTable, tmnxBundleMemberImaOifAnomalies=tmnxBundleMemberImaOifAnomalies, tmnxSonetPathMonJ1String=tmnxSonetPathMonJ1String, tmnxBundleLFI=tmnxBundleLFI, tmnxDS1ReportAlarmStatus=tmnxDS1ReportAlarmStatus, tmnxBundleFragmentThreshold=tmnxBundleFragmentThreshold, tmnxPortObjAppV9v0Group=tmnxPortObjAppV9v0Group, tmnxDS3ChannelScramble=tmnxDS3ChannelScramble, tmnxDS3E3LoopbackStopped=tmnxDS3E3LoopbackStopped, tmnxDS1BERTOperStatus=tmnxDS1BERTOperStatus, tPortEgrExpShaperCls2StFwdOcts=tPortEgrExpShaperCls2StFwdOcts, tmnxHsmdaPortSchOvrClass7WtInGp=tmnxHsmdaPortSchOvrClass7WtInGp, tmnxPortConnectorType=tmnxPortConnectorType, tmnxDDMAux1LowWarning=tmnxDDMAux1LowWarning, tmnxPortMacAddress=tmnxPortMacAddress, tmnxPortEgrQosQStatDpdOutProfOcts=tmnxPortEgrQosQStatDpdOutProfOcts, tmnxEqPortIngressRateCfgNotCompatible=tmnxEqPortIngressRateCfgNotCompatible, tmnxPortTDMGroupV6v0=tmnxPortTDMGroupV6v0, tmnxPortTestState=tmnxPortTestState, tmnxPortIngrMdaQosStatTable=tmnxPortIngrMdaQosStatTable, tmnxPortNetIngressDroOutProfOcts=tmnxPortNetIngressDroOutProfOcts, tmnxPortFCStatsEgrFwdOutProfPkts=tmnxPortFCStatsEgrFwdOutProfPkts, tmnxWaveTrackerPowerCtrlEnable=tmnxWaveTrackerPowerCtrlEnable, tmnxDDMAux1HiWarning=tmnxDDMAux1HiWarning, tmnxBundleMemberImaFeRxState=tmnxBundleMemberImaFeRxState, tPortNetEgrQGrpPStFwdInProfPkt=tPortNetEgrQGrpPStFwdInProfPkt, tPortNetEgrSchedStatFwdOctsLo=tPortNetEgrSchedStatFwdOctsLo, tmnxDDMRxOpticalPowerHiAlarm=tmnxDDMRxOpticalPowerHiAlarm, tPortAccEgrSchedStatTable=tPortAccEgrSchedStatTable, tmnxPortEgrShaperRowStatus=tmnxPortEgrShaperRowStatus, tmnxDS1BERTPattern=tmnxDS1BERTPattern, tPortNetEgrQGrpPStOffInProfOct=tPortNetEgrQGrpPStOffInProfOct, tmnxSonetLoopback=tmnxSonetLoopback, tmnxPortEgrExpShaperClass7Thresh=tmnxPortEgrExpShaperClass7Thresh, tPortNetEgrQGrpPStDrpOutProfOctH=tPortNetEgrQGrpPStDrpOutProfOctH, tmnxPortSchedOverrideMaxRate=tmnxPortSchedOverrideMaxRate, tmnxPortObjs=tmnxPortObjs, TmnxImaGrpFailState=TmnxImaGrpFailState, tPortNetEgrSchedStatName=tPortNetEgrSchedStatName, tmnxPortEtherSpeed=tmnxPortEtherSpeed, tmnxHsmdaGroupV10v0=tmnxHsmdaGroupV10v0, tmnxPortEtherCrcMonSfTMultiplier=tmnxPortEtherCrcMonSfTMultiplier, tmnxEqPortOpticalTdcmAlarm=tmnxEqPortOpticalTdcmAlarm, tmnxEqPortEtherInternalAlarm=tmnxEqPortEtherInternalAlarm, tmnxPortNetEgressDroOutProfOcts=tmnxPortNetEgressDroOutProfOcts, tmnxDS0ChanGroupTable=tmnxDS0ChanGroupTable, tmnxSonetReportAlarmStatus=tmnxSonetReportAlarmStatus, tmnxFrf12IntfLastChanged=tmnxFrf12IntfLastChanged, tmnxDDMAux1Type=tmnxDDMAux1Type, tmnxDS1NationalUseBits=tmnxDS1NationalUseBits, tmnxDDMRxOpticalPower=tmnxDDMRxOpticalPower, tmnxPortEgrQosQStatFwdInProfOcts=tmnxPortEgrQosQStatFwdInProfOcts, TmnxDigitalDiagnosticFailureBits=TmnxDigitalDiagnosticFailureBits, tmnxPortCemStatsEgrURunCounts=tmnxPortCemStatsEgrURunCounts, tmnxHostMatchNotifySubIdent=tmnxHostMatchNotifySubIdent, tmnxBundleMemberImaFeSevErrSecs=tmnxBundleMemberImaFeSevErrSecs, tmnxPortIngrMdaQos01StatDropPkts=tmnxPortIngrMdaQos01StatDropPkts, tmnxDS3ChannelBERTDuration=tmnxDS3ChannelBERTDuration, tmnxSonetBerSfThreshold=tmnxSonetBerSfThreshold, tmnxBundleImaGrpNeFails=tmnxBundleImaGrpNeFails, tmnxObjAppPool=tmnxObjAppPool, tmnxPortEtherSSM=tmnxPortEtherSSM, tmnxPortNotifyObjsGroupV10v0=tmnxPortNotifyObjsGroupV10v0, tmnxDDMExtCalTemperatureOffset=tmnxDDMExtCalTemperatureOffset, tmnxPortConnectTypeIndex=tmnxPortConnectTypeIndex, tmnxDDMTxBiasCurrent=tmnxDDMTxBiasCurrent, tmnxSonetSingleFiber=tmnxSonetSingleFiber, tmnxDDMTxBiasCurrentLowWarning=tmnxDDMTxBiasCurrentLowWarning, tmnxPortIngrMdaQos10StatDropOcts=tmnxPortIngrMdaQos10StatDropOcts, tmnxPortPhysStateChangeCount=tmnxPortPhysStateChangeCount, tmnxPortIngQosQStatDpdHiPrioOcts=tmnxPortIngQosQStatDpdHiPrioOcts, tmnxBundleImaGrpFeFails=tmnxBundleImaGrpFeFails, tmnxOpticalPortTdcmMaxDisp=tmnxOpticalPortTdcmMaxDisp, tmnxPortComp7710V5v0=tmnxPortComp7710V5v0, TmnxImaGrpVersion=TmnxImaGrpVersion, tmnxATMIntfTable=tmnxATMIntfTable, tmnxPortSFPVendorOUI=tmnxPortSFPVendorOUI, tPortAccEgrQGrpAggRateLimit=tPortAccEgrQGrpAggRateLimit, tmnxPortComp7450V8v0=tmnxPortComp7450V8v0, tmnxDDMExtCalTxPowerSlope=tmnxDDMExtCalTxPowerSlope, tmnxPortReasonDownFlags=tmnxPortReasonDownFlags, tPortEgrVPortAggRateLimit=tPortEgrVPortAggRateLimit, tmnxOpticalPortTdcmMeasDisp=tmnxOpticalPortTdcmMeasDisp, tmnxFRDlcmiTxStatusMsgs=tmnxFRDlcmiTxStatusMsgs, tPortAccEgrQGrpHMRowStatus=tPortAccEgrQGrpHMRowStatus, tPortNetEgrQGrpName=tPortNetEgrQGrpName, tmnxEqPortEtherLoopCleared=tmnxEqPortEtherLoopCleared, tPortEgrExpShaperCls2StMonOvrOct=tPortEgrExpShaperCls2StMonOvrOct, tmnxPortIngrMdaQos15StatDropPkts=tmnxPortIngrMdaQos15StatDropPkts, tmnxPortEtherObsoleteV7v0Group=tmnxPortEtherObsoleteV7v0Group, tPortNetEgrQGrpPStatTable=tPortNetEgrQGrpPStatTable, tPortAccEgrQGrpTable=tPortAccEgrQGrpTable, tmnxPortEgrExpShaperCl2BrstLimit=tmnxPortEgrExpShaperCl2BrstLimit, tmnxSonetApsAuthKey=tmnxSonetApsAuthKey, tPortAccEgrQGrpHMLastChgd=tPortAccEgrQGrpHMLastChgd, tmnxDS1PortLineLength=tmnxDS1PortLineLength, tmnxSonetMonK2Byte=tmnxSonetMonK2Byte, tmnxEqDigitalDiagMonitorFailure=tmnxEqDigitalDiagMonitorFailure, tmnxDDMExtCalTemperatureSlope=tmnxDDMExtCalTemperatureSlope, tmnxDS1ReportAlarm=tmnxDS1ReportAlarm, tmnxPortComp7750V7v0=tmnxPortComp7750V7v0, tPortAccIngQGrpCollectStats=tPortAccIngQGrpCollectStats, tmnxDDMAux2=tmnxDDMAux2, tmnxPortLastStateChanged=tmnxPortLastStateChanged, tmnxPortEgrQosQStatTable=tmnxPortEgrQosQStatTable, tPortAccEgrQGrpName=tPortAccEgrQGrpName, tmnxDS1BERTSynched=tmnxDS1BERTSynched, tmnxBundleRedDiffDelayAction=tmnxBundleRedDiffDelayAction, tmnxBundleLastChangeTime=tmnxBundleLastChangeTime, tPortAccIngQGrpName=tPortAccIngQGrpName, tmnxPortAdminStatus=tmnxPortAdminStatus, tmnxPortQObsoleteV8v0Group=tmnxPortQObsoleteV8v0Group, tmnxPortATMVpShaperLastMgmtCh=tmnxPortATMVpShaperLastMgmtCh, tmnxResvCbsPoolThreshGreen=tmnxResvCbsPoolThreshGreen, tmnxPortEtherReportAlarm=tmnxPortEtherReportAlarm, tmnxPortPlcyEntry=tmnxPortPlcyEntry, tmnxPortOpticalCompliance=tmnxPortOpticalCompliance, tmnxPortEgrExpShaperClass5Rate=tmnxPortEgrExpShaperClass5Rate, tmnxPortIngrMdaQos14StatDropOcts=tmnxPortIngrMdaQos14StatDropOcts, tmnxDS3Buildout=tmnxDS3Buildout, tmnxPortEthernetV10v0Group=tmnxPortEthernetV10v0Group, tmnxPortNetEgressFwdOutProfPkts=tmnxPortNetEgressFwdOutProfPkts, tmnxPortIngQosQStatDpdHiPrioPkts=tmnxPortIngQosQStatDpdHiPrioPkts, tmnxSonetPathCollectStats=tmnxSonetPathCollectStats, tmnxWaveTrackerAlarmState=tmnxWaveTrackerAlarmState, tmnxHsmdaPortSchOvrClass2WtInGp=tmnxHsmdaPortSchOvrClass2WtInGp, tmnxPortIngQosQStatDpdLoPrioOcts=tmnxPortIngQosQStatDpdLoPrioOcts, tmnxPortFCStatsEgrDroInProfPkts=tmnxPortFCStatsEgrDroInProfPkts, tmnxOpticalPortTdcmRtd3Temp=tmnxOpticalPortTdcmRtd3Temp, tmnxPortSchedOverrideLvl2PIR=tmnxPortSchedOverrideLvl2PIR, tmnxPortNotifyObjsGroupV7v0=tmnxPortNotifyObjsGroupV7v0, tmnxPortNotificationGroupV3v0=tmnxPortNotificationGroupV3v0, tPortNetEgrQGrpPStOffOutProfOctL=tPortNetEgrQGrpPStOffOutProfOctL, tmnxPortFCStatsIngFwdInProfPkts=tmnxPortFCStatsIngFwdInProfPkts, tmnxPortHoldTimeUp=tmnxPortHoldTimeUp, tPortNetEgrQGrpPStDrpInProfOct=tPortNetEgrQGrpPStDrpInProfOct, tmnxPortATMGroupV4v0=tmnxPortATMGroupV4v0, tmnxDS3Type=tmnxDS3Type, tmnxPortSchedV5v0Group=tmnxPortSchedV5v0Group, tPortEgrExpShaperAggStFwdPktsL=tPortEgrExpShaperAggStFwdPktsL, tmnxResvCbsPoolThreshAmber=tmnxResvCbsPoolThreshAmber, tmnxPortEgrExpShaperRate=tmnxPortEgrExpShaperRate, tPortEgrExpShaperCls3StFwdOcts=tPortEgrExpShaperCls3StFwdOcts, tPortEgrVPortHostMatchTable=tPortEgrVPortHostMatchTable, tmnxDDMAux1HiAlarm=tmnxDDMAux1HiAlarm, tPortNetEgrQOverAdminCIR=tPortNetEgrQOverAdminCIR, tmnxObjectAppPoolSize=tmnxObjectAppPoolSize, tmnxPortEtherSSMTxDus=tmnxPortEtherSSMTxDus, tmnxPortUnsupportedFunction=tmnxPortUnsupportedFunction, tmnxSonetJ0String=tmnxSonetJ0String, tmnxPortComp7450V5v0=tmnxPortComp7450V5v0, tmnxPortNetEgrQStatEntry=tmnxPortNetEgrQStatEntry, tmnxPortGroupV7v0=tmnxPortGroupV7v0, tmnxOpticalPortAmpPowerOut=tmnxOpticalPortAmpPowerOut, tPortEgrVPortSchedPol=tPortEgrVPortSchedPol, tmnxPortNetEgrQFwdInProfOcts=tmnxPortNetEgrQFwdInProfOcts, tmnxPortSFPConnectorCode=tmnxPortSFPConnectorCode, tmnxDS3ChannelEntry=tmnxDS3ChannelEntry, tmnxPortEgrExpShaperV9v0Group=tmnxPortEgrExpShaperV9v0Group, tmnxBundleMlfrEgrQoSProfId=tmnxBundleMlfrEgrQoSProfId, tPortEgrExpShaperCls6StMonOvrOL=tPortEgrExpShaperCls6StMonOvrOL, tmnxDDMTxBiasCurrentLowAlarm=tmnxDDMTxBiasCurrentLowAlarm, tmnxHostMatchNotifyOrgString=tmnxHostMatchNotifyOrgString, tPortEgrExpShaperCls1StFwdOctsH=tPortEgrExpShaperCls1StFwdOctsH, tmnxPortNetIngressFwdOutProfOcts=tmnxPortNetIngressFwdOutProfOcts, tmnxBundleImaGrpErrorIcpCells=tmnxBundleImaGrpErrorIcpCells, tPortEgrExpShaperCls6StFwdOcts=tPortEgrExpShaperCls6StFwdOcts, tPortAccEgrQGrpRowStatus=tPortAccEgrQGrpRowStatus, tmnxMlBundleGroupV4v0=tmnxMlBundleGroupV4v0, tmnxDS1ClockSyncState=tmnxDS1ClockSyncState, tmnxHsmdaPortSchOvrClass2Rate=tmnxHsmdaPortSchOvrClass2Rate, TmnxDSXIdleFillType=TmnxDSXIdleFillType, tmnxOpticalPortCfgEntry=tmnxOpticalPortCfgEntry, tmnxDS1E1LoopbackStarted=tmnxDS1E1LoopbackStarted, tmnxPortConnectTypeStatus=tmnxPortConnectTypeStatus, tmnxPortNetEgrQDroInProfOcts=tmnxPortNetEgrQDroInProfOcts, tPortAccIngQGrpLastChgd=tPortAccIngQGrpLastChgd, tmnxDDMTempHiAlarm=tmnxDDMTempHiAlarm, tPortNetEgrQGrpPStDrpOutProfPkt=tPortNetEgrQGrpPStDrpOutProfPkt, PYSNMP_MODULE_ID=tmnxPortMIBModule, tPortEgrVPortTable=tPortEgrVPortTable, tPortEgrExpShaperCls3StFwdPktsH=tPortEgrExpShaperCls3StFwdPktsH, tmnxBundleMemberMlfrEntry=tmnxBundleMemberMlfrEntry, tmnxDS3ChannelMDLPortString=tmnxDS3ChannelMDLPortString, tPortAccEgrQGrpLastChgd=tPortAccEgrQGrpLastChgd)
mibBuilder.exportSymbols("TIMETRA-PORT-MIB", tmnxHsmdaPortSchOvrRowStatus=tmnxHsmdaPortSchOvrRowStatus, tmnxHsmdaPortSchOvrClass6Rate=tmnxHsmdaPortSchOvrClass6Rate, tmnxPortLastAlarmEvent=tmnxPortLastAlarmEvent, tmnxOpticalPortLaserTunability=tmnxOpticalPortLaserTunability, tmnxBundleMRRU=tmnxBundleMRRU, tmnxPortCemStatsEgrUASs=tmnxPortCemStatsEgrUASs, tmnxPortEgrExpShaperClass8Rate=tmnxPortEgrExpShaperClass8Rate, tmnxPortATMV3v0Group=tmnxPortATMV3v0Group, tmnxPortEgrExpShaperCl8BrstLimit=tmnxPortEgrExpShaperCl8BrstLimit, tPortAccEgrQGrpHostMatchEntry=tPortAccEgrQGrpHostMatchEntry, tmnxBundleInputDiscards=tmnxBundleInputDiscards, tmnxPortComplianceV10v0=tmnxPortComplianceV10v0, TmnxPortEtherReportStatus=TmnxPortEtherReportStatus, tmnxBundleMlfrBundleId=tmnxBundleMlfrBundleId, tmnxSonetPathMonC2Byte=tmnxSonetPathMonC2Byte, tmnxPortNotifyError=tmnxPortNotifyError, tPortAccIngQGrpEntry=tPortAccIngQGrpEntry, tPortAccIngSchedStatFwdOctsHi=tPortAccIngSchedStatFwdOctsHi, tmnxPortIngrMdaQos08StatDropOcts=tmnxPortIngrMdaQos08StatDropOcts, tmnxOpticalPortTdcmDispSwpEnd=tmnxOpticalPortTdcmDispSwpEnd, tmnxObjMdaId=tmnxObjMdaId, tmnxPwPortTblLastChanged=tmnxPwPortTblLastChanged, tPortEgrExpShaperCls3StFwdOctsH=tPortEgrExpShaperCls3StFwdOctsH, tPortEgrExpShaperCls1StFwdOctsL=tPortEgrExpShaperCls1StFwdOctsL, tmnxPortSchedOverrideLvl7PIR=tmnxPortSchedOverrideLvl7PIR, tmnxCiscoHDLCEntry=tmnxCiscoHDLCEntry, tmnxDS3E3LoopbackStarted=tmnxDS3E3LoopbackStarted, tmnxPortDwdmLaserChannel=tmnxPortDwdmLaserChannel, tmnxEqDigitalDiagMonitorClear=tmnxEqDigitalDiagMonitorClear, tmnxPortIngrMdaQos08StatDropPkts=tmnxPortIngrMdaQos08StatDropPkts, tPortAccIngSchedStatFwdPktsLo=tPortAccIngSchedStatFwdPktsLo, tPortAccEgrQOverHiPrioOnly=tPortAccEgrQOverHiPrioOnly, tmnxPortNotifyPortId=tmnxPortNotifyPortId, tPortNetEgrQGrpArbitStatFwdPkts=tPortNetEgrQGrpArbitStatFwdPkts, tmnxOpticalPortTdcmModuleTemp=tmnxOpticalPortTdcmModuleTemp, tmnxL4LoadBalancing=tmnxL4LoadBalancing, tmnxPortIngrMdaQos04StatDropPkts=tmnxPortIngrMdaQos04StatDropPkts, tPortNetEgrSchedStatFwdPktsLo=tPortNetEgrSchedStatFwdPktsLo, tmnxDS0ChanGroupAcctPolicyId=tmnxDS0ChanGroupAcctPolicyId, tmnxObjectAppResvCbs=tmnxObjectAppResvCbs, tmnxBundleMemberImaNeUnavailSecs=tmnxBundleMemberImaNeUnavailSecs, tmnxFrIntfLastChanged=tmnxFrIntfLastChanged, tmnxPortIngPoolPercentRate=tmnxPortIngPoolPercentRate, tmnxEqPortBndlYellowDiffExceeded=tmnxEqPortBndlYellowDiffExceeded, tPortNetEgrQGrpPStUncolPktOff=tPortNetEgrQGrpPStUncolPktOff, tmnxFRDlcmiN393Dce=tmnxFRDlcmiN393Dce, tmnxBundleBundleID=tmnxBundleBundleID, tmnxOpticalPortHasRxAmplifier=tmnxOpticalPortHasRxAmplifier, tmnxPortEtherDot1qEtype=tmnxPortEtherDot1qEtype, tmnxPortSchedOverrideTable=tmnxPortSchedOverrideTable, tPortAccIngSchedStatEntry=tPortAccIngSchedStatEntry, tmnxPortEtherReasonDownFlags=tmnxPortEtherReasonDownFlags, tmnxPortEgrExpShaperClass4Rate=tmnxPortEgrExpShaperClass4Rate, tmnxPortLastChangeTime=tmnxPortLastChangeTime, tmnxEqPortSFPCorrupted=tmnxEqPortSFPCorrupted, tmnxFRDlcmiRxStatusEnqMsgs=tmnxFRDlcmiRxStatusEnqMsgs, tmnxEqOobPortFailure=tmnxEqOobPortFailure, tmnxCiscoHDLCTable=tmnxCiscoHDLCTable, tmnxPortCemStatsIgrForwardedPkts=tmnxPortCemStatsIgrForwardedPkts, tmnxPortHybridIngAccessWeight=tmnxPortHybridIngAccessWeight, tmnxEqPortEtherCrcAlarmClear=tmnxEqPortEtherCrcAlarmClear, tPortEgrVPStLstClrdTime=tPortEgrVPStLstClrdTime, tmnxOpticalPortTdcmRtd1Temp=tmnxOpticalPortTdcmRtd1Temp, tmnxBundleImaGrpRxRefLnk=tmnxBundleImaGrpRxRefLnk, tmnxPortFRGroup=tmnxPortFRGroup, tmnxEqPortDuplexCfgNotCompatible=tmnxEqPortDuplexCfgNotCompatible, tmnxPortIngrMdaQos04StatDropOcts=tmnxPortIngrMdaQos04StatDropOcts, tmnxBundleRowStatus=tmnxBundleRowStatus, tmnxHsmdaPortSchOvrClass3Rate=tmnxHsmdaPortSchOvrClass3Rate, tmnxPortPlcyDescription=tmnxPortPlcyDescription, tPortEgrExpShaperCls3StFwdOctsL=tPortEgrExpShaperCls3StFwdOctsL, tPortNetEgrQGrpPStOffOutProfPkt=tPortNetEgrQGrpPStOffOutProfPkt, tmnxBundleMemberImaFeRxUnuseSecs=tmnxBundleMemberImaFeRxUnuseSecs, TmnxOpticalDwdmChannel=TmnxOpticalDwdmChannel, tmnxPortAlarmState=tmnxPortAlarmState, tmnxSonetPathReportAlarmStatus=tmnxSonetPathReportAlarmStatus, tmnxMcMlpppStatsIngressPkt=tmnxMcMlpppStatsIngressPkt, tmnxATMIntfCustomBufferMode=tmnxATMIntfCustomBufferMode, tmnxBundleMlfrHelloTimer=tmnxBundleMlfrHelloTimer, tPortEgrVPStLvlFwdOctH=tPortEgrVPStLvlFwdOctH, tPortAccEgrQGrpTableLastChgd=tPortAccEgrQGrpTableLastChgd, tmnxDS1BitErrorInsertionRate=tmnxDS1BitErrorInsertionRate, tmnxWaveTrackerCfgAlarms=tmnxWaveTrackerCfgAlarms, tmnxDS3ChannelMDLMonGenString=tmnxDS3ChannelMDLMonGenString, tmnxDS1PortBuildout=tmnxDS1PortBuildout, tmnxDDMLaneTxBiasCurrent=tmnxDDMLaneTxBiasCurrent, tmnxSonetGroupChildType=tmnxSonetGroupChildType, tmnxPortNetEgrQDroOutProfPkts=tmnxPortNetEgrQDroOutProfPkts, tmnxPwPortLastChgd=tmnxPwPortLastChgd, tmnxBPGrpAssocActiveBundleID=tmnxBPGrpAssocActiveBundleID, tmnxBundleImaGrpSmNeState=tmnxBundleImaGrpSmNeState, tmnxPortWaveTrackerCapable=tmnxPortWaveTrackerCapable, tmnxPortFCStatsIngDroInProfPkts=tmnxPortFCStatsIngDroInProfPkts, tmnxPortSchedOverrideSchedName=tmnxPortSchedOverrideSchedName, tmnxPortPlcyGroup=tmnxPortPlcyGroup, tmnxFRDlcmiN392Dce=tmnxFRDlcmiN392Dce, tmnxBundleMlpppEntry=tmnxBundleMlpppEntry, tmnxDS3ChannelChannelized=tmnxDS3ChannelChannelized, tmnxPortEgrExpShaperCl7BrstLimit=tmnxPortEgrExpShaperCl7BrstLimit, tmnxBundleImaGrpRxId=tmnxBundleImaGrpRxId, TmnxPortEncapType=TmnxPortEncapType, tmnxFrf12IntfFragmentThreshold=tmnxFrf12IntfFragmentThreshold, tmnxPortOtuCapable=tmnxPortOtuCapable, tPortEgrVPortTableLastChgd=tPortEgrVPortTableLastChgd, tmnxBundleMemberDownReason=tmnxBundleMemberDownReason, tmnxPortSFPEquipped=tmnxPortSFPEquipped, tmnxMlImaBundleGroup=tmnxMlImaBundleGroup, tmnxPortSchedOverrideLvl6CIR=tmnxPortSchedOverrideLvl6CIR, tmnxPortEgrExpShaperTable=tmnxPortEgrExpShaperTable, tmnxPortTestEntry=tmnxPortTestEntry, tmnxOpticalPortTdcmRtd2Temp=tmnxOpticalPortTdcmRtd2Temp, tmnxPortTypeName=tmnxPortTypeName, tmnxOpticalPortTdcmCfgAlarms=tmnxOpticalPortTdcmCfgAlarms, tmnxATMIntfVcThreshold=tmnxATMIntfVcThreshold, tmnxBundleMlfrLastChanged=tmnxBundleMlfrLastChanged, tmnxDDMAux1LowAlarm=tmnxDDMAux1LowAlarm, tmnxDDMLaneTable=tmnxDDMLaneTable, tPortNetEgrQGrpArbitStatFwdPktsL=tPortNetEgrQGrpArbitStatFwdPktsL, tmnxCiscoHDLCStatInOctets=tmnxCiscoHDLCStatInOctets, tPortNetEgrQGrpPStFwdInProfOctH=tPortNetEgrQGrpPStFwdInProfOctH, tPortEgrExpShaperCls6StFwdPktsH=tPortEgrExpShaperCls6StFwdPktsH, tmnxPwPortId=tmnxPwPortId, tPortNetEgrQGrpPStOffInProfPkt=tPortNetEgrQGrpPStOffInProfPkt, tmnxPortEgrExpShaperTblLastChngd=tmnxPortEgrExpShaperTblLastChngd, tmnxPortATMGroupV7v0=tmnxPortATMGroupV7v0, tmnxDDMLaneFailedThresholds=tmnxDDMLaneFailedThresholds, tPortNetEgrQGrpPStatEntry=tPortNetEgrQGrpPStatEntry, tmnxPortNetIngressFwdInProfPkts=tmnxPortNetIngressFwdInProfPkts, tmnxSonetApsHoldTimeLeft=tmnxSonetApsHoldTimeLeft, tPortAccEgrQOverAdminCIRPercent=tPortAccEgrQOverAdminCIRPercent, tmnxDS1PortLbo=tmnxDS1PortLbo, tPortAccEgrQGrpEntry=tPortAccEgrQGrpEntry, tmnxPortEtherMinFrameLength=tmnxPortEtherMinFrameLength, tPortAccEgrQOverMBS=tPortAccEgrQOverMBS, tmnxPortScalarObjs=tmnxPortScalarObjs, tmnxPortIngQosQStatOffLoPrioPkts=tmnxPortIngQosQStatOffLoPrioPkts, tPortEgrExpShaperCls5StFwdOctsH=tPortEgrExpShaperCls5StFwdOctsH, tmnxFRDlcmiMode=tmnxFRDlcmiMode, tmnxPortIngQosQStatOffLoPrioOcts=tmnxPortIngQosQStatOffLoPrioOcts, tmnxPortEtherSSMRxEsmc=tmnxPortEtherSSMRxEsmc, tmnxPortBundleNumber=tmnxPortBundleNumber, tmnxBundleMlpppEndpointID=tmnxBundleMlpppEndpointID, tmnxPortNetEgrV10v0Group=tmnxPortNetEgrV10v0Group, TmnxOpticalTdcmCtrlMode=TmnxOpticalTdcmCtrlMode, tmnxObjAppResvSizeOld=tmnxObjAppResvSizeOld, tmnxPortClass=tmnxPortClass, tmnxPortEtherReportAlarmStatus=tmnxPortEtherReportAlarmStatus, tmnxBundleImaGrpLnkActTimer=tmnxBundleImaGrpLnkActTimer, TmnxImaGrpState=TmnxImaGrpState, tmnxDDMExtCalVoltageSlope=tmnxDDMExtCalVoltageSlope, TmnxImaTestState=TmnxImaTestState, tPortAccEgrQOverTableLastChgd=tPortAccEgrQOverTableLastChgd, tmnxBundleImaGrpSmOperSecs=tmnxBundleImaGrpSmOperSecs, tmnxPortIsLeaf=tmnxPortIsLeaf, tmnxCiscoHDLCDiscardStatInPkts=tmnxCiscoHDLCDiscardStatInPkts, tmnxPortCemStatsEgrESs=tmnxPortCemStatsEgrESs, tmnxEqPortEtherCrcAlarm=tmnxEqPortEtherCrcAlarm, tmnxDS3ChannelSubrateCSUMode=tmnxDS3ChannelSubrateCSUMode, tmnxPortMode=tmnxPortMode, tPortAccIngQGrpRowStatus=tPortAccIngQGrpRowStatus, tPortAccEgrSchedStatName=tPortAccEgrSchedStatName, tPortNetEgrQGrpLastChgd=tPortNetEgrQGrpLastChgd, tmnxPortFCStatsEgrFwdInProfOcts=tmnxPortFCStatsEgrFwdInProfOcts, TmnxPortEtherCrcMonReportStatus=TmnxPortEtherCrcMonReportStatus, tPortAccEgrSchedStatFwdOcts=tPortAccEgrSchedStatFwdOcts, tmnxObsoleteGroupV3v0=tmnxObsoleteGroupV3v0, tmnxPortIngrMdaQos07StatDropOcts=tmnxPortIngrMdaQos07StatDropOcts, tPortEgrExpShaperStatsHLTable=tPortEgrExpShaperStatsHLTable, tmnxPortInterfaceGroupHandlerIdx=tmnxPortInterfaceGroupHandlerIdx, tmnxDDMLaneRxOpticalPwrHiWarn=tmnxDDMLaneRxOpticalPwrHiWarn, tmnxDS0ChanGroupEntry=tmnxDS0ChanGroupEntry, tPortAccIngQOverEntry=tPortAccIngQOverEntry, tmnxPortNetEgrQFwdOutProfOcts=tmnxPortNetEgrQFwdOutProfOcts, tmnxBundleMemberUpTime=tmnxBundleMemberUpTime, tPortNetEgrQGrpPStDrpInProfPktH=tPortNetEgrQGrpPStDrpInProfPktH, tmnxPortComp7710V6v0=tmnxPortComp7710V6v0, tmnxPortFCStatsIngDroInProfOcts=tmnxPortFCStatsIngDroInProfOcts, tmnxBundleNumActiveLinks=tmnxBundleNumActiveLinks, tmnxPortEgrExpShaperLoBurstLimit=tmnxPortEgrExpShaperLoBurstLimit, tmnxQosPoolAppTable=tmnxQosPoolAppTable, tPortEgrExpShaperStatsTable=tPortEgrExpShaperStatsTable, tmnxPortNotifyEtherAlarmReason=tmnxPortNotifyEtherAlarmReason, tmnxPortSFPVendorSerialNum=tmnxPortSFPVendorSerialNum, tmnxPortEncapType=tmnxPortEncapType, tPortNetEgrQGrpPStDrpOutProfPktL=tPortNetEgrQGrpPStDrpOutProfPktL, tmnxPortTransceiverType=tmnxPortTransceiverType, tmnxFRDlcmiT392Dce=tmnxFRDlcmiT392Dce, tPortEgrVPStLvlFwdOct=tPortEgrVPStLvlFwdOct, tmnxPortIngQosQStatOffHiPrioOcts=tmnxPortIngQosQStatOffHiPrioOcts, tPortEgrVPStLvlDpdOct=tPortEgrVPStLvlDpdOct, tmnxDDMExtCalTxLaserBiasOffset=tmnxDDMExtCalTxLaserBiasOffset, tmnxDS1Framing=tmnxDS1Framing, tmnxDS1Table=tmnxDS1Table, tmnxPortGroupV6v0=tmnxPortGroupV6v0, tPortEgrExpShaperCls6StMonOvrOct=tPortEgrExpShaperCls6StMonOvrOct, tmnxDS1SignalMode=tmnxDS1SignalMode, tmnxPortGroups=tmnxPortGroups, tmnxPortCemStatsReportAlarm=tmnxPortCemStatsReportAlarm, tmnxPortSchedOverrideEntry=tmnxPortSchedOverrideEntry, tmnxDDMExtCalRxPower1=tmnxDDMExtCalRxPower1, tPortEgrVPStLvlDpdPktL=tPortEgrVPStLvlDpdPktL, tmnxATMIntfCellFormat=tmnxATMIntfCellFormat, tmnxHsmdaPortSchOvrGrp1Rate=tmnxHsmdaPortSchOvrGrp1Rate, tmnxDS1LastChangeTime=tmnxDS1LastChangeTime, tmnxPortEgrExpShaperClass2Thresh=tmnxPortEgrExpShaperClass2Thresh, tmnxDS1RemoteLoopRespond=tmnxDS1RemoteLoopRespond, tmnxPortTransceiverLaserWaveLen=tmnxPortTransceiverLaserWaveLen, tmnxBundleMlpppMagicNumber=tmnxBundleMlpppMagicNumber, tmnxPortCemStatsEgrSESs=tmnxPortCemStatsEgrSESs, tmnxEqPortSFPInserted=tmnxEqPortSFPInserted, tmnxBundleImaGrpTxId=tmnxBundleImaGrpTxId, tPortAccEgrSchedStatFwdPktsLo=tPortAccEgrSchedStatFwdPktsLo, tmnxObjAppSumOfQResvSize=tmnxObjAppSumOfQResvSize, tmnxPortComp7750V8v0=tmnxPortComp7750V8v0, tmnxDS1InsertSingleBitError=tmnxDS1InsertSingleBitError, tPortNetEgrQGrpPStFwdInProfOctL=tPortNetEgrQGrpPStFwdInProfOctL, tmnxObsoleteGroupV5v0=tmnxObsoleteGroupV5v0, tmnxWaveTrackerMaxAttainablePwr=tmnxWaveTrackerMaxAttainablePwr, tPortEgrExpShaperCls1StFwdPktsL=tPortEgrExpShaperCls1StFwdPktsL, tmnxPortPlcyRowStatus=tmnxPortPlcyRowStatus, tmnxPortNotifyBerSfTca=tmnxPortNotifyBerSfTca, tmnxPortComp7450V7v0=tmnxPortComp7450V7v0, tPortNetEgrQOverMBS=tPortNetEgrQOverMBS, tPortNetEgrQGrpPStatQosPolicerId=tPortNetEgrQGrpPStatQosPolicerId, tmnxDS0ChanGroupSignalFillType=tmnxDS0ChanGroupSignalFillType, tmnxDDMFailedObject=tmnxDDMFailedObject, tmnxPortHoldTimeDown=tmnxPortHoldTimeDown, tPortEgrExpShaperCls1StMonOvrOct=tPortEgrExpShaperCls1StMonOvrOct, tmnxDDMExtCalRxPower4=tmnxDDMExtCalRxPower4, tPortEgrExpShaperCls8StFwdOctsL=tPortEgrExpShaperCls8StFwdOctsL, tmnxDS3ChannelBERTTotalBits=tmnxDS3ChannelBERTTotalBits, tmnxPortTestEndTime=tmnxPortTestEndTime, tmnxSonetApsOperStatus=tmnxSonetApsOperStatus, tPortAccEgrQOverCIRAdaptation=tPortAccEgrQOverCIRAdaptation, tmnxPortIngQosQStatFwdInProfOcts=tmnxPortIngQosQStatFwdInProfOcts, tmnxPortIngNamedPoolPlcy=tmnxPortIngNamedPoolPlcy, tPortAccIngQOverMBS=tPortAccIngQOverMBS, tPortEgrExpShaperCls4StFwdPktsL=tPortEgrExpShaperCls4StFwdPktsL, tmnxPortClearAlarms=tmnxPortClearAlarms, tmnxOpticalPortGroupV9v0=tmnxOpticalPortGroupV9v0, tPortNetEgrQOverLastChanged=tPortNetEgrQOverLastChanged, tmnxMcMlpppStatsEgressErrPkt=tmnxMcMlpppStatsEgressErrPkt, tmnxPortNetIngressDroOutProfPkts=tmnxPortNetIngressDroOutProfPkts, tmnxPortEtherMDIMDIX=tmnxPortEtherMDIMDIX, TmnxPortState=TmnxPortState, tmnxPortEgrNamedPoolPlcy=tmnxPortEgrNamedPoolPlcy, tPortNetEgrQGrpPStDrpOutProfPktH=tPortNetEgrQGrpPStDrpOutProfPktH, tmnxATMIntfMinVpValue=tmnxATMIntfMinVpValue, tmnxPortNetEgressFwdOutProfOcts=tmnxPortNetEgressFwdOutProfOcts, tmnxDS1Type=tmnxDS1Type, tmnxSonetSectionTraceMode=tmnxSonetSectionTraceMode, tmnxSonetPathLastChangeTime=tmnxSonetPathLastChangeTime, tmnxObjAppResvSize=tmnxObjAppResvSize, tmnxBundleMemberImaNeTxUnuseSecs=tmnxBundleMemberImaNeTxUnuseSecs)
mibBuilder.exportSymbols("TIMETRA-PORT-MIB", tPortNetEgrQGrpPlcrCntrlPolicy=tPortNetEgrQGrpPlcrCntrlPolicy, tPortEgrExpShaperCls6StFwdOctsL=tPortEgrExpShaperCls6StFwdOctsL, tPortNetEgrQOverPIRAdaptation=tPortNetEgrQOverPIRAdaptation, tmnxDS1IdleCycleFlags=tmnxDS1IdleCycleFlags, tPortEgrExpShaperCls2StFwdOctsL=tPortEgrExpShaperCls2StFwdOctsL, tmnxSonetMonJ0String=tmnxSonetMonJ0String, tmnxPortObsoletedV10v0Group=tmnxPortObsoletedV10v0Group, tPortEgrExpShaperCls7StMonOvrOL=tPortEgrExpShaperCls7StMonOvrOL, tPortNetEgrQGrpPStOffInProfPktH=tPortNetEgrQGrpPStOffInProfPktH, tPortEgrVPortDescr=tPortEgrVPortDescr, tmnxDS3ChannelBERTOperStatus=tmnxDS3ChannelBERTOperStatus, tmnxPortComp7450V6v0=tmnxPortComp7450V6v0, tmnxDS3ChannelRowStatus=tmnxDS3ChannelRowStatus, tmnxBundleNumLinks=tmnxBundleNumLinks, tPortNetEgrQOverCIRAdaptation=tPortNetEgrQOverCIRAdaptation, tmnxPortHybridIngNetworkWeight=tmnxPortHybridIngNetworkWeight, tPortEgrExpShaperCls6StFwdOctsH=tPortEgrExpShaperCls6StFwdOctsH, tmnxPortEtherDownOnInternalError=tmnxPortEtherDownOnInternalError, tmnxPortCemStatsEgrForwardedPkts=tmnxPortCemStatsEgrForwardedPkts, tPortAccEgrQGrpDescr=tPortAccEgrQGrpDescr, tmnxPortSchedOverrideLvl5PIR=tmnxPortSchedOverrideLvl5PIR, tPortEgrExpShaperCls4StMonOvrOH=tPortEgrExpShaperCls4StMonOvrOH, tPortNetEgrQGrpPStFwdOutProfOctL=tPortNetEgrQGrpPStFwdOutProfOctL, tPortEgrVPStLvlDpdOctH=tPortEgrVPStLvlDpdOctH, tmnxDS0ChanGroupSpeed=tmnxDS0ChanGroupSpeed, tmnxDDMLaneId=tmnxDDMLaneId, TmnxImaLnkState=TmnxImaLnkState, tmnxPortIngrMdaQos13StatDropOcts=tmnxPortIngrMdaQos13StatDropOcts, tmnxPortEgrExpShaperCl3BrstLimit=tmnxPortEgrExpShaperCl3BrstLimit, tPortAccEgrQOverTable=tPortAccEgrQOverTable, tmnxPortNetEgressDroInProfOcts=tmnxPortNetEgressDroInProfOcts, tPortEgrVPortRowStatus=tPortEgrVPortRowStatus, tmnxEqPortSonetPathAlarm=tmnxEqPortSonetPathAlarm, tPortEgrExpShaperCls4StFwdPktsH=tPortEgrExpShaperCls4StFwdPktsH, tmnxBundleMemberImaNeRxFailState=tmnxBundleMemberImaNeRxFailState, tmnxPortV3v0Group=tmnxPortV3v0Group, tPortNetEgrQGrpPStFwdOutProfOct=tPortNetEgrQGrpPStFwdOutProfOct, tPortEgrExpShaperCls5StMonOvrOH=tPortEgrExpShaperCls5StMonOvrOH, tmnxPortLinkStatus=tmnxPortLinkStatus, tmnxDS3ChannelClockSource=tmnxDS3ChannelClockSource, tmnxPortTable=tmnxPortTable, tmnxPortNotificationGroupR2r1=tmnxPortNotificationGroupR2r1, tmnxPortNotifyWTAlarmReason=tmnxPortNotifyWTAlarmReason, tmnxPortIngrMdaQos09StatDropPkts=tmnxPortIngrMdaQos09StatDropPkts, tPortNetEgrQGrpArbitStatFwdPktsH=tPortNetEgrQGrpArbitStatFwdPktsH, tPortAccEgrQGrpAcctgPolId=tPortAccEgrQGrpAcctgPolId, tmnxPortEgrQosQStatFwdOutProfOcts=tmnxPortEgrQosQStatFwdOutProfOcts, tmnxChannelIdxString=tmnxChannelIdxString, tmnxDS3ChannelReportAlarm=tmnxDS3ChannelReportAlarm, tPortNetEgrQGrpPStFwdInProfPktL=tPortNetEgrQGrpPStFwdInProfPktL, tmnxEqPortBndlRedDiffExceeded=tmnxEqPortBndlRedDiffExceeded, tmnxFrf12IntfGroup=tmnxFrf12IntfGroup, tmnxPortIngrMdaQos03StatDropOcts=tmnxPortIngrMdaQos03StatDropOcts, tmnxOpticalPortOperEntry=tmnxOpticalPortOperEntry, tmnxFrIntfLinkId=tmnxFrIntfLinkId, tmnxSonetPathScramble=tmnxSonetPathScramble, tmnxSonetReportAlarm=tmnxSonetReportAlarm, tmnxPortEtherIngressRate=tmnxPortEtherIngressRate, tmnxPortFCStatsEgrDroOutProfPkts=tmnxPortFCStatsEgrDroOutProfPkts, tmnxBundleMemberImaEntry=tmnxBundleMemberImaEntry, tmnxPortFCStatsTable=tmnxPortFCStatsTable, tmnxSonetFraming=tmnxSonetFraming, tmnxPortTDMGroupV5v0=tmnxPortTDMGroupV5v0, tPortAccIngQOverCBS=tPortAccIngQOverCBS, tPortEgrExpShaperCls5StFwdPktsH=tPortEgrExpShaperCls5StFwdPktsH, tmnxDS3ChannelIdleCycleFlags=tmnxDS3ChannelIdleCycleFlags, tmnxPortObsoleteGroup=tmnxPortObsoleteGroup, tPortEgrVPortAggStatsTable=tPortEgrVPortAggStatsTable, tmnxPortNotifyBundleId=tmnxPortNotifyBundleId, tmnxSonetHoldTimeUp=tmnxSonetHoldTimeUp, tmnxPortGroupV4v0=tmnxPortGroupV4v0, tPortNetEgrQOverRateType=tPortNetEgrQOverRateType, tmnxEqPortEtherAlarmClear=tmnxEqPortEtherAlarmClear, tPortEgrExpShaperCls7StFwdPkts=tPortEgrExpShaperCls7StFwdPkts, tPortAccIngQGrpDescr=tPortAccIngQGrpDescr, tmnxSonetGroupTable=tmnxSonetGroupTable, tmnxCiscoHDLCStatOutOctets=tmnxCiscoHDLCStatOutOctets, tmnxPortIngrMdaQos05StatDropPkts=tmnxPortIngrMdaQos05StatDropPkts, tPortEgrVPortName=tPortEgrVPortName, tmnxBundleImaGrpSmFailState=tmnxBundleImaGrpSmFailState, tmnxATMIntfBufferPool=tmnxATMIntfBufferPool, tmnxBundleImaGrpTestPattern=tmnxBundleImaGrpTestPattern, tmnxDDMAux2HiWarning=tmnxDDMAux2HiWarning, tmnxPortATMGroupV9v0=tmnxPortATMGroupV9v0, tPortNetEgrQGrpArbitStatEntry=tPortNetEgrQGrpArbitStatEntry, tmnxPortIngrMdaQos02StatDropPkts=tmnxPortIngrMdaQos02StatDropPkts, tmnxBundleProtectedType=tmnxBundleProtectedType, tmnxDDMLaneGroupV10v0=tmnxDDMLaneGroupV10v0, tmnxPortNotification=tmnxPortNotification, tPortEgrVPStLvlDpdOctL=tPortEgrVPStLvlDpdOctL, tmnxBundleImaGrpAvailTxCR=tmnxBundleImaGrpAvailTxCR, tmnxFrf12IntfEgrQoSProfId=tmnxFrf12IntfEgrQoSProfId, tmnxFRDlcmiInvRxSeqNumMsgs=tmnxFRDlcmiInvRxSeqNumMsgs, tmnxPortNotifyObjsGroupV8v0=tmnxPortNotifyObjsGroupV8v0, tmnxPortEgrShaperRate=tmnxPortEgrShaperRate, tmnxBundleMlfrIngQoSProfId=tmnxBundleMlfrIngQoSProfId, tmnxEqPortDS3AlarmClear=tmnxEqPortDS3AlarmClear, tPortEgrExpShaperCls4StMonOvrOL=tPortEgrExpShaperCls4StMonOvrOL, tmnxPortFCStatsEgrDroOutProfOcts=tmnxPortFCStatsEgrDroOutProfOcts, tmnxPortTestTable=tmnxPortTestTable, tmnxDS3ChannelMDLMessageType=tmnxDS3ChannelMDLMessageType, tmnxPortSSMRxQualityLevel=tmnxPortSSMRxQualityLevel, tPortNetEgrQGrpAggRateLimit=tPortNetEgrQGrpAggRateLimit, TmnxDs0ChannelList=TmnxDs0ChannelList, tmnxFRDlcmiTable=tmnxFRDlcmiTable, tmnxBundleMemberImaNeRxUnuseSecs=tmnxBundleMemberImaNeRxUnuseSecs, TmnxMlfrLinkDownReason=TmnxMlfrLinkDownReason, tmnxDS3ChannelLoopback=tmnxDS3ChannelLoopback, tmnxBundlePeerMRRU=tmnxBundlePeerMRRU, tPortNetEgrQGrpPStOffInProfPktL=tPortNetEgrQGrpPStOffInProfPktL, tmnxResvCbsPoolThreshRed=tmnxResvCbsPoolThreshRed, tmnxWaveTrackerTrailName=tmnxWaveTrackerTrailName, tmnxBundleMemberImaNeRxState=tmnxBundleMemberImaNeRxState, tmnxPortEgrExpShaperRowStatus=tmnxPortEgrExpShaperRowStatus, tmnxEqPortSonetAlarm=tmnxEqPortSonetAlarm, tPortEgrExpShaperCls4StFwdOctsH=tPortEgrExpShaperCls4StFwdOctsH, tPortEgrExpShaperCls8StFwdOctsH=tPortEgrExpShaperCls8StFwdOctsH, tmnxDS1PortTable=tmnxDS1PortTable, tmnxPortHybridEgrAccessWeight=tmnxPortHybridEgrAccessWeight, tmnxPortQV7v0Group=tmnxPortQV7v0Group, tmnxPortQV8v0Group=tmnxPortQV8v0Group, tmnxPortComp7710V3v0=tmnxPortComp7710V3v0, tmnxWaveTrackerTargetPower=tmnxWaveTrackerTargetPower, tPortEgrExpShaperCls8StMonOvrOct=tPortEgrExpShaperCls8StMonOvrOct, tmnxPortComp7710V8v0=tmnxPortComp7710V8v0, tmnxFrf12IntfEntry=tmnxFrf12IntfEntry, tmnxPortNotifyObjsV9v0Group=tmnxPortNotifyObjsV9v0Group, tPortAccEgrQOverCBS=tPortAccEgrQOverCBS, tPortNetEgrQOverAdminPIR=tPortNetEgrQOverAdminPIR, tPortNetEgrQGrpArbitStatFwdOctsL=tPortNetEgrQGrpArbitStatFwdOctsL, tmnxBundleImaGrpLeastDelayLink=tmnxBundleImaGrpLeastDelayLink, tPortAccEgrQGrpHostMatchTable=tPortAccEgrQGrpHostMatchTable, tmnxDS3ChannelMDLPfiString=tmnxDS3ChannelMDLPfiString, tmnxPortATMVpShaperRowStatus=tmnxPortATMVpShaperRowStatus, tmnxPortNetIngressDroInProfPkts=tmnxPortNetIngressDroInProfPkts, tmnxPortEtherV9v0Group=tmnxPortEtherV9v0Group, tPortNetEgrQGrpTableLastChgd=tPortNetEgrQGrpTableLastChgd, tmnxPortEgrExpShaperClass6Thresh=tmnxPortEgrExpShaperClass6Thresh, tPortAccEgrQGrpHMTableLastChgd=tPortAccEgrQGrpHMTableLastChgd, tmnxDDMLaneTempLowAlarm=tmnxDDMLaneTempLowAlarm, tmnxSonetApsAdminStatus=tmnxSonetApsAdminStatus, tmnxPortComp7750V9v0=tmnxPortComp7750V9v0, tmnxPortTransceiverModelNumber=tmnxPortTransceiverModelNumber, tmnxPortATMVpShaperTable=tmnxPortATMVpShaperTable, tPortAccEgrQGrpHostMatchFailure=tPortAccEgrQGrpHostMatchFailure, tPortEgrExpShaperCls1StMonOvrOH=tPortEgrExpShaperCls1StMonOvrOH, tPortAccIngQOverMBSBytes=tPortAccIngQOverMBSBytes, tmnxPortDDMEventSuppression=tmnxPortDDMEventSuppression, tmnxDS3ChannelMDLMonPortString=tmnxDS3ChannelMDLMonPortString, tmnxOpticalPortTdcmManCfgDisp=tmnxOpticalPortTdcmManCfgDisp, tPortEgrVPortEntry=tPortEgrVPortEntry, tmnxObjectAppType=tmnxObjectAppType, tmnxDDMExtCalRxPower3=tmnxDDMExtCalRxPower3, tmnxPortEgrPortSchedPlcy=tmnxPortEgrPortSchedPlcy, tmnxPortEgrExpShaperClass4Thresh=tmnxPortEgrExpShaperClass4Thresh, tmnxPortNetEgressQueueIndex=tmnxPortNetEgressQueueIndex, tmnxQosPoolAppEntry=tmnxQosPoolAppEntry, tmnxSonetPathRowStatus=tmnxSonetPathRowStatus, tmnxHsmdaPortSchOvrClass5Rate=tmnxHsmdaPortSchOvrClass5Rate, tmnxDDMSupplyVoltageHiAlarm=tmnxDDMSupplyVoltageHiAlarm, tmnxSonetPathAcctPolicyId=tmnxSonetPathAcctPolicyId, tmnxDS1PortType=tmnxDS1PortType, tPortAccEgrSchedStatFwdOctsHi=tPortAccEgrSchedStatFwdOctsHi, tmnxDDMLaneTxOutputPowerHiWarn=tmnxDDMLaneTxOutputPowerHiWarn, tPortEgrExpShaperCls3StFwdPktsL=tPortEgrExpShaperCls3StFwdPktsL, tPortAccIngSchedStatFwdOcts=tPortAccIngSchedStatFwdOcts, tmnxMlpppBundleGroup=tmnxMlpppBundleGroup, tmnxHsmdaPortSchOvrClass4WtInGp=tmnxHsmdaPortSchOvrClass4WtInGp, tmnxHsmdaPortSchOvrClass7Rate=tmnxHsmdaPortSchOvrClass7Rate, tmnxPortEtherHCOverPkts1519toMax=tmnxPortEtherHCOverPkts1519toMax, tmnxSonetEntry=tmnxSonetEntry, tmnxDDMAux2LowWarning=tmnxDDMAux2LowWarning, tPortEgrExpShaperCls7StFwdPktsL=tPortEgrExpShaperCls7StFwdPktsL, tmnxPwPortTable=tmnxPwPortTable, tmnxPortEgrShaperEntry=tmnxPortEgrShaperEntry, tmnxPortNetIngressQueueIndex=tmnxPortNetIngressQueueIndex, tmnxDDMTxBiasCurrentHiAlarm=tmnxDDMTxBiasCurrentHiAlarm, tmnxBundleMemberImaNeRxNumFails=tmnxBundleMemberImaNeRxNumFails, tPortEgrVPortHostMatchFailure=tPortEgrVPortHostMatchFailure, tmnxDS3ChannelCRC=tmnxDS3ChannelCRC, tmnxMlBundleV3v0Group=tmnxMlBundleV3v0Group, tmnxWaveTrackerMinAttainablePwr=tmnxWaveTrackerMinAttainablePwr, tmnxSonetClockSource=tmnxSonetClockSource, tmnxDS3ChannelFEACLoopRespond=tmnxDS3ChannelFEACLoopRespond, tPortEgrExpShaperCls5StFwdOctsL=tPortEgrExpShaperCls5StFwdOctsL, tmnxDS3LastChangeTime=tmnxDS3LastChangeTime, tmnxEqPortOpticalAmpAlarm=tmnxEqPortOpticalAmpAlarm, tmnxDDMRxOpticalPowerLowAlarm=tmnxDDMRxOpticalPowerLowAlarm, tmnxPortFCStatsEgrFwdInProfPkts=tmnxPortFCStatsEgrFwdInProfPkts, tmnxBundleImaGrpTable=tmnxBundleImaGrpTable, tmnxBundleUpTime=tmnxBundleUpTime, tmnxPortEthernetV3v0Group=tmnxPortEthernetV3v0Group, tPortEgrExpShaperAggStFwdPktsH=tPortEgrExpShaperAggStFwdPktsH, tmnxPortPlcyTable=tmnxPortPlcyTable, tPortNetEgrQOverQueue=tPortNetEgrQOverQueue, TmnxDSXLoopback=TmnxDSXLoopback, tmnxPortEgrShaperTblLastChanged=tmnxPortEgrShaperTblLastChanged, tmnxPortVPortV9v0Group=tmnxPortVPortV9v0Group, tmnxDS3ChannelBERTErrors=tmnxDS3ChannelBERTErrors, tmnxDS3ChannelBERTPattern=tmnxDS3ChannelBERTPattern, tPortEgrExpShaperCls6StMonOvrOH=tPortEgrExpShaperCls6StMonOvrOH, TmnxOpticalTdcmAlarm=TmnxOpticalTdcmAlarm, tmnxPortPortID=tmnxPortPortID, tmnxPortIngrMdaQos01StatDropOcts=tmnxPortIngrMdaQos01StatDropOcts, tmnxPortSchedOverrideLvl3PIR=tmnxPortSchedOverrideLvl3PIR, tmnxWaveTrackerWaveKey1=tmnxWaveTrackerWaveKey1, tmnxDDMLaneRxOpticalPower=tmnxDDMLaneRxOpticalPower, tmnxPortEgrQosQStatQueueId=tmnxPortEgrQosQStatQueueId, tmnxPortIngQosQStatUncolOctsOff=tmnxPortIngQosQStatUncolOctsOff, TmnxOpticalTdcmCtrlState=TmnxOpticalTdcmCtrlState, tmnxDS3ChannelReportAlarmStatus=tmnxDS3ChannelReportAlarmStatus, tmnxSonetSDHLoopbackStarted=tmnxSonetSDHLoopbackStarted, tmnxHsmdaPortSchOvrClass1WtInGp=tmnxHsmdaPortSchOvrClass1WtInGp, tPortEgrExpShaperCls5StFwdPktsL=tPortEgrExpShaperCls5StFwdPktsL, tmnxBundleMemberImaErrorIcpCells=tmnxBundleMemberImaErrorIcpCells, tmnxPortTransceiverDiagCapable=tmnxPortTransceiverDiagCapable, tPortNetEgrQOverTableLastChgd=tPortNetEgrQOverTableLastChgd, tmnxPortEgrExpShaperLastChanged=tmnxPortEgrExpShaperLastChanged, tmnxBundleMlfrHelloRetryCount=tmnxBundleMlfrHelloRetryCount, tPortAccIngQGrpTable=tPortAccIngQGrpTable, tmnxSonetPathJ1String=tmnxSonetPathJ1String, tmnxPortEgrHsmdaSchedPlcy=tmnxPortEgrHsmdaSchedPlcy, tPortEgrVPStLvlFwdPktL=tPortEgrVPStLvlFwdPktL, tmnxPortEgrQosQStatFwdInProfPkts=tmnxPortEgrQosQStatFwdInProfPkts, tmnxPortIngrMdaQos06StatDropPkts=tmnxPortIngrMdaQos06StatDropPkts, tmnxDS3ChannelInFEACLoop=tmnxDS3ChannelInFEACLoop, tPortAccEgrQGrpCollectStats=tPortAccEgrQGrpCollectStats, tmnxObjAppResvCbsOld=tmnxObjAppResvCbsOld, tPortNetEgrQGrpPStFwdInProfPktH=tPortNetEgrQGrpPStFwdInProfPktH, tmnxPortSchedOverrideLvl2CIR=tmnxPortSchedOverrideLvl2CIR, tmnxBundleImaGrpSmDownSecs=tmnxBundleImaGrpSmDownSecs, tmnxPortChanType=tmnxPortChanType, tmnxDDMTxOutputPower=tmnxDDMTxOutputPower, tmnxPortIngrMdaQos12StatDropOcts=tmnxPortIngrMdaQos12StatDropOcts, tmnxBundleMemberRowStatus=tmnxBundleMemberRowStatus, tmnxPortEtherDownWhenLoopedState=tmnxPortEtherDownWhenLoopedState, tPortNetEgrQGrpAcctgPolId=tPortNetEgrQGrpAcctgPolId, tPortEgrExpShaperCls2StFwdPkts=tPortEgrExpShaperCls2StFwdPkts, tmnxSonetApsAdvertiseInterval=tmnxSonetApsAdvertiseInterval, tmnxPortCemStatsEgrJtrBfrURun=tmnxPortCemStatsEgrJtrBfrURun, tPortEgrExpShaperCls4StFwdOctsL=tPortEgrExpShaperCls4StFwdOctsL, tmnxBundleEntry=tmnxBundleEntry, tmnxDDMExternallyCalibrated=tmnxDDMExternallyCalibrated, tmnxPortNotificationGroupV6v0=tmnxPortNotificationGroupV6v0, tmnxDDMLaneTxOutputPowerHiAlarm=tmnxDDMLaneTxOutputPowerHiAlarm, tmnxPortType=tmnxPortType, tmnxPortNotificationGroupV8v9=tmnxPortNotificationGroupV8v9, tmnxPortTestParameter=tmnxPortTestParameter, tmnxBundleImaGrpRxOamLablVal=tmnxBundleImaGrpRxOamLablVal, tmnxPortCemStatsEgrJtrBfrORun=tmnxPortCemStatsEgrJtrBfrORun, tmnxPortDwdmRxDtvDacPercent=tmnxPortDwdmRxDtvDacPercent, tmnxPortEgrShaperLastChanged=tmnxPortEgrShaperLastChanged, tmnxObjNamedPoolPolicy=tmnxObjNamedPoolPolicy, tmnxPortEtherTable=tmnxPortEtherTable)
mibBuilder.exportSymbols("TIMETRA-PORT-MIB", tmnxEqPortDS1Alarm=tmnxEqPortDS1Alarm, TmnxMlpppEndpointIdClass=TmnxMlpppEndpointIdClass, tPortEgrExpShaperCls3StFwdPkts=tPortEgrExpShaperCls3StFwdPkts, tmnxPortUpProtocols=tmnxPortUpProtocols, tmnxPortDwdmGroup=tmnxPortDwdmGroup, tmnxBundleImaGrpSmFeState=tmnxBundleImaGrpSmFeState, tmnxPortSchedOverrideLvl4CIR=tmnxPortSchedOverrideLvl4CIR, tmnxPortVPortGroup=tmnxPortVPortGroup, tmnxSonetApsAdvertiseTimeLeft=tmnxSonetApsAdvertiseTimeLeft, tmnxDS3ChannelFraming=tmnxDS3ChannelFraming, tmnxDDMTempLowWarning=tmnxDDMTempLowWarning, tmnxSonetSpeed=tmnxSonetSpeed, tmnxOpticalPortAmpPumpTemp=tmnxOpticalPortAmpPumpTemp, tmnxBundleMemberImaTxIcpCells=tmnxBundleMemberImaTxIcpCells, tmnxMcMfrBundleGroup=tmnxMcMfrBundleGroup, tmnxEqSonetFramingNotCompatible=tmnxEqSonetFramingNotCompatible, tPortEgrExpShaperCls7StFwdPktsH=tPortEgrExpShaperCls7StFwdPktsH, TmnxDSXReportAlarm=TmnxDSXReportAlarm, tmnxSonetAps=tmnxSonetAps, tmnxDDMAux1=tmnxDDMAux1, tmnxDS3ChannelOperMTU=tmnxDS3ChannelOperMTU, TmnxImaGrpClockModes=TmnxImaGrpClockModes, tPortNetEgrQGrpInstanceId=tPortNetEgrQGrpInstanceId, tmnxPortEtherXGigMode=tmnxPortEtherXGigMode, tmnxFrIntfFrf12Mode=tmnxFrIntfFrf12Mode, tmnxDDMLaneTempLowWarn=tmnxDDMLaneTempLowWarn, tmnxPortIngQosQStatFwdOutProfPkts=tmnxPortIngQosQStatFwdOutProfPkts, tmnxPortComp7750V5v0=tmnxPortComp7750V5v0, tPortNetEgrSchedStatFwdOctsHi=tPortNetEgrSchedStatFwdOctsHi, tPortAccEgrQOverAdminPIR=tPortAccEgrQOverAdminPIR, tmnxPortTDMGroupV4v0=tmnxPortTDMGroupV4v0, tPortEgrExpShaperAggStFwdPkts=tPortEgrExpShaperAggStFwdPkts, tPortEgrExpShaperCls2StMonOvrOL=tPortEgrExpShaperCls2StMonOvrOL, tmnxDS1ClockMasterPortId=tmnxDS1ClockMasterPortId, tmnxPortToChannelTable=tmnxPortToChannelTable, tPortEgrVPortHMIntDestId=tPortEgrVPortHMIntDestId, tmnxDSXClockSyncStateObject=tmnxDSXClockSyncStateObject, tPortAccEgrQOverEntry=tPortAccEgrQOverEntry, TmnxDS3Loopback=TmnxDS3Loopback, tmnxBPGrpAssocProtectBundleID=tmnxBPGrpAssocProtectBundleID, tmnxWaveTrackerLowerPowerMargin=tmnxWaveTrackerLowerPowerMargin, tPortEgrExpShaperCls8StMonOvrOL=tPortEgrExpShaperCls8StMonOvrOL, tmnxBundleImaGrpNeClockMode=tmnxBundleImaGrpNeClockMode, tmnxPortEgrQosQStatFwdOutProfPkts=tmnxPortEgrQosQStatFwdOutProfPkts, tPortEgrExpShaperCls8StFwdPktsL=tPortEgrExpShaperCls8StFwdPktsL, tmnxPortATMVpShaperTblLastCh=tmnxPortATMVpShaperTblLastCh, tPortNetEgrQGrpTable=tPortNetEgrQGrpTable, tPortEgrVPStLvlFwdPkt=tPortEgrVPStLvlFwdPkt, tmnxPortFCStatsIngDroOutProfOcts=tmnxPortFCStatsIngDroOutProfOcts, tmnxOpticalPortTdcmSerialNum=tmnxOpticalPortTdcmSerialNum, tmnxDDMRxOpticalPowerHiWarning=tmnxDDMRxOpticalPowerHiWarning, tPortEgrExpShaperCls2StMonOvrOH=tPortEgrExpShaperCls2StMonOvrOH, tmnxEqPortError=tmnxEqPortError, tPortAccIngQOverHiPrioOnly=tPortAccIngQOverHiPrioOnly, tmnxPortEgrExpShaperClass7Rate=tmnxPortEgrExpShaperClass7Rate, tmnxDS1BERTErrors=tmnxDS1BERTErrors, tmnxPortComp7450V4v0=tmnxPortComp7450V4v0, tmnxObjAppResvCbsNew=tmnxObjAppResvCbsNew, tmnxPortIngQosQStatQueueId=tmnxPortIngQosQStatQueueId, tmnxSonetApsNeighborAddr=tmnxSonetApsNeighborAddr, TmnxPortType=TmnxPortType, tPortNetEgrQGrpSchedPol=tPortNetEgrQGrpSchedPol, tmnxDS3ChannelType=tmnxDS3ChannelType, tmnxWaveTrackerEncodeEnable=tmnxWaveTrackerEncodeEnable, tmnxHsmdaPortSchOvrGrp2Rate=tmnxHsmdaPortSchOvrGrp2Rate, tmnxPortFCStatsEgrDroInProfOcts=tmnxPortFCStatsEgrDroInProfOcts, tmnxCiscoHDLCDownCount=tmnxCiscoHDLCDownCount, tmnxPortConnectTypeName=tmnxPortConnectTypeName, tmnxPortEtherDuplex=tmnxPortEtherDuplex, tmnxDS3ChannelBitErrorInsertionRate=tmnxDS3ChannelBitErrorInsertionRate, tmnxPortNetIngressFwdOutProfPkts=tmnxPortNetIngressFwdOutProfPkts, tmnxPortIngQosQStatFwdInProfPkts=tmnxPortIngQosQStatFwdInProfPkts, tmnxBundleMlpppTable=tmnxBundleMlpppTable, tmnxPortEgrQosQStatDpdOutProfPkts=tmnxPortEgrQosQStatDpdOutProfPkts, tmnxDDMLaneRxOpticalPwrLowWarn=tmnxDDMLaneRxOpticalPwrLowWarn, tmnxObjectAppSlopePolicy=tmnxObjectAppSlopePolicy, tmnxPortIngrMdaQosStatR2r1Group=tmnxPortIngrMdaQosStatR2r1Group, tmnxBundleMlpppStatelessApsSwo=tmnxBundleMlpppStatelessApsSwo, tmnxPortEgrQosQStatDpdInProfPkts=tmnxPortEgrQosQStatDpdInProfPkts, tPortEgrExpShaperAggStMonOvrOH=tPortEgrExpShaperAggStMonOvrOH, tPortNetEgrQGrpPStFwdOutProfPktH=tPortNetEgrQGrpPStFwdOutProfPktH, tmnxDDMTempLowAlarm=tmnxDDMTempLowAlarm, tPortAccIngSchedStatFwdPkts=tPortAccIngSchedStatFwdPkts, tmnxDDMAux2HiAlarm=tmnxDDMAux2HiAlarm, tmnxPortSFPNumLanes=tmnxPortSFPNumLanes, tmnxPortComp7750V6v1=tmnxPortComp7750V6v1, tmnxBundleImaGrpBetaValue=tmnxBundleImaGrpBetaValue, tmnxPortIngrMdaQos06StatDropOcts=tmnxPortIngrMdaQos06StatDropOcts, tPortAccEgrSchedStatEntry=tPortAccEgrSchedStatEntry, tmnxDS1BERTDuration=tmnxDS1BERTDuration, tmnxIpLoadBalancing=tmnxIpLoadBalancing, tPortEgrVPortLastChanged=tPortEgrVPortLastChanged, tPortAccEgrQOverAdminPIRPercent=tPortAccEgrQOverAdminPIRPercent, TmnxPortEtherCrcMonReportValue=TmnxPortEtherCrcMonReportValue, tPortNetEgrQGrpArbitStatTable=tPortNetEgrQGrpArbitStatTable, tmnxEqPortSonetAlarmClear=tmnxEqPortSonetAlarmClear, tmnxBundleImaGrpTestMember=tmnxBundleImaGrpTestMember, tPortAccIngQOverTable=tPortAccIngQOverTable, tmnxDDMSupplyVoltageLowWarning=tmnxDDMSupplyVoltageLowWarning, tmnxBundleMemberEntry=tmnxBundleMemberEntry, tPortEgrExpShaperCls6StFwdPkts=tPortEgrExpShaperCls6StFwdPkts, tmnxPortParentPortID=tmnxPortParentPortID, tPortAccIngSchedStatFwdOctsLo=tPortAccIngSchedStatFwdOctsLo, tmnxBundleMemberMlfrDownReason=tmnxBundleMemberMlfrDownReason, tmnxBundleParentBundle=tmnxBundleParentBundle, tmnxOpticalPortTdcmCtrlMode=tmnxOpticalPortTdcmCtrlMode, tmnxCiscoHDLCStatOutPkts=tmnxCiscoHDLCStatOutPkts, tmnxBundleImaGrpRxIcpCells=tmnxBundleImaGrpRxIcpCells, tmnxPortEtherSingleFiber=tmnxPortEtherSingleFiber, tPortAccEgrSchedStatFwdPktsHi=tPortAccEgrSchedStatFwdPktsHi, tmnxBundleMemberImaFeRxNumFails=tmnxBundleMemberImaFeRxNumFails, tmnxDDMLaneTxBiasCurrentLowWarn=tmnxDDMLaneTxBiasCurrentLowWarn, tmnxPortHwMacAddress=tmnxPortHwMacAddress, tmnxPortIngQosQStatDpdLoPrioPkts=tmnxPortIngQosQStatDpdLoPrioPkts, tmnxPortNotificationGroupV9v4=tmnxPortNotificationGroupV9v4, tmnxDDMRxOpticalPowerType=tmnxDDMRxOpticalPowerType, tPortEgrExpShaperCls2StFwdPktsH=tPortEgrExpShaperCls2StFwdPktsH, tmnxOpticalPortOperTable=tmnxOpticalPortOperTable, tmnxPortEgrShaperTable=tmnxPortEgrShaperTable, tPortEgrExpShaperCls1StMonOvrOL=tPortEgrExpShaperCls1StMonOvrOL, tmnxPortNetEgressStatsEntry=tmnxPortNetEgressStatsEntry, tPortEgrVPortHMLastChgd=tPortEgrVPortHMLastChgd, tPortEgrExpShaperAggStFwdOcts=tPortEgrExpShaperAggStFwdOcts, tmnxPortIngrMdaQos10StatDropPkts=tmnxPortIngrMdaQos10StatDropPkts, tmnxPortEgrExpShaperLoBrstMaxCls=tmnxPortEgrExpShaperLoBrstMaxCls, tmnxPortQStatV7v0Group=tmnxPortQStatV7v0Group, tmnxPortEgrExpShaperThresh=tmnxPortEgrExpShaperThresh, tmnxPortIngrMdaQosStatEntry=tmnxPortIngrMdaQosStatEntry, tmnxOpticalPortAmpCfgAlarms=tmnxOpticalPortAmpCfgAlarms, tmnxWaveTrackerTable=tmnxWaveTrackerTable, tmnxPortLastClearedTime=tmnxPortLastClearedTime, tmnxPortEtherDownWhenLoopedEnabled=tmnxPortEtherDownWhenLoopedEnabled, tmnxDS3ChannelSubrate=tmnxDS3ChannelSubrate, tmnxPortTDME1GroupV6v1=tmnxPortTDME1GroupV6v1, tmnxPortNotifyEtherCrcThreshold=tmnxPortNotifyEtherCrcThreshold, tPortEgrExpShaperAggStMonOvrOL=tPortEgrExpShaperAggStMonOvrOL, tmnxDS1InvertData=tmnxDS1InvertData, tPortNetEgrSchedStatFwdPkts=tPortNetEgrSchedStatFwdPkts, tmnxPortNetEgressStatsTable=tmnxPortNetEgressStatsTable, tmnxOpticalPortTdcmCfgRxChan=tmnxOpticalPortTdcmCfgRxChan, tmnxBundleImaGrpTestState=tmnxBundleImaGrpTestState, tmnxPortNotifyDS3AlarmReason=tmnxPortNotifyDS3AlarmReason, TmnxDSXClockSyncState=TmnxDSXClockSyncState, tmnxCiscoHDLCKeepAliveInt=tmnxCiscoHDLCKeepAliveInt, tPortAccIngQOverTableLastChgd=tPortAccIngQOverTableLastChgd, tPortNetEgrQGrpPStFwdOutProfPktL=tPortNetEgrQGrpPStFwdOutProfPktL, tmnxDDMLaneRxOpticalPwrHiAlarm=tmnxDDMLaneRxOpticalPwrHiAlarm, tmnxPortGroupV5v0=tmnxPortGroupV5v0, tmnxDDMTxOutputPowerLowAlarm=tmnxDDMTxOutputPowerLowAlarm, tmnxATMObjs=tmnxATMObjs, tmnxCiscoHDLCUpCount=tmnxCiscoHDLCUpCount, tPortEgrExpShaperCls3StMonOvrOct=tPortEgrExpShaperCls3StMonOvrOct, tmnxDDMLaneEntry=tmnxDDMLaneEntry, tPortAccIngSchedStatFwdPktsHi=tPortAccIngSchedStatFwdPktsHi, tmnxDS3ChannelAcctPolicyId=tmnxDS3ChannelAcctPolicyId, tPortNetEgrQOverMBSBytes=tPortNetEgrQOverMBSBytes, tmnxDS1Entry=tmnxDS1Entry, tPortNetEgrQGrpEntry=tPortNetEgrQGrpEntry, tmnxBundleMemberImaFeUnavailSecs=tmnxBundleMemberImaFeUnavailSecs, tmnxHsmdaPortSchOvrMaxRate=tmnxHsmdaPortSchOvrMaxRate, tmnxDDMTxOutputPowerHiWarning=tmnxDDMTxOutputPowerHiWarning, tPortAccEgrSchedStatFwdPkts=tPortAccEgrSchedStatFwdPkts, tmnxMcMlpppStatsEgressOct=tmnxMcMlpppStatsEgressOct, tmnxPortNetworkEgrQueues=tmnxPortNetworkEgrQueues, tPortEgrExpShaperAggStFwdOctsL=tPortEgrExpShaperAggStFwdOctsL, tmnxMcMlpppClassIndex=tmnxMcMlpppClassIndex, tmnxOpticalPortAmpPowerIn=tmnxOpticalPortAmpPowerIn, tmnxBundleImaGrpTxOamLablVal=tmnxBundleImaGrpTxOamLablVal, tmnxPortEgrShaperName=tmnxPortEgrShaperName, tmnxFrIntfGroup=tmnxFrIntfGroup, tmnxBundleOperMRRU=tmnxBundleOperMRRU, tmnxSonetPathReportAlarm=tmnxSonetPathReportAlarm, tmnxPortSonetV3v0Group=tmnxPortSonetV3v0Group, tmnxFrIntfTable=tmnxFrIntfTable, tmnxPortIngQosQStatOffHiPrioPkts=tmnxPortIngQosQStatOffHiPrioPkts, tmnxDDMExtCalRxPower2=tmnxDDMExtCalRxPower2, tmnxSonetTxDus=tmnxSonetTxDus, tPortNetEgrQGrpPStUncolPktOffH=tPortNetEgrQGrpPStUncolPktOffH, tmnxPortName=tmnxPortName, tmnxPortState=tmnxPortState, tmnxPortEtherMTU=tmnxPortEtherMTU, TmnxDSXIdleCycleFlags=TmnxDSXIdleCycleFlags, tPortEgrExpShaperCls8StFwdOcts=tPortEgrExpShaperCls8StFwdOcts, tmnxBundleMemberImaFeTxUnuseSecs=tmnxBundleMemberImaFeTxUnuseSecs, tmnxMcMlpppStatsIngressErrPkt=tmnxMcMlpppStatsIngressErrPkt, tPortAccIngQGrpSchedPol=tPortAccIngQGrpSchedPol, tmnxWaveTrackerGroup=tmnxWaveTrackerGroup, tmnxCiscoHDLCStatsEntry=tmnxCiscoHDLCStatsEntry, tmnxFRDlcmiStatusMsgTimeouts=tmnxFRDlcmiStatusMsgTimeouts, tmnxPortTypeStatus=tmnxPortTypeStatus, tmnxEqPortEtherAlarm=tmnxEqPortEtherAlarm, tmnxDS3ChannelClockMasterPortId=tmnxDS3ChannelClockMasterPortId, tmnxDDMLaneTxOutputPowerLowWarn=tmnxDDMLaneTxOutputPowerLowWarn, tmnxFRDlcmiEntry=tmnxFRDlcmiEntry, tmnxMlBundleGroupV5v0=tmnxMlBundleGroupV5v0, tPortNetEgrQGrpFrameBaseActg=tPortNetEgrQGrpFrameBaseActg, tmnxPortHoldTimeUnits=tmnxPortHoldTimeUnits, tPortEgrVPStLvlFwdOctL=tPortEgrVPStLvlFwdOctL, tmnxDS0ChanGroupSignalPattern=tmnxDS0ChanGroupSignalPattern, tPortEgrExpShaperCls1StFwdOcts=tPortEgrExpShaperCls1StFwdOcts, tmnxOpticalPortAmpPumpCurrent=tmnxOpticalPortAmpPumpCurrent, tPortEgrVPStLvlDpdPktH=tPortEgrVPStLvlDpdPktH, tPortNetEgrSchedStatFwdPktsHi=tPortNetEgrSchedStatFwdPktsHi, tmnxObjectAppRedAlrmThresh=tmnxObjectAppRedAlrmThresh, tmnxDS1RowStatus=tmnxDS1RowStatus, tmnxDDMRxOpticalPowerLowWarning=tmnxDDMRxOpticalPowerLowWarning, tmnxPortCemStatsEntry=tmnxPortCemStatsEntry, tmnxPortSchedOverrideLvl5CIR=tmnxPortSchedOverrideLvl5CIR, tmnxPortComp7750=tmnxPortComp7750, tPortNetEgrQOverHiPrioOnly=tPortNetEgrQOverHiPrioOnly, tmnxDS3ChannelMDLUnitString=tmnxDS3ChannelMDLUnitString, tmnxPortIngQosQStatTable=tmnxPortIngQosQStatTable, tmnxPortEgrExpShaperName=tmnxPortEgrExpShaperName, tmnxCiscoHDLCStatInPkts=tmnxCiscoHDLCStatInPkts, TmnxWaveTrackerAlarm=TmnxWaveTrackerAlarm, tmnxPortEthernetV7v0Group=tmnxPortEthernetV7v0Group, tPortEgrExpShaperCls4StFwdPkts=tPortEgrExpShaperCls4StFwdPkts, tmnxPortNetEgrQStatTable=tmnxPortNetEgrQStatTable, tmnxBPGrpAssocWorkingBundleID=tmnxBPGrpAssocWorkingBundleID, tmnxPortCemStatsEgrJtrBfrDepth=tmnxPortCemStatsEgrJtrBfrDepth, tmnxOpticalPortGroup=tmnxOpticalPortGroup, tmnxSonetPathTable=tmnxSonetPathTable, tmnxPortIngrMdaQos11StatDropOcts=tmnxPortIngrMdaQos11StatDropOcts, tPortEgrExpShaperCls7StFwdOctsH=tPortEgrExpShaperCls7StFwdOctsH, tmnxObjectType=tmnxObjectType, tmnxPortATMVpShaperEgrAtd=tmnxPortATMVpShaperEgrAtd, tmnxPortEtherOperSpeed=tmnxPortEtherOperSpeed, tmnxMcMlpppStatsEntry=tmnxMcMlpppStatsEntry, tmnxPortEtherOperDuplex=tmnxPortEtherOperDuplex, tPortNetEgrQGrpPStUncolPktOffL=tPortNetEgrQGrpPStUncolPktOffL, tmnxBPGrpAssocEntry=tmnxBPGrpAssocEntry, tPortEgrExpShaperCls8StFwdPktsH=tPortEgrExpShaperCls8StFwdPktsH, tmnxPortIngrMdaQos00StatDropPkts=tmnxPortIngrMdaQos00StatDropPkts, tmnxPortEtherCrcMonSdTMultiplier=tmnxPortEtherCrcMonSdTMultiplier, tmnxBundleMlfrTable=tmnxBundleMlfrTable, tmnxBundleMemberImaTable=tmnxBundleMemberImaTable, tmnxSonetPathOperMTU=tmnxSonetPathOperMTU, tmnxEqPortDS3Alarm=tmnxEqPortDS3Alarm, tPortNetEgrQGrpPStOffInProfOctH=tPortNetEgrQGrpPStOffInProfOctH, tmnxFRDlcmiDiscardedMsgs=tmnxFRDlcmiDiscardedMsgs, tmnxPortNotifyEtherCrcMultiplier=tmnxPortNotifyEtherCrcMultiplier, tmnxDDMLaneTempHiAlarm=tmnxDDMLaneTempHiAlarm, tmnxPortIngQosQStatUncolPktsOff=tmnxPortIngQosQStatUncolPktsOff, tPortAccEgrQOverRowStatus=tPortAccEgrQOverRowStatus, tPortAccEgrQGrpFrameBaseActg=tPortAccEgrQGrpFrameBaseActg, tPortAccIngQOverAdminPIR=tPortAccIngQOverAdminPIR, tmnxPortEgrExpShaperCl6BrstLimit=tmnxPortEgrExpShaperCl6BrstLimit, tmnxBundleMemberImaFeRxFailState=tmnxBundleMemberImaFeRxFailState, tPortEgrExpShaperCls1StFwdPkts=tPortEgrExpShaperCls1StFwdPkts, tmnxPortComplianceV9v0=tmnxPortComplianceV9v0, tmnxSonetApsHoldTime=tmnxSonetApsHoldTime, tmnxDS1PortDbGain=tmnxDS1PortDbGain, tmnxBundleMlfrEntry=tmnxBundleMlfrEntry, tmnxBundleType=tmnxBundleType)
mibBuilder.exportSymbols("TIMETRA-PORT-MIB", tmnxMlpppBundleGroupV7v0=tmnxMlpppBundleGroupV7v0, tPortNetEgrQGrpPStFwdInProfOct=tPortNetEgrQGrpPStFwdInProfOct, tmnxPortFCStatsEntry=tmnxPortFCStatsEntry, tmnxPortIngrMdaQos12StatDropPkts=tmnxPortIngrMdaQos12StatDropPkts, tmnxPortComp7710=tmnxPortComp7710, tmnxPortEtherPBBEtype=tmnxPortEtherPBBEtype, tmnxDS3ChannelBERTSynched=tmnxDS3ChannelBERTSynched, tmnxPortNetIngressDroInProfOcts=tmnxPortNetIngressDroInProfOcts, tmnxBundleMemberImaLstRxIcpCells=tmnxBundleMemberImaLstRxIcpCells, tmnxPortNotifyObjsGroupR2r1=tmnxPortNotifyObjsGroupR2r1, tmnxBundleMemberImaFeTxState=tmnxBundleMemberImaFeTxState, tPortAccEgrSchedStatFwdOctsLo=tPortAccEgrSchedStatFwdOctsLo, tmnxPortNotificationGroupV7v0=tmnxPortNotificationGroupV7v0, tmnxPortEtherCrcAlarmReason=tmnxPortEtherCrcAlarmReason, tmnxDS1Loopback=tmnxDS1Loopback, tmnxPortCemStatsEgrMissingPkts=tmnxPortCemStatsEgrMissingPkts, tmnxDDMTxOutputPowerHiAlarm=tmnxDDMTxOutputPowerHiAlarm, tmnxPortMIBModule=tmnxPortMIBModule, tmnxPortTDMGroupV7v0=tmnxPortTDMGroupV7v0, tPortAccIngSchedStatTable=tPortAccIngSchedStatTable, tmnxDDMLaneTxBiasCurrentLowAlarm=tmnxDDMLaneTxBiasCurrentLowAlarm, tPortNetEgrSchedStatTable=tPortNetEgrSchedStatTable, tmnxPortEtherCrcMonWindowSize=tmnxPortEtherCrcMonWindowSize, TmnxPortConnectorType=TmnxPortConnectorType, tmnxWaveTrackerMeasuredPower=tmnxWaveTrackerMeasuredPower, tPortNetEgrQOverEntry=tPortNetEgrQOverEntry, tPortNetEgrQGrpPStOffOutProfOctH=tPortNetEgrQGrpPStOffOutProfOctH, tPortAccEgrQOverRateType=tPortAccEgrQOverRateType, tPortAccEgrQOverLastChanged=tPortAccEgrQOverLastChanged, tmnxSonetPathType=tmnxSonetPathType, tmnxMcMlpppStatsTable=tmnxMcMlpppStatsTable, tPortNetEgrQGrpRowStatus=tPortNetEgrQGrpRowStatus, tmnxPortPlcyLastCh=tmnxPortPlcyLastCh, tmnxPortSchedOverrideLvl7CIR=tmnxPortSchedOverrideLvl7CIR, tmnxPortTransceiverCode=tmnxPortTransceiverCode, tmnxPortEtherDownWhenLoopedKeepAlive=tmnxPortEtherDownWhenLoopedKeepAlive, tmnxObjType=tmnxObjType, tmnxPortToChannelEntry=tmnxPortToChannelEntry, tmnxPortTestDuration=tmnxPortTestDuration, tmnxBundleShortSequence=tmnxBundleShortSequence, tmnxDS0ChanGroupIdleCycleFlags=tmnxDS0ChanGroupIdleCycleFlags, tmnxPortEtherLacpTunnel=tmnxPortEtherLacpTunnel, tmnxObjectAppPool=tmnxObjectAppPool, tmnxObjectAppResvCbsAmbrAlrmMax=tmnxObjectAppResvCbsAmbrAlrmMax, tmnxHsmdaPortSchOvrClass3WtInGp=tmnxHsmdaPortSchOvrClass3WtInGp, tPortAccIngQOverPIRAdaptation=tPortAccIngQOverPIRAdaptation, tPortEgrExpShaperCls4StMonOvrOct=tPortEgrExpShaperCls4StMonOvrOct, tmnxFRDlcmiRxStatusMsgs=tmnxFRDlcmiRxStatusMsgs, tmnxCiscoHDLCGroup=tmnxCiscoHDLCGroup, tmnxDS0ChanGroupCollectStats=tmnxDS0ChanGroupCollectStats, tmnxPortCemStatsEgrDroppedPkts=tmnxPortCemStatsEgrDroppedPkts, tPortEgrExpShaperStatsEntry=tPortEgrExpShaperStatsEntry, tmnxDS0ChanGroupBerSfLinkDown=tmnxDS0ChanGroupBerSfLinkDown, tmnxPortNotificationGroupV5v0=tmnxPortNotificationGroupV5v0, tmnxPortEgrExpShaperClass6Rate=tmnxPortEgrExpShaperClass6Rate, tmnxPortNumAlarms=tmnxPortNumAlarms, tmnxBundleYellowDiffDelay=tmnxBundleYellowDiffDelay, tPortEgrExpShaperCls5StFwdPkts=tPortEgrExpShaperCls5StFwdPkts, tmnxPortEgrExpShaperClass8Thresh=tmnxPortEgrExpShaperClass8Thresh, tmnxPortLagId=tmnxPortLagId, tmnxDDMSupplyVoltageLowAlarm=tmnxDDMSupplyVoltageLowAlarm, tPortAccEgrQOverPIRAdaptation=tPortAccEgrQOverPIRAdaptation, tmnxDS1BERTTotalBits=tmnxDS1BERTTotalBits, tmnxBundleMemberMlfrTable=tmnxBundleMemberMlfrTable, tmnxDDMSupplyVoltageHiWarning=tmnxDDMSupplyVoltageHiWarning, tmnxPortNetIngressFwdInProfOcts=tmnxPortNetIngressFwdInProfOcts, tmnxSonetBerSdThreshold=tmnxSonetBerSdThreshold, tmnxPortCemGroupV6v0=tmnxPortCemGroupV6v0, tmnxBundleImaGrpVersion=tmnxBundleImaGrpVersion, tmnxFRObjs=tmnxFRObjs, tmnxDS1ClockSource=tmnxDS1ClockSource, tmnxDS3ChannelLastChangeTime=tmnxDS3ChannelLastChangeTime, tmnxPortNetEgrQFwdOutProfPkts=tmnxPortNetEgrQFwdOutProfPkts, tPortEgrVPortHMTableLastChgd=tPortEgrVPortHMTableLastChgd, tmnxPortConnectTypeEntry=tmnxPortConnectTypeEntry, tPortEgrExpShaperCls5StMonOvrOct=tPortEgrExpShaperCls5StMonOvrOct, tmnxPortIngrMdaQos13StatDropPkts=tmnxPortIngrMdaQos13StatDropPkts, tmnxSonetSDHLoopbackStopped=tmnxSonetSDHLoopbackStopped, tmnx7710PortTDMGroupV3v0=tmnx7710PortTDMGroupV3v0, tmnxATMIntfMapping=tmnxATMIntfMapping, tmnxPortStatsR2r1Group=tmnxPortStatsR2r1Group, tPortAccEgrQGrpHMOrgString=tPortAccEgrQGrpHMOrgString, tPortEgrVPortHMRowStatus=tPortEgrVPortHMRowStatus, tmnxPortSchedOverrideLvl6PIR=tmnxPortSchedOverrideLvl6PIR, TmnxDSXClockSource=TmnxDSXClockSource, tmnxBundleMlpppClassCount=tmnxBundleMlpppClassCount, tmnxPortEtherHCPkts1519toMax=tmnxPortEtherHCPkts1519toMax, tmnxPortEtherAutoNegotiate=tmnxPortEtherAutoNegotiate, tmnxPortTypeEntry=tmnxPortTypeEntry, tmnxSonetSuppressLoOrderAlarm=tmnxSonetSuppressLoOrderAlarm, tmnxPortEgrVPortStatsV9v0Group=tmnxPortEgrVPortStatsV9v0Group, tmnxPortNotifyDS1AlarmReason=tmnxPortNotifyDS1AlarmReason, tPortNetEgrQGrpPStFwdOutProfOctH=tPortNetEgrQGrpPStFwdOutProfOctH, tmnxPortSchedOverrideLvl1PIR=tmnxPortSchedOverrideLvl1PIR, tPortNetEgrQGrpArbitStatFwdOcts=tPortNetEgrQGrpArbitStatFwdOcts, tmnxPortCemStatsTable=tmnxPortCemStatsTable, tmnxBundleMemberImaNeTxNumFails=tmnxBundleMemberImaNeTxNumFails, tmnxPortIngQosQStatFwdOutProfOcts=tmnxPortIngQosQStatFwdOutProfOcts, tmnxSonetPathMTU=tmnxSonetPathMTU, tmnxHsmdaPortSchOvrClass6WtInGp=tmnxHsmdaPortSchOvrClass6WtInGp, tmnxPortTestAction=tmnxPortTestAction, tmnxPortFCStatsIndex=tmnxPortFCStatsIndex, tmnxDS3Table=tmnxDS3Table, tmnxDDMLaneIdOrModule=tmnxDDMLaneIdOrModule, tmnxBundleImaGrpLostRxIcpCells=tmnxBundleImaGrpLostRxIcpCells, tmnxDigitalDiagMonitorGroup=tmnxDigitalDiagMonitorGroup, tmnxPortNetEgrQDroOutProfOcts=tmnxPortNetEgrQDroOutProfOcts, tmnxPortEgrExpShaperClass3Thresh=tmnxPortEgrExpShaperClass3Thresh, tmnxDS3ChannelMTU=tmnxDS3ChannelMTU, tPortAccIngQOverAdminCIR=tPortAccIngQOverAdminCIR, tmnxFRDlcmiStatusEnqMsgTimeouts=tmnxFRDlcmiStatusEnqMsgTimeouts, tmnxOpticalPortAmpModuleTemp=tmnxOpticalPortAmpModuleTemp, tmnxEqSonetClockSrcNotCompatible=tmnxEqSonetClockSrcNotCompatible, tPortNetEgrSchedStatFwdOcts=tPortNetEgrSchedStatFwdOcts, tmnxOpticalPortAmpGain=tmnxOpticalPortAmpGain, tmnxPortEtherSSMCodeType=tmnxPortEtherSSMCodeType, tmnxOpticalPortTdcmDispSwpStart=tmnxOpticalPortTdcmDispSwpStart, tmnxSonetGroupParentPortID=tmnxSonetGroupParentPortID, tmnxPortIngrMdaQos02StatDropOcts=tmnxPortIngrMdaQos02StatDropOcts, tmnxDigitalDiagMonitorEntry=tmnxDigitalDiagMonitorEntry, tmnxPortSFPVendorPartNum=tmnxPortSFPVendorPartNum, tmnxDDMLaneTxOutputPowerLowAlarm=tmnxDDMLaneTxOutputPowerLowAlarm, tmnxSonetGroupName=tmnxSonetGroupName, tmnxPortConformance=tmnxPortConformance, tPortEgrExpShaperCls5StFwdOcts=tPortEgrExpShaperCls5StFwdOcts, tmnxPortEgrQosQStatDpdInProfOcts=tmnxPortEgrQosQStatDpdInProfOcts, tmnxDS1PortEntry=tmnxDS1PortEntry, tmnxPortEtherEntry=tmnxPortEtherEntry, tPortEgrExpShaperCls8StMonOvrOH=tPortEgrExpShaperCls8StMonOvrOH, tmnxFrIntfEntry=tmnxFrIntfEntry, tmnxPortHybridEgrNetworkWeight=tmnxPortHybridEgrNetworkWeight, tPortNetEgrQGrpPStDrpInProfPkt=tPortNetEgrQGrpPStDrpInProfPkt, tmnxPortNotifyObsoleteGroup=tmnxPortNotifyObsoleteGroup, tmnxSonetPathOperMRU=tmnxSonetPathOperMRU, tmnxPortNotificationV9v0Group=tmnxPortNotificationV9v0Group, tmnxEqPortSpeedCfgNotCompatible=tmnxEqPortSpeedCfgNotCompatible, tmnxMlBundleGroupV6v0=tmnxMlBundleGroupV6v0, tmnxPortEgrExpShaperEntry=tmnxPortEgrExpShaperEntry, tmnxDS3ChannelMDLGenString=tmnxDS3ChannelMDLGenString, tmnxDDMTxBiasCurrentHiWarning=tmnxDDMTxBiasCurrentHiWarning, tmnxPortNetEgressDroInProfPkts=tmnxPortNetEgressDroInProfPkts, tPortNetEgrQGrpPStOffOutProfPktH=tPortNetEgrQGrpPStOffOutProfPktH, tmnxPortEtherCrcMonSfThreshold=tmnxPortEtherCrcMonSfThreshold, tPortEgrExpShaperCls7StMonOvrOH=tPortEgrExpShaperCls7StMonOvrOH, tPortNetEgrQGrpPStUncolOctOff=tPortNetEgrQGrpPStUncolOctOff, tmnxObjectAppAmbrAlrmThresh=tmnxObjectAppAmbrAlrmThresh, tmnxPortFCStatsIngFwdInProfOcts=tmnxPortFCStatsIngFwdInProfOcts, tmnxObjectAppPoolRowStatus=tmnxObjectAppPoolRowStatus, tmnxPortCemStatsIgrDroppedPkts=tmnxPortCemStatsIgrDroppedPkts, tPortEgrVPortHostMatchEntry=tPortEgrVPortHostMatchEntry, tPortNetEgrQGrpPStOffOutProfPktL=tPortNetEgrQGrpPStOffOutProfPktL, tPortEgrExpShaperCls7StFwdOcts=tPortEgrExpShaperCls7StFwdOcts, tmnxPortTypeDescription=tmnxPortTypeDescription, tmnxPortEthernetV5v0Group=tmnxPortEthernetV5v0Group, tPortNetEgrQGrpPStDrpInProfOctH=tPortNetEgrQGrpPStDrpInProfOctH, tPortEgrExpShaperAggStFwdOctsH=tPortEgrExpShaperAggStFwdOctsH, tmnxDDMTemperature=tmnxDDMTemperature, tPortNetEgrQGrpPStFwdOutProfPkt=tPortNetEgrQGrpPStFwdOutProfPkt, tmnxBundleImaGrpGammaValue=tmnxBundleImaGrpGammaValue, tmnxPortIngrMdaQos09StatDropOcts=tmnxPortIngrMdaQos09StatDropOcts, tmnxDDMLaneTemperature=tmnxDDMLaneTemperature, tmnxPortNetIngressStatsEntry=tmnxPortNetIngressStatsEntry, tmnxPortCemStatsEgrMultipleDrop=tmnxPortCemStatsEgrMultipleDrop, tmnxPortNetEgrQFwdInProfPkts=tmnxPortNetEgrQFwdInProfPkts, tPortNetEgrQGrpPStDrpOutProfOct=tPortNetEgrQGrpPStDrpOutProfOct, tmnxPortComp7710V6v1=tmnxPortComp7710V6v1, tPortNetEgrQOverCBS=tPortNetEgrQOverCBS, tmnxDDMAux2Type=tmnxDDMAux2Type, tmnxFrf12IntfTable=tmnxFrf12IntfTable, tmnxDS3ChannelMDLFicString=tmnxDS3ChannelMDLFicString, tmnxPortEgrExpShaperClass3Rate=tmnxPortEgrExpShaperClass3Rate, tmnxMcMlpppBundleGroup=tmnxMcMlpppBundleGroup, tmnxPortNetEgressFwdInProfPkts=tmnxPortNetEgressFwdInProfPkts, tmnxDDMAux2LowAlarm=tmnxDDMAux2LowAlarm, tmnxPortPlcyTableLastCh=tmnxPortPlcyTableLastCh, tmnxBundleImaGrpEntry=tmnxBundleImaGrpEntry, tmnxPortNotifyEtherCrcAlarmValue=tmnxPortNotifyEtherCrcAlarmValue, tPortNetEgrQOverAdminPIRPercent=tPortNetEgrQOverAdminPIRPercent, tmnxBundleMemberMlfrLoopback=tmnxBundleMemberMlfrLoopback, tmnxDDMLaneTxOutputPower=tmnxDDMLaneTxOutputPower, tmnxPortCemStatsEgrMalformedPkts=tmnxPortCemStatsEgrMalformedPkts, tmnxPortGroupV8v0=tmnxPortGroupV8v0, tmnxPwPortEntry=tmnxPwPortEntry, tmnxOpticalPortHasRxTdcm=tmnxOpticalPortHasRxTdcm, tPortEgrExpShaperStatsHLEntry=tPortEgrExpShaperStatsHLEntry, tmnxOpticalPortTdcmRtd4Temp=tmnxOpticalPortTdcmRtd4Temp, tmnxEqPortDS1AlarmClear=tmnxEqPortDS1AlarmClear, tmnxPortEtherDWLUseBroadcastAddr=tmnxPortEtherDWLUseBroadcastAddr, tmnxPortEtherAcctPolicyId=tmnxPortEtherAcctPolicyId, tmnxBundleOperMTU=tmnxBundleOperMTU, tmnxPortIngrMdaQos07StatDropPkts=tmnxPortIngrMdaQos07StatDropPkts, tmnxPwPortRowStatus=tmnxPwPortRowStatus, tmnxSonetMonK1Byte=tmnxSonetMonK1Byte, tmnxPortNetEgressDroOutProfPkts=tmnxPortNetEgressDroOutProfPkts, tmnxHsmdaPortSchOvrClass8WtInGp=tmnxHsmdaPortSchOvrClass8WtInGp, tmnxBPGrpAssocTable=tmnxBPGrpAssocTable, tmnxPortEtherSSMTxQualityLevel=tmnxPortEtherSSMTxQualityLevel, tPortNetEgrSchedStatEntry=tPortNetEgrSchedStatEntry, tmnxSonetHoldTimeDown=tmnxSonetHoldTimeDown, tmnxPortEgrExpShaperCl1BrstLimit=tmnxPortEgrExpShaperCl1BrstLimit, tmnxEqPortSFPStatusFailure=tmnxEqPortSFPStatusFailure, tmnxBundleMemberImaNeSevErrSecs=tmnxBundleMemberImaNeSevErrSecs, tmnxSonetTxS1Byte=tmnxSonetTxS1Byte, tmnxPortSFPStatus=tmnxPortSFPStatus, tmnxPortCemStatsEgrFailureCounts=tmnxPortCemStatsEgrFailureCounts, tmnxBundleImaGrpMaxConfBw=tmnxBundleImaGrpMaxConfBw, tmnxPortEgrExpShaperClass2Rate=tmnxPortEgrExpShaperClass2Rate, tmnxHostMatchNotifyIntDestId=tmnxHostMatchNotifyIntDestId, tmnxEqPortWrongSFP=tmnxEqPortWrongSFP, tmnxBundleImaGrpLnkDeactTimer=tmnxBundleImaGrpLnkDeactTimer, tmnxScalarPortV3v0Group=tmnxScalarPortV3v0Group, tmnxHsmdaPortSchOvrTable=tmnxHsmdaPortSchOvrTable, tmnxNamedPoolGroupV6v0=tmnxNamedPoolGroupV6v0, tmnxPortIngQosQStatEntry=tmnxPortIngQosQStatEntry, tmnxPortDescription=tmnxPortDescription, tmnxPortEquipped=tmnxPortEquipped, tmnxPortAlias=tmnxPortAlias, tmnxPortTestStartTime=tmnxPortTestStartTime, tmnxOpticalPortAmpCtrlState=tmnxOpticalPortAmpCtrlState, tmnxPortComp7750V4v0=tmnxPortComp7750V4v0, TmnxBundleID=TmnxBundleID, TmnxDSXBertPattern=TmnxDSXBertPattern, tmnxPortConnectTypeTable=tmnxPortConnectTypeTable, tPortAccIngSchedStatName=tPortAccIngSchedStatName, tPortEgrExpShaperCls3StMonOvrOL=tPortEgrExpShaperCls3StMonOvrOL, tmnxDS0ChanGroupLastChangeTime=tmnxDS0ChanGroupLastChangeTime, tmnxPortIngrMdaQos14StatDropPkts=tmnxPortIngrMdaQos14StatDropPkts, tPortEgrExpShaperCls1StFwdPktsH=tPortEgrExpShaperCls1StFwdPktsH, tmnxPortEgrExpShaperClass1Rate=tmnxPortEgrExpShaperClass1Rate, tPortAccIngQOverRowStatus=tPortAccIngQOverRowStatus, tmnxObjPortId=tmnxObjPortId, TmnxImaLnkFailState=TmnxImaLnkFailState, tmnxHsmdaGroupV6v0=tmnxHsmdaGroupV6v0, tmnxEqPortWaveTrackerAlarm=tmnxEqPortWaveTrackerAlarm, tmnxPortEtherQinqEtype=tmnxPortEtherQinqEtype, tmnxPortNotifyDescription=tmnxPortNotifyDescription, tmnxPortIngrMdaQos11StatDropPkts=tmnxPortIngrMdaQos11StatDropPkts, tmnxDS0ChanGroupCRC=tmnxDS0ChanGroupCRC, tmnxDS0ChanGroupOperMTU=tmnxDS0ChanGroupOperMTU, tmnxPortSFPMedia=tmnxPortSFPMedia, tmnxSonetPathChildType=tmnxSonetPathChildType, tmnxPortEtherPkts1519toMax=tmnxPortEtherPkts1519toMax, tmnxHsmdaPortSchOvrClass1Rate=tmnxHsmdaPortSchOvrClass1Rate, tmnxBundleMlpppEndpointIDClass=tmnxBundleMlpppEndpointIDClass, tmnxHsmdaPortSchOvrTblLastChngd=tmnxHsmdaPortSchOvrTblLastChngd, tmnxDDMExtCalRxPower0=tmnxDDMExtCalRxPower0, tmnxPortSchedOverrideRowStatus=tmnxPortSchedOverrideRowStatus, tmnxPortOperStatus=tmnxPortOperStatus, tmnxObjAppType=tmnxObjAppType, tmnxPortCompliances=tmnxPortCompliances, tmnxPortNotifySonetAlarmReason=tmnxPortNotifySonetAlarmReason, tmnxObjectAppResvCbsAmbrAlrmStep=tmnxObjectAppResvCbsAmbrAlrmStep, tmnxBundleMlfrAckTimer=tmnxBundleMlfrAckTimer, tmnxPortFCStatsEgrFwdOutProfOcts=tmnxPortFCStatsEgrFwdOutProfOcts)
mibBuilder.exportSymbols("TIMETRA-PORT-MIB", tPortEgrExpShaperCls5StMonOvrOL=tPortEgrExpShaperCls5StMonOvrOL, tmnxPortEtherCollectStats=tmnxPortEtherCollectStats, TmnxDSXBertOperStatus=TmnxDSXBertOperStatus, tPortNetEgrQGrpPStUncolOctOffL=tPortNetEgrQGrpPStUncolOctOffL, tmnxPortCemStatsEgrORunCounts=tmnxPortCemStatsEgrORunCounts, tmnxDigitalDiagMonitorTable=tmnxDigitalDiagMonitorTable, tmnx7710PortTDMGroupV5v0=tmnx7710PortTDMGroupV5v0, tmnxPortEgrExpShaperClass5Thresh=tmnxPortEgrExpShaperClass5Thresh, tmnxBundleMemberImaNeTxState=tmnxBundleMemberImaNeTxState, tmnxATMIntfEntry=tmnxATMIntfEntry, tmnxPortPlcyName=tmnxPortPlcyName, tmnxPwPortEncapType=tmnxPwPortEncapType, tmnxBundleImaGrpAlphaValue=tmnxBundleImaGrpAlphaValue, TmnxOpticalAmpAlarm=TmnxOpticalAmpAlarm, tmnxBundleMemberImaRxLid=tmnxBundleMemberImaRxLid, tPortNetEgrQGrpPStDrpInProfPktL=tPortNetEgrQGrpPStDrpInProfPktL, tPortNetEgrQGrpPStatMode=tPortNetEgrQGrpPStatMode, tmnxPortComp7750V6v0=tmnxPortComp7750V6v0, tPortAccEgrQOverAdminCIR=tPortAccEgrQOverAdminCIR, tmnxBundleMemberImaRxTestPattern=tmnxBundleMemberImaRxTestPattern, tPortNetEgrQOverTable=tPortNetEgrQOverTable, tmnxPortNetEgrQDroInProfPkts=tmnxPortNetEgrQDroInProfPkts, tPortEgrExpShaperCls8StFwdPkts=tPortEgrExpShaperCls8StFwdPkts, tmnxPortConnectTypeDescription=tmnxPortConnectTypeDescription, tPortNetEgrQGrpPStUncolOctOffH=tPortNetEgrQGrpPStUncolOctOffH, tmnxPortEntry=tmnxPortEntry, tmnxPortLoadBalGroupV10v0=tmnxPortLoadBalGroupV10v0, tmnxPortIngrMdaQos15StatDropOcts=tmnxPortIngrMdaQos15StatDropOcts, tmnxLsrIpLoadBalancing=tmnxLsrIpLoadBalancing, tmnxPortV9v0Group=tmnxPortV9v0Group, tmnxPortEtherCrcMonSdThreshold=tmnxPortEtherCrcMonSdThreshold, tmnxSonetMonS1Byte=tmnxSonetMonS1Byte, tmnxOpticalPortTdcmPresRxChan=tmnxOpticalPortTdcmPresRxChan, tmnxCiscoHDLCDiscardStatOutPkts=tmnxCiscoHDLCDiscardStatOutPkts, tmnxPortNetEgressFwdInProfOcts=tmnxPortNetEgressFwdInProfOcts, tmnxHsmdaPortSchOvrEntry=tmnxHsmdaPortSchOvrEntry, tPortEgrExpShaperCls2StFwdOctsH=tPortEgrExpShaperCls2StFwdOctsH, tPortNetEgrQGrpDescr=tPortNetEgrQGrpDescr, tmnxDS0ChanGroupPayloadPattern=tmnxDS0ChanGroupPayloadPattern, tPortAccEgrQGrpSchedPol=tPortAccEgrQGrpSchedPol, tPortEgrVPortAggStatsHLTable=tPortEgrVPortAggStatsHLTable, tmnxEqPortEtherLoopDetected=tmnxEqPortEtherLoopDetected, tmnxQosServiceDegraded=tmnxQosServiceDegraded, tmnxDS0ChanGroupRowStatus=tmnxDS0ChanGroupRowStatus, tmnxPortTDMV3v0Group=tmnxPortTDMV3v0Group, tPortNetEgrQOverRowStatus=tPortNetEgrQOverRowStatus, tmnxBundleImaGrpTxRefLnk=tmnxBundleImaGrpTxRefLnk, tmnxChannelPortID=tmnxChannelPortID, tPortEgrExpShaperCls4StFwdOcts=tPortEgrExpShaperCls4StFwdOcts, tmnxDDMExtCalVoltageOffset=tmnxDDMExtCalVoltageOffset, TmnxOpticalAmpCtrlState=TmnxOpticalAmpCtrlState, tmnxDS3ChannelClockSyncState=tmnxDS3ChannelClockSyncState, tmnxOpticalPortDwdmChannelMax=tmnxOpticalPortDwdmChannelMax, tmnxPortATMVpShaperEntry=tmnxPortATMVpShaperEntry, tmnxBundleMemberImaTxLid=tmnxBundleMemberImaTxLid, tmnxPortNotifySonetPathAlarmReason=tmnxPortNotifySonetPathAlarmReason, tmnxOpticalPortTdcmPowerIn=tmnxOpticalPortTdcmPowerIn, tmnxPortComp7450=tmnxPortComp7450, tmnxEqPortEtherInternalAlarmClr=tmnxEqPortEtherInternalAlarmClr, tmnxPortEthernetV6v0Group=tmnxPortEthernetV6v0Group, tmnxDS1BerSfThreshold=tmnxDS1BerSfThreshold, tmnxPortNotifyPrefix=tmnxPortNotifyPrefix, tmnxBundleMemberImaFeTxNumFails=tmnxBundleMemberImaFeTxNumFails, tmnxOpticalPortTdcmLoss=tmnxOpticalPortTdcmLoss, tmnxPortTestGroup=tmnxPortTestGroup, tPortAccEgrQGrpHMIntDestId=tPortAccEgrQGrpHMIntDestId, tmnxBundleImaGrpDiffDelayMaxObs=tmnxBundleImaGrpDiffDelayMaxObs, tmnxPortSchedOverrideFlags=tmnxPortSchedOverrideFlags, tmnxPortEgrExpShaperHiBurstInc=tmnxPortEgrExpShaperHiBurstInc, tmnxPortNotifyObjsGroupV8v9=tmnxPortNotifyObjsGroupV8v9, tmnxBundleMemberImaRelDelay=tmnxBundleMemberImaRelDelay, tmnxPortSchedOverrideLvl3CIR=tmnxPortSchedOverrideLvl3CIR, tmnxOpticalPortTdcmCtrlState=tmnxOpticalPortTdcmCtrlState, tmnxDS3ChannelCollectStats=tmnxDS3ChannelCollectStats, tmnxPortLoadBalanceAlgorithm=tmnxPortLoadBalanceAlgorithm, tmnxBundleMlpppEgrQoSProfId=tmnxBundleMlpppEgrQoSProfId, tmnxPwPortV10v0Group=tmnxPwPortV10v0Group, tmnxPortSchedOverrideLvl8PIR=tmnxPortSchedOverrideLvl8PIR, tmnxPortNumChannels=tmnxPortNumChannels, tmnxDS0ChanGroupScramble=tmnxDS0ChanGroupScramble, tmnxWaveTrackerEntry=tmnxWaveTrackerEntry, tPortNetEgrQOverAdminCIRPercent=tPortNetEgrQOverAdminCIRPercent, tmnxSonetTable=tmnxSonetTable, tmnxDS1InRemoteLoop=tmnxDS1InRemoteLoop, tmnxDS3ChannelTable=tmnxDS3ChannelTable, tmnxPortDwdmRxDtvAdjustEnable=tmnxPortDwdmRxDtvAdjustEnable, tmnxPortEgrExpShaperCl4BrstLimit=tmnxPortEgrExpShaperCl4BrstLimit, tmnxPortEgrExpShaperCl5BrstLimit=tmnxPortEgrExpShaperCl5BrstLimit, tmnxDDMSupplyVoltage=tmnxDDMSupplyVoltage, tmnxWaveTrackerInUse=tmnxWaveTrackerInUse, tmnxDS1BerSdThreshold=tmnxDS1BerSdThreshold, tPortEgrVPStLvl=tPortEgrVPStLvl, tmnxDDMFailedThresholds=tmnxDDMFailedThresholds, tmnxPortNotifyObjsGroupV6v0=tmnxPortNotifyObjsGroupV6v0, tmnxDS0ChanGroupTimeSlots=tmnxDS0ChanGroupTimeSlots, tmnxHsmdaPortSchOvrLastChanged=tmnxHsmdaPortSchOvrLastChanged, tmnxPortIngrMdaQos00StatDropOcts=tmnxPortIngrMdaQos00StatDropOcts, tmnxPortATMVpShaperVpi=tmnxPortATMVpShaperVpi, tmnxDDMLaneRxOpticalPwrLowAlarm=tmnxDDMLaneRxOpticalPwrLowAlarm, tmnxPortSchedOverrideLvl4PIR=tmnxPortSchedOverrideLvl4PIR, tmnxEqPortFailure=tmnxEqPortFailure, tPortAccIngQGrpTableLastChgd=tPortAccIngQGrpTableLastChgd, tmnxPortEtherDownWhenLoopedRetry=tmnxPortEtherDownWhenLoopedRetry, tmnxBundleMemberImaRxTestState=tmnxBundleMemberImaRxTestState, tmnxEqSonetSfThreshNotCompatible=tmnxEqSonetSfThreshNotCompatible, tmnxHsmdaPortSchOvrClass5WtInGp=tmnxHsmdaPortSchOvrClass5WtInGp, tPortAccEgrQOverMBSBytes=tPortAccEgrQOverMBSBytes, tPortNetEgrQGrpPStOffOutProfOct=tPortNetEgrQGrpPStOffOutProfOct, tmnxBundleTable=tmnxBundleTable, tmnxPortFCStatsIngDroOutProfPkts=tmnxPortFCStatsIngDroOutProfPkts, tmnxBundlePrimaryMemberPortID=tmnxBundlePrimaryMemberPortID, tPortEgrExpShaperCls3StMonOvrOH=tPortEgrExpShaperCls3StMonOvrOH, tmnxBundleMinimumLinks=tmnxBundleMinimumLinks, tmnxCiscoHDLCOperState=tmnxCiscoHDLCOperState, tmnxOpticalPortAmpSerialNum=tmnxOpticalPortAmpSerialNum, tPortEgrVPortHMOrgString=tPortEgrVPortHMOrgString, tmnxCiscoHDLCStatsTable=tmnxCiscoHDLCStatsTable, tmnxEqPortSFPRemoved=tmnxEqPortSFPRemoved, tmnxDDMTempHiWarning=tmnxDDMTempHiWarning, tmnxPortCemStatsEgrLBitDrop=tmnxPortCemStatsEgrLBitDrop, tmnxPortPrevState=tmnxPortPrevState, tmnxHsmdaPortSchOvrClass4Rate=tmnxHsmdaPortSchOvrClass4Rate, tmnxPortSchedOverrideLastChanged=tmnxPortSchedOverrideLastChanged, tPortNetEgrQGrpPStDrpOutProfOctL=tPortNetEgrQGrpPStDrpOutProfOctL, tmnxFRDlcmiTxStatusEnqMsgs=tmnxFRDlcmiTxStatusEnqMsgs, tmnxPortTypeIndex=tmnxPortTypeIndex, tmnxDDMLaneTxBiasCurrentHiAlarm=tmnxDDMLaneTxBiasCurrentHiAlarm, tmnxPortEtherEgressRate=tmnxPortEtherEgressRate, tPortNetEgrQGrpPStOffInProfOctL=tPortNetEgrQGrpPStOffInProfOctL, tmnxQosAppObjsGroup=tmnxQosAppObjsGroup, tmnxSonetGroupType=tmnxSonetGroupType, tmnxMcMlpppStatsIngressOct=tmnxMcMlpppStatsIngressOct, tmnxPortFCStatsIngFwdOutProfOcts=tmnxPortFCStatsIngFwdOutProfOcts, tmnxWaveTrackerWaveKey2=tmnxWaveTrackerWaveKey2, tmnxPortCemStatsEgrPktsReOrder=tmnxPortCemStatsEgrPktsReOrder, tmnxDSXClockSyncStateChange=tmnxDSXClockSyncStateChange, tPortAccIngQOverCIRAdaptation=tPortAccIngQOverCIRAdaptation, tPortEgrVPortAggStatsHLEntry=tPortEgrVPortAggStatsHLEntry, tmnxOpticalPortTdcmPowerOut=tmnxOpticalPortTdcmPowerOut, tmnxBundleMemberImaViolations=tmnxBundleMemberImaViolations, tmnxPortIngrMdaQos03StatDropPkts=tmnxPortIngrMdaQos03StatDropPkts, tPortNetEgrQGrpArbitStatFwdOctsH=tPortNetEgrQGrpArbitStatFwdOctsH, tmnxObjectId=tmnxObjectId, tmnxWaveTrackerUpperPowerMargin=tmnxWaveTrackerUpperPowerMargin, tmnxPortEgrPoolPercentRate=tmnxPortEgrPoolPercentRate, tmnxPortTestMode=tmnxPortTestMode, tmnxEqPortBndlBadEndPtDiscr=tmnxEqPortBndlBadEndPtDiscr, tmnxPortStatsObjs=tmnxPortStatsObjs, tmnxPortTableLastChange=tmnxPortTableLastChange, tmnxPortSchedStatsGroup=tmnxPortSchedStatsGroup, tmnxOpticalPortAmpAlarmState=tmnxOpticalPortAmpAlarmState, TmnxPortClass=TmnxPortClass, tPortEgrVPortAggStatsEntry=tPortEgrVPortAggStatsEntry, tmnxPortComp7450V6v1=tmnxPortComp7450V6v1, tmnxDS1PortLastChangeTime=tmnxDS1PortLastChangeTime, tmnxDDMExtCalTxLaserBiasSlope=tmnxDDMExtCalTxLaserBiasSlope, tmnxDDMTxOutputPowerLowWarning=tmnxDDMTxOutputPowerLowWarning, tmnxPortUserAssignedMac=tmnxPortUserAssignedMac, tmnxBundleImaGrpAvailRxCR=tmnxBundleImaGrpAvailRxCR)
