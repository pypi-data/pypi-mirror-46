Metadata-Version: 2.0
Name: admin-logs
Version: 0.2.14
Summary: Admin logs for django like in Google Application Engine
Home-page: https://github.com/FerumFlex/admin_logs
Author: Anton Pomeschenko
Author-email: ferumflex@gmail.com
License: MIT
Platform: UNKNOWN
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.7
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Framework :: Django :: 1.11
Requires-Dist: Django (>=1.7)
Requires-Dist: celery (>=4.1)
Requires-Dist: django-picklefield

About
=====

This small module for django allows you to store requests in your database(now supports only database) and then look at them in django admin.
This module was inspired by logs in Google Application Engine


Configure
=========

Include this lines to your settings.py:


::

  INSTALLED_APPS += ('admin_logs', )
  MIDDLEWARE_CLASSES = ('admin_logs.middleware.LogRequestMiddleware', ) + MIDDLEWARE_CLASSES  # place middleware as early as possible

  ADMIN_LOGS_BACKEND = 'admin_logs.backends.database.DatabaseBackend'  # now supports only database

  from admin_logs import setup_level
  setup_level('INFO')  # set minumum log level that will be written to logs

  from admin_logs.decorators import log

  # use full for celery tasks
  @log(name='test')
  def task_name():
    logging.warning('logging in task')

And this warning will be written to logs and you can check it later.

