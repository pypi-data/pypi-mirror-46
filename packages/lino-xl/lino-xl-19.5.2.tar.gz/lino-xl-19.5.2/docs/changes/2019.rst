.. include:: /../docs/shared/include/defs.rst
.. _xl.changes.2019:

=======================
Changes 2019 in Lino XL
=======================

.. Note: Changes are grouped by date. Every new day gives a new
   heading. If a release deserves separate release notes, we create a separate
   document and this file will have a link to it.

.. contents::
  :local:

2019-05-10
==========

Released Lino XL 19.5.2 to PyPI.

2019-05-08
==========

Optimization in :mod:`lino_xl.lib.households`: added a member type
"Forster-child".

:class:`lino_xl.lib.products.Product` is now duplicable.

2019-05-07
==========

Released Lino XL 19.5.0 to PyPI.

Removed the changed handler for :attr:`lino_xl.lib.cal.Event.end_time` because it was irritating.

Released Lino XL 19.5.1 to PyPI.

Minor changes in :mod:`lino_xl.lib.cal`:
The new calendar views are now visible for all applications (no longer only presto).
The required_roles for the new calendar views were not yet set as it should. In
general you must be :class:`lino_xl.lib.office.OfficeUser` or
:class:`lino_xl.lib.office.OfficeOperator` (or both). Note that avanti overrides
the required_roles of :class:`lino_xl.lib.cal.CalendarView` because they have
different rules: only users who may see client names may see the calendar.
The default calendar view is now monthly instead of weekly.
Restored :meth:`Event.__str__` from previous version.
Renamed some classes (e.g. "CalView" became "CalendarView").



2019-05-06
==========

New field :attr:`invoicing.Plan.min_date` can be used to specify a start date.

:mod:`lino_xl.lib.invoicing` now injects two fields :attr:`invoicing_min_date`
and :attr:`invoicing_max_date` to the :attr:`voucher_model
<lino_xl.lib.invoicing.plugin.voucher_model>`. These are set for every
generated invoice to those specified in the invoicing plan. They can be printed
on the invoice so the customer sees the invoiced period.

Fixed a bug in :meth:`VoucherTypes.get_for_model
<lino_xl.lib.ledger.VoucherTypes.get_for_model>` which caused it to simply
return the first possible candidate.  But it is possible to have two voucher
types which use the same model. It is now an error to call
:meth:`VoucherTypes.get_for_model
<lino_xl.lib.ledger.VoucherTypes.get_for_model>` (or
:meth:`VoucherTypes.get_for_table
<lino_xl.lib.ledger.VoucherTypes.get_for_table>`) with a model (or a table) for
which we don't have a unique voucher type.

2019-05-03
==========

The new calendar view seems ready for a first presentation. Congratulations to
Tonis and Hamza who implemented this mostly without any assistance by Luc.

Quite some changes in the :mod:`lino_xl.lib.healthcare` plugin.  This plugin
is in proof-of-concept phase and not yet used in any production site.


2019-05-02
==========

- Lino now handles topics with an empty reference more elegantly
  :class:`lino_xl.lib.topics.Topic` with empty
  :attr:`ref <lino_xl.lib.topics.Topic.ref>` field.

- Orders are now printable.

2019-05-01
==========

.. currentmodule:: lino_xl.lib.invoicing

Changes in :mod:`lino_xl.lib.invoicing`: Added a new model :class:`Area` to be
configured by the site admin via :menuselection:`Configure --> Sales -->
Invoicing areas`. New field :attr:`Plan.area`. Removed field
:attr:`Plan.journal` (which is replaced by :attr:`Area.journal`). Removed the
:class:`StartInvoicingForJournal` action which anyway wasn't used by anybody.


The :attr:`detail_layout` of :class:`lino_xl.lib.ledger.Journals` is now
specified as a string. Used by :mod:`lino_presto.lib.ledger` which overrides
the class.

2019-04-22
==========

:mod:`lino_xl.lib.orders` no longer stores the room per order but expects a
field room per journal.  Order items and Workers of an order are now deleted in
cascade with the order.

2019-04-17
==========

Fixed order of the :class:`lino_xl.lib.cal.Events` table.
(:ticket:`2969`) : 

.. currentmodule:: lino_xl.lib.tickets

A few modifications for :ref:`noi`
:mod:`lino_xl.lib.tickets`:
Renamed state "Started" to "Working".
:mod:`lino_xl.lib.tickets` had 'lino_noi.lib.noi' in `needed_plugins`.
Bullshit. Removed.
Renamed :class:`TicketsNeedingFeedback` to :class:`TicketsNeedingMyFeedback`.
And the labels of the two feedback tables are now more similar to the internal $

2019-04-15
==========

The new :class:`lino_xl.lib.cal.DailyView` table shows a
basic calendar navigator.  Looks promising, though there is more to do. For
example we also need a WeeklyView and a MonthlyView. They will share the same
navigator.
This change requires the newest version of Lino as well.
The table is currently visible only in :ref:`presto`.


2019-04-11
==========

Override the visible text for the :attr:`lino_xl.lib.vat.VatAccountInvoice.your_ref` 
field for the purchase invoice. And add this field to the grid panel.

Released Lino XL 19.4.0 to PyPI.

2019-04-10
==========

The :attr:`lino_xl.lib.orders.Order.room` field is no longer nullable.

When adding the workers of an order as guests of a calendar entry, Lino no
longer sorts them by name.  This behaviour came from :mod:`lino_xl.lib.courses`
where it is useful, but the workers of an order should remain in their natural
order.


2019-04-09
==========

New property :attr:`lino_xl.lib.vat.VatRegime.needs_vat_id`. The chooser
for :attr:`lino_xl.lib.contacts.Partner.vat_regime` now also depends on
whether the partner has a VAT id or not. The choicelist of the vat_regime
field of a voucher wasn't yet filtered. New function
:func:`lino_xl.lib.vat.get_vat_regime_choices` used by both choosers.
The :class:`lino_xl.lib.vat.VatRegimes` table now shows all these properties.

Changes in :mod:`lino_xl.lib.eevat` : removed regime "Private person
(reduced)".  The regime "Private person" can now be used for any area.
Selling to private persons in other countries was not yet allowed.

In :mod:`lino_xl.lib.vat` I changed :attr:`declaration_plugins
<lino_xl.lib.vat.Plugin.declaration_plugins>` to :attr:`declaration_plugin
<lino_xl.lib.vat.Plugin.declaration_plugin>` because I realized that you
can have only one declaration plugin.

New config setting :attr:`eu_country_codes
<lino_xl.lib.vat.Plugin.eu_country_codes>`, and the list is now complete
(at least at the moment of writing this).

:class:`lino_xl.lib.sepa.Payable`  now gives a more comprehensible warning
"No trade type for {}" when the trade type for the voucher is undefined.

I reviewed the :fixture:`demo` fixture of :mod:`lino_xl.lib.contacts`. It has
become more readable.  It no longer creates cities which don't exist (and
instead omits partners in these cities). I removed MÃ¼nchen and Kelmis
because these are difficult to lookup because their name varies with the
languages used on the site.  Each contact now has at least a city.

The :fixture:`demo` fixture for :mod:`lino_xl.lib.vat` now sets fictive VAT
numbers for each company.

Minor changes in the ordering of menu commands.

New property :attr:`lino_xl.lib.vat.VatColumn.common_account` and a new data
checker to verify that every VAT column has an account configured if it
requires one.


2019-04-03
==========

Invoice generators have a new attribute :attr:`default_invoiceable_qty
<lino_xl.lib.invoicing.InvoiceGenerator.default_invoiceable_qty>` whose default
value is ``1`` (as it was until now, but now we can change the hard-coded
default value per application).

New field :attr:`lino_xl.lib.cal.EventType.default_duration` per calendar entry
type. If a calendar entry has a type (:attr:`event_type
<lino_xl.lib.cal.Event.event_type>`) and if that type has a default duration,
Lino will change the :attr:`end_time` of an entry when the :attr:`start_date`
is changed (and the :attr:`start_time` when the :attr:`end_date`)


New field :attr:`lino_xl.lib.cal.EventType.default_duration`.
If a calendar entry has a type (:attr:`event_type`) and if that type has a
default duration (:attr:`EventTypedefault_duration`), Lino will change the
:attr:`end_time` of an entry when the :attr:`start_date`  is changed.

The :mod:`lino_xl.lib.products` plugin adds one menu entry per product type
(:attr:`lino_xl.lib.products.ProductTypes`).
When doing this, until now, it used the label of the
:attr:`lino_xl.lib.products.ProductType.table_name`, now it uses the
:attr:`lino_xl.lib.products.ProductType.text`.

The (:attr:`description <lino_xl.lib.orders.OrderItem.description>`) of an
order item  is now a single-line :class:`CharField` (not a multi-line
:class:`RichTextField`)



2019-03-28
==========

.. currentmodule:: lino_xl.lib.contacts

Limit the choices of
:attr:`Partner.vat_regime` depending on the :attr:`Partner.country`
and the available :class:`lino_xl.lib.vat.VatRules`. (:ticket:`2924`)

Changes in :mod:`lino_xl.lib.orders` and :mod:`lino_xl.lib.cal` for :ticket:`2776`:

- :attr:`lino_xl.lib.orders.Order.project` and
  :attr:`lino_xl.lib.orders.Order.invoice_recipient` were missing in OrderDetail.

- :attr:`lino_xl.lib.orders.Order.update_all_guests` caused a UNIQUE error
  because the workers were being suggested twice.

- Optimized the layout of :class:`lino_xl.lib.cal.EventDetail`

- When a user manually creates an event on a controller
  (:class:`lino.modlib.gfks.Controllable`), then Lino now also calls
  :meth:`lino_xl.lib.cal.RecurrenceSet.before_auto_event_save` and
  :meth:`lino_xl.lib.cal.EventGenerator.auto_cal_event_type` (if the controller
  is an instance of these)
- The Explorer menu now shows the :class:`lino_xl.lib.products.PriceFactors`.


2019-03-27 (v19.3.3 and v19.3.4)
==================================

Minor changes in :mod:`lino_xl.lib.eevat`: VAT rate 20% (not 21%). Removed
regime "Delay in collection".

Released Lino XL 19.3.3 and 19.3.4 to PyPI.  In 19.3.3 :mod:`lino_xl.lib.eevat`
failed.


2019-03-19
==========

Released Lino XL 19.3.2 to PyPI.


2019-03-18
==========

- New config setting :mod:`lino_xl.lib.vat.Plugin.declaration_plugins`.


2019-03-17
==========

- Added a new plugin :mod:`lino_xl.lib.eevat`.  This is a quickly adapted copy
  of bevat where we just removed the regimes that make no sense in Estonia.  The
  declaration itself will need more work.


2019-03-16
==========

- :mod:`lino_xl.lib.bevat` has been cleaned up and documented because it will
  serve as template for the new :mod:`lino_xl.lib.eevat` plugin.


2019-03-15
==========

- :mod:`lino_xl.lib.vat` can now be used
  without also using any of :mod:`lino_xl.lib.bevat` or
  :mod:`lino_xl.lib.bevats`.
  It defines a VAT regime ``normal`` and a VAT rule which allows everything.

- :class:`lino_xl.lib.ledger.MatchRule` now has :attr:`allow_cascaded_delete`
  set to "journal" (when you delete a journal, related match rules should delete
  automatically)



2019-03-11 (v 19.3.1)
=====================

.. currentmodule:: lino_xl.lib.beid

Moved :func:`read_card_data_from_file` out of :func:`load_card_data`. 
This is just an internal change used for writing test cases.

Released XL 19.3.1 to PyPI.

2019-03-07 (v 19.3.0)
=====================

Released XL 19.3.0 to PyPI.

2019-03-04
==========

Add new action :meth:`lino_xl.lib.ledger.Voucher.changing_state` to the :class:`lino_xl.lib.ledger.Voucher`. This action
changes the invoice between the two Registered and Draft states. This action can be trigger using the Ctrl+X keyboard
shortcut. It is defined in the :meth:`lino_xl.lib.ledger.ui.Vouchers.get_actions_hotkeys` .

2019-02-27
==========

Courses with a Course.max_date before today are now longer available as choices when creating a new enrolment.
As it was already before for Course.enrolments_until


2019-02-25
==========

Fixed :ticket:`2811` (UnicodeError when re-reading a beid card where the diff
contained non-ascii chars).

2019-02-20
==========

It is now possible to easily redefine the detail layout for
:class:`lino_xl.lib.cal.Rooms` by overriding
:class:`lino_xl.lib.cal.RoomDetail`

2019-02-13
==========

:meth:`lino_xl.lib.ledger.Voucher.get_wanted_movements` now has a default
implementation which returns no movements.


2019-02-12
==========

More changes in the :mod:`lino_xl.lib.orders` plugin which is still work in
progress for :ref:`presto`.


2019-02-09
==========

Released Lino XL 19.2.0 to PyPI.


2019-02-08
==========

Changes in :mod:`lino_xl.lib.vat` and :mod:`lino_xl.lib.ledger` to use the new
"volumes" feature (library uploads).  For :ticket:`2826`.

Concretely:

- The detail of a :class:`lino_xl.lib.vat.VatAccountInvoice` now shows
  the :class:`UploadsByController` slave table.

  But what if an application wants to use :mod:`lino_xl.lib.vat` without
  :mod:`lino.modlib.uploads`?  e.g. :ref:`tera`. Quick fix : add plugins also
  to these applications.

  And :class:`lino_xl.lib.vat.VatAccountInvoice` should implement this method
  by asking the journal.  New field
  :attr:`lino_xl.lib.ledger.Journal.uploads_volume`.

- Every voucher is now potentially an upload controller: :class:`ledger.Voucher
  <lino_xl.lib.ledger.Voucher>` inherits from :class:`UploadController`.

  Added a new field :attr:`lino_xl.lib.ledger.Journal.uploads_volume`, and the
  :meth:`UploadController.get_uploads_volume` for a
  voucher returns this.



2019-02-03
==========

.. currentmodule:: lino_xl.lib.beid

In :mod:`lino_xl.lib.beid` we moved some functionality from
:class:`BeIdCardHolder` into a separate new mixin :class:`SSIN` which can be
used also when the plugin is not installed.  Existing applications don't need
to adapt.  Converted docstrings to prosa docs.

More changes in the :mod:`lino_xl.lib.orders` plugin which is still work in
progress.



2019-01-31
==========

.. currentmodule:: lino_xl.lib.products

In :mod:`lino_xl.lib.products` we now have a new model :class:`PriceRule` and a
new choicelist :class:`PriceFactors` (taken from :mod:`lino_tera.lib.courses`).
For :ref:`tera` this means a minor data migration: change "courses.PriceRule"
to "products.PriceRule" in the :xfile:`restore.py` field.

We have a new plugin :mod:`lino_xl.lib.orders` that is being developed for
:ref:`presto`.  Not yet stable.

2019-01-24
==========

The field :attr:`lino_xl.lib.contacts.Role.type` had a verbose name "Role"
which was useless and irritating because "Function" is clear enough and the
same word as in :menuselection:`Configure --> Contacts --> Functions`.

Optimized the detail layout of 
:class:`lino_xl.lib.ledger.Journal` and 
the library base class for partner details (:class:`lino_xl.lib.contacts.PartnerDetail`).

Fixed :ticket:`2813` (the summary of :class:`lino_xl.lib.blogs.LatestEntries` 
inserted an additional line break when rendering links to database objects using 
a memo command.  Also the German translation did not correctly show date and author 
of a blog entry in this summary.


2019-01-22
==========

Fixed a little bug in :mod:`lino_xl.lib.vat` : when you created an invoice in a
journal with `edit_totals` and leave the total field empty, Lino said
"TypeError: unsupported operand type(s) for -: 'NoneType' and 'Decimal'"

Added intersphinx_urls, srcref_url and doc_trees settings to the main module so
that other doctrees can link to the docs.

Released version 19.1.1

2019-01-21
==========

The change notes for :ref:`xl` are now separated from those of :ref:`lino`.

New plugin attribute :attr:`lino_xl.lib.tim2lino.Plugin.timloader_kwargs` to be
used e.g. as follows::

    def setup_plugins(self):
        self.plugins.tim2lino.configure(
            languages='de fr',
            timloader_kwargs=dict(etat_registered="C"))
        super(Site, self).setup_plugins()

This new feature is not tested because the reason was just a missing "u"
prefix.


2019-01-18
==========

The categories (:class:`lino_xl.lib.products.ProductCat`) now have a field
:attr:`product_type <lino_xl.lib.products.ProductCat.product_type>` (i.e. all
applications that depend on it need to migrate).  This is because I realized
that categories are not useless.  The difference between the "category" and the
"type" of a product is that end-users can edit the former while the latter are
to be provided by the application developer.

I fixed a subtle bug in the :meth:`lino_xl.lib.ledger.Plugin.setup_main_menu`
method: the Accounting menu came before the Sales menu because a menu for
"ledger" was being created before looping over the journal groups. I removed an
unused plugin attribute :attr:`intrusive_menu` (whether a journal group is
"intrusive" or not now depends on its :attr:`menu_group`).

2019-01-17
==========

The :attr:`ref_max_length <lino.mixins.Referrable.ref_max_length>` for
:class:`lino_xl.lib.ledger.Journal` is now 5 instead of the default 40.

Printing invoices was broken (since we changed the default build method from
appy to weasy).  It said "No template found for
sales/VatProductInvoice/default.weasy.html, excerpts/default.weasy.html". We
created a new template :xfile:`sales/VatProductInvoice/default.weasy.html` (in
the :xfile:`config` directory of :mod:`lino_xl.lib.sales`).


2019-01-04
==========

We released XL 19.1.0

The fields :attr:`addr2` and :attr:`prefix` are now mostly hidden in forms. We
consider them obsolete.  :mod:`lino_xl.lib.contacts`.


