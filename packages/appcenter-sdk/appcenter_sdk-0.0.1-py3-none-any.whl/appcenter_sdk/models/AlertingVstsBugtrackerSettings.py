# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API  # noqa: E501

    OpenAPI spec version: preview
    Contact: benedetto.abbenanti@gmail.com
    Project Repository: https://github.com/b3nab/appcenter-sdks
"""

import pprint
import re  # noqa: F401

import six


class AlertingVstsBugtrackerSettings(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    github = "github"
    vsts = "vsts"
    jira = "jira"
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'vsts_project_id': 'string',
        'vsts_project_uri': 'string',
        'vsts_project_name': 'string',
        'vsts_account_name': 'string',
        'vsts_area_path': 'string',
        'vsts_default_payload': 'object'
    }

    attribute_map = {
        'vsts_project_id': 'vsts_project_id',
        'vsts_project_uri': 'vsts_project_uri',
        'vsts_project_name': 'vsts_project_name',
        'vsts_account_name': 'vsts_account_name',
        'vsts_area_path': 'vsts_area_path',
        'vsts_default_payload': 'vsts_default_payload'
    }

    def __init__(self, vsts_project_id=None, vsts_project_uri=None, vsts_project_name=None, vsts_account_name=None, vsts_area_path=None, vsts_default_payload=None):  # noqa: E501
        """AlertingVstsBugtrackerSettings - a model defined in Swagger"""  # noqa: E501
        self._vsts_project_id = None
        self._vsts_project_uri = None
        self._vsts_project_name = None
        self._vsts_account_name = None
        self._vsts_area_path = None
        self._vsts_default_payload = None
        self.discriminator = None
        self.vsts_project_id = vsts_project_id
        self.vsts_project_uri = vsts_project_uri
        if vsts_project_name is not None:
            self.vsts_project_name = vsts_project_name
        if vsts_account_name is not None:
            self.vsts_account_name = vsts_account_name
        if vsts_area_path is not None:
            self.vsts_area_path = vsts_area_path
        if vsts_default_payload is not None:
            self.vsts_default_payload = vsts_default_payload

    @property
    def vsts_project_id(self):
        """Gets the vsts_project_id of this AlertingVstsBugtrackerSettings.  # noqa: E501


        :return: The vsts_project_id of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :rtype: string
        """
        return self._vsts_project_id

    @vsts_project_id.setter
    def vsts_project_id(self, vsts_project_id):
        """Sets the vsts_project_id of this AlertingVstsBugtrackerSettings.


        :param vsts_project_id: The vsts_project_id of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :type: string
        """
        if vsts_project_id is None:
            raise ValueError("Invalid value for `vsts_project_id`, must not be `None`")  # noqa: E501

        self._vsts_project_id = vsts_project_id

    @property
    def vsts_project_uri(self):
        """Gets the vsts_project_uri of this AlertingVstsBugtrackerSettings.  # noqa: E501


        :return: The vsts_project_uri of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :rtype: string
        """
        return self._vsts_project_uri

    @vsts_project_uri.setter
    def vsts_project_uri(self, vsts_project_uri):
        """Sets the vsts_project_uri of this AlertingVstsBugtrackerSettings.


        :param vsts_project_uri: The vsts_project_uri of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :type: string
        """
        if vsts_project_uri is None:
            raise ValueError("Invalid value for `vsts_project_uri`, must not be `None`")  # noqa: E501

        self._vsts_project_uri = vsts_project_uri

    @property
    def vsts_project_name(self):
        """Gets the vsts_project_name of this AlertingVstsBugtrackerSettings.  # noqa: E501


        :return: The vsts_project_name of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :rtype: string
        """
        return self._vsts_project_name

    @vsts_project_name.setter
    def vsts_project_name(self, vsts_project_name):
        """Sets the vsts_project_name of this AlertingVstsBugtrackerSettings.


        :param vsts_project_name: The vsts_project_name of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :type: string
        """

        self._vsts_project_name = vsts_project_name

    @property
    def vsts_account_name(self):
        """Gets the vsts_account_name of this AlertingVstsBugtrackerSettings.  # noqa: E501


        :return: The vsts_account_name of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :rtype: string
        """
        return self._vsts_account_name

    @vsts_account_name.setter
    def vsts_account_name(self, vsts_account_name):
        """Sets the vsts_account_name of this AlertingVstsBugtrackerSettings.


        :param vsts_account_name: The vsts_account_name of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :type: string
        """

        self._vsts_account_name = vsts_account_name

    @property
    def vsts_area_path(self):
        """Gets the vsts_area_path of this AlertingVstsBugtrackerSettings.  # noqa: E501


        :return: The vsts_area_path of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :rtype: string
        """
        return self._vsts_area_path

    @vsts_area_path.setter
    def vsts_area_path(self, vsts_area_path):
        """Sets the vsts_area_path of this AlertingVstsBugtrackerSettings.


        :param vsts_area_path: The vsts_area_path of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :type: string
        """

        self._vsts_area_path = vsts_area_path

    @property
    def vsts_default_payload(self):
        """Gets the vsts_default_payload of this AlertingVstsBugtrackerSettings.  # noqa: E501


        :return: The vsts_default_payload of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :rtype: object
        """
        return self._vsts_default_payload

    @vsts_default_payload.setter
    def vsts_default_payload(self, vsts_default_payload):
        """Sets the vsts_default_payload of this AlertingVstsBugtrackerSettings.


        :param vsts_default_payload: The vsts_default_payload of this AlertingVstsBugtrackerSettings.  # noqa: E501
        :type: object
        """

        self._vsts_default_payload = vsts_default_payload

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AlertingVstsBugtrackerSettings):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
