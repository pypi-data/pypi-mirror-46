# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API  # noqa: E501

    OpenAPI spec version: preview
    Contact: benedetto.abbenanti@gmail.com
    Project Repository: https://github.com/b3nab/appcenter-sdks
"""

import pprint
import re  # noqa: F401

import six


class CrashDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'carrier_country': 'string',
        'carrier_name': 'string',
        'locale': 'string',
        'os_build': 'string',
        'rooted': 'boolean',
        'screen_size': 'string',
        'app_start_timestamp': 'string'
    }

    attribute_map = {
        'carrier_country': 'carrier_country',
        'carrier_name': 'carrier_name',
        'locale': 'locale',
        'os_build': 'os_build',
        'rooted': 'rooted',
        'screen_size': 'screen_size',
        'app_start_timestamp': 'app_start_timestamp'
    }

    def __init__(self, carrier_country=None, carrier_name=None, locale=None, os_build=None, rooted=None, screen_size=None, app_start_timestamp=None):  # noqa: E501
        """CrashDetails - a model defined in Swagger"""  # noqa: E501
        self._carrier_country = None
        self._carrier_name = None
        self._locale = None
        self._os_build = None
        self._rooted = None
        self._screen_size = None
        self._app_start_timestamp = None
        self.discriminator = None
        if carrier_country is not None:
            self.carrier_country = carrier_country
        if carrier_name is not None:
            self.carrier_name = carrier_name
        self.locale = locale
        if os_build is not None:
            self.os_build = os_build
        self.rooted = rooted
        self.screen_size = screen_size
        if app_start_timestamp is not None:
            self.app_start_timestamp = app_start_timestamp

    @property
    def carrier_country(self):
        """Gets the carrier_country of this CrashDetails.  # noqa: E501

        Carrier country code (for mobile devices).
  # noqa: E501

        :return: The carrier_country of this CrashDetails.  # noqa: E501
        :rtype: string
        """
        return self._carrier_country

    @carrier_country.setter
    def carrier_country(self, carrier_country):
        """Sets the carrier_country of this CrashDetails.

        Carrier country code (for mobile devices).
  # noqa: E501

        :param carrier_country: The carrier_country of this CrashDetails.  # noqa: E501
        :type: string
        """

        self._carrier_country = carrier_country

    @property
    def carrier_name(self):
        """Gets the carrier_name of this CrashDetails.  # noqa: E501

        Carrier name (for mobile devices).
  # noqa: E501

        :return: The carrier_name of this CrashDetails.  # noqa: E501
        :rtype: string
        """
        return self._carrier_name

    @carrier_name.setter
    def carrier_name(self, carrier_name):
        """Sets the carrier_name of this CrashDetails.

        Carrier name (for mobile devices).
  # noqa: E501

        :param carrier_name: The carrier_name of this CrashDetails.  # noqa: E501
        :type: string
        """

        self._carrier_name = carrier_name

    @property
    def locale(self):
        """Gets the locale of this CrashDetails.  # noqa: E501

        Language code (example: en_US).
  # noqa: E501

        :return: The locale of this CrashDetails.  # noqa: E501
        :rtype: string
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this CrashDetails.

        Language code (example: en_US).
  # noqa: E501

        :param locale: The locale of this CrashDetails.  # noqa: E501
        :type: string
        """
        if locale is None:
            raise ValueError("Invalid value for `locale`, must not be `None`")  # noqa: E501

        self._locale = locale

    @property
    def os_build(self):
        """Gets the os_build of this CrashDetails.  # noqa: E501

        OS build code (example: LMY47X).
  # noqa: E501

        :return: The os_build of this CrashDetails.  # noqa: E501
        :rtype: string
        """
        return self._os_build

    @os_build.setter
    def os_build(self, os_build):
        """Sets the os_build of this CrashDetails.

        OS build code (example: LMY47X).
  # noqa: E501

        :param os_build: The os_build of this CrashDetails.  # noqa: E501
        :type: string
        """

        self._os_build = os_build

    @property
    def rooted(self):
        """Gets the rooted of this CrashDetails.  # noqa: E501

        Whether the device where the crash occurred is rooted or jailbroken
  # noqa: E501

        :return: The rooted of this CrashDetails.  # noqa: E501
        :rtype: boolean
        """
        return self._rooted

    @rooted.setter
    def rooted(self, rooted):
        """Sets the rooted of this CrashDetails.

        Whether the device where the crash occurred is rooted or jailbroken
  # noqa: E501

        :param rooted: The rooted of this CrashDetails.  # noqa: E501
        :type: boolean
        """
        if rooted is None:
            raise ValueError("Invalid value for `rooted`, must not be `None`")  # noqa: E501

        self._rooted = rooted

    @property
    def screen_size(self):
        """Gets the screen_size of this CrashDetails.  # noqa: E501

        Screen size of the device in pixels (example: 640x480).
  # noqa: E501

        :return: The screen_size of this CrashDetails.  # noqa: E501
        :rtype: string
        """
        return self._screen_size

    @screen_size.setter
    def screen_size(self, screen_size):
        """Sets the screen_size of this CrashDetails.

        Screen size of the device in pixels (example: 640x480).
  # noqa: E501

        :param screen_size: The screen_size of this CrashDetails.  # noqa: E501
        :type: string
        """
        if screen_size is None:
            raise ValueError("Invalid value for `screen_size`, must not be `None`")  # noqa: E501

        self._screen_size = screen_size

    @property
    def app_start_timestamp(self):
        """Gets the app_start_timestamp of this CrashDetails.  # noqa: E501

        Application launch timestamp (example: 1985-04-12T23:20:50.52Z).
  # noqa: E501

        :return: The app_start_timestamp of this CrashDetails.  # noqa: E501
        :rtype: string
        """
        return self._app_start_timestamp

    @app_start_timestamp.setter
    def app_start_timestamp(self, app_start_timestamp):
        """Sets the app_start_timestamp of this CrashDetails.

        Application launch timestamp (example: 1985-04-12T23:20:50.52Z).
  # noqa: E501

        :param app_start_timestamp: The app_start_timestamp of this CrashDetails.  # noqa: E501
        :type: string
        """

        self._app_start_timestamp = app_start_timestamp

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CrashDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
