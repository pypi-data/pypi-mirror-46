# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API  # noqa: E501

    OpenAPI spec version: preview
    Contact: benedetto.abbenanti@gmail.com
    Project Repository: https://github.com/b3nab/appcenter-sdks
"""

import pprint
import re  # noqa: F401

import six


class ProvisioningProfileMigration(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    0 = "0"
    1 = "1"
    2 = "2"
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'string',
        'bundle_id': 'string',
        'team_identifier': 'string',
        'type': 'integer',
        'is_appex': 'boolean',
        'expired_at': 'string',
        'udids': 'array',
        'url': 'string'
    }

    attribute_map = {
        'name': 'name',
        'bundle_id': 'bundle_id',
        'team_identifier': 'team_identifier',
        'type': 'type',
        'is_appex': 'is_appex',
        'expired_at': 'expired_at',
        'udids': 'udids',
        'url': 'url'
    }

    def __init__(self, name=None, bundle_id=None, team_identifier=None, type=None, is_appex=None, expired_at=None, udids=None, url=None):  # noqa: E501
        """ProvisioningProfileMigration - a model defined in Swagger"""  # noqa: E501
        self._name = None
        self._bundle_id = None
        self._team_identifier = None
        self._type = None
        self._is_appex = None
        self._expired_at = None
        self._udids = None
        self._url = None
        self.discriminator = None
        self.name = name
        self.bundle_id = bundle_id
        self.team_identifier = team_identifier
        self.type = type
        self.is_appex = is_appex
        if expired_at is not None:
            self.expired_at = expired_at
        if udids is not None:
            self.udids = udids
        if url is not None:
            self.url = url

    @property
    def name(self):
        """Gets the name of this ProvisioningProfileMigration.  # noqa: E501

        The name of the provisioning profile.  # noqa: E501

        :return: The name of this ProvisioningProfileMigration.  # noqa: E501
        :rtype: string
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProvisioningProfileMigration.

        The name of the provisioning profile.  # noqa: E501

        :param name: The name of this ProvisioningProfileMigration.  # noqa: E501
        :type: string
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def bundle_id(self):
        """Gets the bundle_id of this ProvisioningProfileMigration.  # noqa: E501

        The bundle/application identifier.  # noqa: E501

        :return: The bundle_id of this ProvisioningProfileMigration.  # noqa: E501
        :rtype: string
        """
        return self._bundle_id

    @bundle_id.setter
    def bundle_id(self, bundle_id):
        """Sets the bundle_id of this ProvisioningProfileMigration.

        The bundle/application identifier.  # noqa: E501

        :param bundle_id: The bundle_id of this ProvisioningProfileMigration.  # noqa: E501
        :type: string
        """
        if bundle_id is None:
            raise ValueError("Invalid value for `bundle_id`, must not be `None`")  # noqa: E501

        self._bundle_id = bundle_id

    @property
    def team_identifier(self):
        """Gets the team_identifier of this ProvisioningProfileMigration.  # noqa: E501

        The team identifier.  # noqa: E501

        :return: The team_identifier of this ProvisioningProfileMigration.  # noqa: E501
        :rtype: string
        """
        return self._team_identifier

    @team_identifier.setter
    def team_identifier(self, team_identifier):
        """Sets the team_identifier of this ProvisioningProfileMigration.

        The team identifier.  # noqa: E501

        :param team_identifier: The team_identifier of this ProvisioningProfileMigration.  # noqa: E501
        :type: string
        """
        if team_identifier is None:
            raise ValueError("Invalid value for `team_identifier`, must not be `None`")  # noqa: E501

        self._team_identifier = team_identifier

    @property
    def type(self):
        """Gets the type of this ProvisioningProfileMigration.  # noqa: E501

        The type of provisoning profile.  # noqa: E501

        :return: The type of this ProvisioningProfileMigration.  # noqa: E501
        :rtype: integer
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ProvisioningProfileMigration.

        The type of provisoning profile.  # noqa: E501

        :param type: The type of this ProvisioningProfileMigration.  # noqa: E501
        :type: integer
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501
        allowed_values = [undefined, undefined, undefined, ]  # noqa: E501

        self._type = type

    @property
    def is_appex(self):
        """Gets the is_appex of this ProvisioningProfileMigration.  # noqa: E501

        A boolean value that indicates whether the provisioning profile represents an app extension.  # noqa: E501

        :return: The is_appex of this ProvisioningProfileMigration.  # noqa: E501
        :rtype: boolean
        """
        return self._is_appex

    @is_appex.setter
    def is_appex(self, is_appex):
        """Sets the is_appex of this ProvisioningProfileMigration.

        A boolean value that indicates whether the provisioning profile represents an app extension.  # noqa: E501

        :param is_appex: The is_appex of this ProvisioningProfileMigration.  # noqa: E501
        :type: boolean
        """
        if is_appex is None:
            raise ValueError("Invalid value for `is_appex`, must not be `None`")  # noqa: E501

        self._is_appex = is_appex

    @property
    def expired_at(self):
        """Gets the expired_at of this ProvisioningProfileMigration.  # noqa: E501

        The provisioning profile's expiration date in RFC 3339 format, i.e. 2017-07-21T17:32:28Z.  # noqa: E501

        :return: The expired_at of this ProvisioningProfileMigration.  # noqa: E501
        :rtype: string
        """
        return self._expired_at

    @expired_at.setter
    def expired_at(self, expired_at):
        """Sets the expired_at of this ProvisioningProfileMigration.

        The provisioning profile's expiration date in RFC 3339 format, i.e. 2017-07-21T17:32:28Z.  # noqa: E501

        :param expired_at: The expired_at of this ProvisioningProfileMigration.  # noqa: E501
        :type: string
        """

        self._expired_at = expired_at

    @property
    def udids(self):
        """Gets the udids of this ProvisioningProfileMigration.  # noqa: E501

        A list of UDIDs of provisioned devices.  # noqa: E501

        :return: The udids of this ProvisioningProfileMigration.  # noqa: E501
        :rtype: array
        """
        return self._udids

    @udids.setter
    def udids(self, udids):
        """Sets the udids of this ProvisioningProfileMigration.

        A list of UDIDs of provisioned devices.  # noqa: E501

        :param udids: The udids of this ProvisioningProfileMigration.  # noqa: E501
        :type: array
        """

        self._udids = udids

    @property
    def url(self):
        """Gets the url of this ProvisioningProfileMigration.  # noqa: E501

        A provisioning profile URL that indicates where to download it from.  # noqa: E501

        :return: The url of this ProvisioningProfileMigration.  # noqa: E501
        :rtype: string
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ProvisioningProfileMigration.

        A provisioning profile URL that indicates where to download it from.  # noqa: E501

        :param url: The url of this ProvisioningProfileMigration.  # noqa: E501
        :type: string
        """

        self._url = url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProvisioningProfileMigration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
