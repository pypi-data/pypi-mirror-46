# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API  # noqa: E501

    OpenAPI spec version: preview
    Contact: benedetto.abbenanti@gmail.com
    Project Repository: https://github.com/b3nab/appcenter-sdks
"""

import pprint
import re  # noqa: F401

import six


class AppleMappingResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'app_id': 'string',
        'service_connection_id': 'string',
        'apple_id': 'string',
        'team_identifier': 'string'
    }

    attribute_map = {
        'app_id': 'app_id',
        'service_connection_id': 'service_connection_id',
        'apple_id': 'apple_id',
        'team_identifier': 'team_identifier'
    }

    def __init__(self, app_id=None, service_connection_id=None, apple_id=None, team_identifier=None):  # noqa: E501
        """AppleMappingResponse - a model defined in Swagger"""  # noqa: E501
        self._app_id = None
        self._service_connection_id = None
        self._apple_id = None
        self._team_identifier = None
        self.discriminator = None
        if app_id is not None:
            self.app_id = app_id
        if service_connection_id is not None:
            self.service_connection_id = service_connection_id
        if apple_id is not None:
            self.apple_id = apple_id
        if team_identifier is not None:
            self.team_identifier = team_identifier

    @property
    def app_id(self):
        """Gets the app_id of this AppleMappingResponse.  # noqa: E501

        ID of the apple application in Mobile Center  # noqa: E501

        :return: The app_id of this AppleMappingResponse.  # noqa: E501
        :rtype: string
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this AppleMappingResponse.

        ID of the apple application in Mobile Center  # noqa: E501

        :param app_id: The app_id of this AppleMappingResponse.  # noqa: E501
        :type: string
        """

        self._app_id = app_id

    @property
    def service_connection_id(self):
        """Gets the service_connection_id of this AppleMappingResponse.  # noqa: E501

        Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center.  # noqa: E501

        :return: The service_connection_id of this AppleMappingResponse.  # noqa: E501
        :rtype: string
        """
        return self._service_connection_id

    @service_connection_id.setter
    def service_connection_id(self, service_connection_id):
        """Sets the service_connection_id of this AppleMappingResponse.

        Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center.  # noqa: E501

        :param service_connection_id: The service_connection_id of this AppleMappingResponse.  # noqa: E501
        :type: string
        """

        self._service_connection_id = service_connection_id

    @property
    def apple_id(self):
        """Gets the apple_id of this AppleMappingResponse.  # noqa: E501

        ID of the apple application in apple store  # noqa: E501

        :return: The apple_id of this AppleMappingResponse.  # noqa: E501
        :rtype: string
        """
        return self._apple_id

    @apple_id.setter
    def apple_id(self, apple_id):
        """Sets the apple_id of this AppleMappingResponse.

        ID of the apple application in apple store  # noqa: E501

        :param apple_id: The apple_id of this AppleMappingResponse.  # noqa: E501
        :type: string
        """

        self._apple_id = apple_id

    @property
    def team_identifier(self):
        """Gets the team_identifier of this AppleMappingResponse.  # noqa: E501

        ID of the Team associated with the app in apple store  # noqa: E501

        :return: The team_identifier of this AppleMappingResponse.  # noqa: E501
        :rtype: string
        """
        return self._team_identifier

    @team_identifier.setter
    def team_identifier(self, team_identifier):
        """Sets the team_identifier of this AppleMappingResponse.

        ID of the Team associated with the app in apple store  # noqa: E501

        :param team_identifier: The team_identifier of this AppleMappingResponse.  # noqa: E501
        :type: string
        """

        self._team_identifier = team_identifier

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AppleMappingResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
