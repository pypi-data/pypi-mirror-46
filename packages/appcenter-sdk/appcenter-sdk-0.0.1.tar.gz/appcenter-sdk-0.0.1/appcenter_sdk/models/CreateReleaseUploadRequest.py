# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API  # noqa: E501

    OpenAPI spec version: preview
    Contact: benedetto.abbenanti@gmail.com
    Project Repository: https://github.com/b3nab/appcenter-sdks
"""

import pprint
import re  # noqa: F401

import six


class CreateReleaseUploadRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ipa = "ipa"
    apk = "apk"
    msi = "msi"
    xap = "xap"
    appx = "appx"
    appxbundle = "appxbundle"
    msix = "msix"
    msixbundle = "msixbundle"
    appxupload = "appxupload"
    msixupload = "msixupload"
    app.zip = "app.zip"
    dmg = "dmg"
    pkg = "pkg"
    zip = "zip"
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'file_extension': 'string'
    }

    attribute_map = {
        'file_extension': 'file_extension'
    }

    def __init__(self, file_extension=None):  # noqa: E501
        """CreateReleaseUploadRequest - a model defined in Swagger"""  # noqa: E501
        self._file_extension = None
        self.discriminator = None
        self.file_extension = file_extension

    @property
    def file_extension(self):
        """Gets the file_extension of this CreateReleaseUploadRequest.  # noqa: E501

        The file extension of the uploaded file  # noqa: E501

        :return: The file_extension of this CreateReleaseUploadRequest.  # noqa: E501
        :rtype: string
        """
        return self._file_extension

    @file_extension.setter
    def file_extension(self, file_extension):
        """Sets the file_extension of this CreateReleaseUploadRequest.

        The file extension of the uploaded file  # noqa: E501

        :param file_extension: The file_extension of this CreateReleaseUploadRequest.  # noqa: E501
        :type: string
        """
        if file_extension is None:
            raise ValueError("Invalid value for `file_extension`, must not be `None`")  # noqa: E501
        allowed_values = [undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined]  # noqa: E501

        self._file_extension = file_extension

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateReleaseUploadRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
