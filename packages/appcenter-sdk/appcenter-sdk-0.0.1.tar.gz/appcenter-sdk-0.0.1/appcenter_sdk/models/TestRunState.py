# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API  # noqa: E501

    OpenAPI spec version: preview
    Contact: benedetto.abbenanti@gmail.com
    Project Repository: https://github.com/b3nab/appcenter-sdks
"""

import pprint
import re  # noqa: F401

import six


class TestRunState(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'test_run_state': 'object',
        'message': 'array',
        'wait_time': 'integer',
        'exit_code': 'integer'
    }

    attribute_map = {
        'test_run_state': 'test_run_state',
        'message': 'message',
        'wait_time': 'wait_time',
        'exit_code': 'exit_code'
    }

    def __init__(self, test_run_state=None, message=None, wait_time=None, exit_code=None):  # noqa: E501
        """TestRunState - a model defined in Swagger"""  # noqa: E501
        self._test_run_state = None
        self._message = None
        self._wait_time = None
        self._exit_code = None
        self.discriminator = None
        if test_run_state is not None:
            self.test_run_state = test_run_state
        if message is not None:
            self.message = message
        if wait_time is not None:
            self.wait_time = wait_time
        if exit_code is not None:
            self.exit_code = exit_code

    @property
    def test_run_state(self):
        """Gets the test_run_state of this TestRunState.  # noqa: E501

        Current status of a test run  # noqa: E501

        :return: The test_run_state of this TestRunState.  # noqa: E501
        :rtype: object
        """
        return self._test_run_state

    @test_run_state.setter
    def test_run_state(self, test_run_state):
        """Sets the test_run_state of this TestRunState.

        Current status of a test run  # noqa: E501

        :param test_run_state: The test_run_state of this TestRunState.  # noqa: E501
        :type: object
        """

        self._test_run_state = test_run_state

    @property
    def message(self):
        """Gets the message of this TestRunState.  # noqa: E501

        Multi-line message that describes the status  # noqa: E501

        :return: The message of this TestRunState.  # noqa: E501
        :rtype: array
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this TestRunState.

        Multi-line message that describes the status  # noqa: E501

        :param message: The message of this TestRunState.  # noqa: E501
        :type: array
        """

        self._message = message

    @property
    def wait_time(self):
        """Gets the wait_time of this TestRunState.  # noqa: E501

        Time (in seconds) that the client should wait for before checking the status again  # noqa: E501

        :return: The wait_time of this TestRunState.  # noqa: E501
        :rtype: integer
        """
        return self._wait_time

    @wait_time.setter
    def wait_time(self, wait_time):
        """Sets the wait_time of this TestRunState.

        Time (in seconds) that the client should wait for before checking the status again  # noqa: E501

        :param wait_time: The wait_time of this TestRunState.  # noqa: E501
        :type: integer
        """

        self._wait_time = wait_time

    @property
    def exit_code(self):
        """Gets the exit_code of this TestRunState.  # noqa: E501

        The exit code that the client should use when exiting. Used for indicating status to the caller of the client.
0: test run completes with no failing tests
1: test run completes with at least one failing test
2: test run failed to complete. Status for test run is unknown
  # noqa: E501

        :return: The exit_code of this TestRunState.  # noqa: E501
        :rtype: integer
        """
        return self._exit_code

    @exit_code.setter
    def exit_code(self, exit_code):
        """Sets the exit_code of this TestRunState.

        The exit code that the client should use when exiting. Used for indicating status to the caller of the client.
0: test run completes with no failing tests
1: test run completes with at least one failing test
2: test run failed to complete. Status for test run is unknown
  # noqa: E501

        :param exit_code: The exit_code of this TestRunState.  # noqa: E501
        :type: integer
        """

        self._exit_code = exit_code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TestRunState):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
