# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API  # noqa: E501

    OpenAPI spec version: preview
    Contact: benedetto.abbenanti@gmail.com
    Project Repository: https://github.com/b3nab/appcenter-sdks
"""

import pprint
import re  # noqa: F401

import six


class TestCloudStartTestRunResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'test_cloud_test_run_start_result': 'object',
        'accepted_devices': 'array',
        'rejected_devices': 'array'
    }

    attribute_map = {
        'test_cloud_test_run_start_result': 'test_cloud_test_run_start_result',
        'accepted_devices': 'accepted_devices',
        'rejected_devices': 'rejected_devices'
    }

    def __init__(self, test_cloud_test_run_start_result=None, accepted_devices=None, rejected_devices=None):  # noqa: E501
        """TestCloudStartTestRunResult - a model defined in Swagger"""  # noqa: E501
        self._test_cloud_test_run_start_result = None
        self._accepted_devices = None
        self._rejected_devices = None
        self.discriminator = None
        if test_cloud_test_run_start_result is not None:
            self.test_cloud_test_run_start_result = test_cloud_test_run_start_result
        if accepted_devices is not None:
            self.accepted_devices = accepted_devices
        if rejected_devices is not None:
            self.rejected_devices = rejected_devices

    @property
    def test_cloud_test_run_start_result(self):
        """Gets the test_cloud_test_run_start_result of this TestCloudStartTestRunResult.  # noqa: E501

        Result of starting a test run  # noqa: E501

        :return: The test_cloud_test_run_start_result of this TestCloudStartTestRunResult.  # noqa: E501
        :rtype: object
        """
        return self._test_cloud_test_run_start_result

    @test_cloud_test_run_start_result.setter
    def test_cloud_test_run_start_result(self, test_cloud_test_run_start_result):
        """Sets the test_cloud_test_run_start_result of this TestCloudStartTestRunResult.

        Result of starting a test run  # noqa: E501

        :param test_cloud_test_run_start_result: The test_cloud_test_run_start_result of this TestCloudStartTestRunResult.  # noqa: E501
        :type: object
        """

        self._test_cloud_test_run_start_result = test_cloud_test_run_start_result

    @property
    def accepted_devices(self):
        """Gets the accepted_devices of this TestCloudStartTestRunResult.  # noqa: E501

        List with names of accepted devices  # noqa: E501

        :return: The accepted_devices of this TestCloudStartTestRunResult.  # noqa: E501
        :rtype: array
        """
        return self._accepted_devices

    @accepted_devices.setter
    def accepted_devices(self, accepted_devices):
        """Sets the accepted_devices of this TestCloudStartTestRunResult.

        List with names of accepted devices  # noqa: E501

        :param accepted_devices: The accepted_devices of this TestCloudStartTestRunResult.  # noqa: E501
        :type: array
        """

        self._accepted_devices = accepted_devices

    @property
    def rejected_devices(self):
        """Gets the rejected_devices of this TestCloudStartTestRunResult.  # noqa: E501

        List with names and descriptions of rejected devices  # noqa: E501

        :return: The rejected_devices of this TestCloudStartTestRunResult.  # noqa: E501
        :rtype: array
        """
        return self._rejected_devices

    @rejected_devices.setter
    def rejected_devices(self, rejected_devices):
        """Sets the rejected_devices of this TestCloudStartTestRunResult.

        List with names and descriptions of rejected devices  # noqa: E501

        :param rejected_devices: The rejected_devices of this TestCloudStartTestRunResult.  # noqa: E501
        :type: array
        """

        self._rejected_devices = rejected_devices

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TestCloudStartTestRunResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
