Metadata-Version: 2.1
Name: ubittool
Version: 0.5.0
Summary: Tool to interface with the BBC micro:bit.
Home-page: https://carlosperate.github.io/ubittool/
License: MIT
Keywords: microbit,micro:bit,bbcmicrobit,ubittool
Author: Carlos Pereira Atencio
Author-email: carlosperate@embeddedlog.com
Requires-Python: >=3.5,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Environment :: MacOS X
Classifier: Environment :: Win32 (MS Windows)
Classifier: Environment :: X11 Applications
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Education
Classifier: Topic :: Software Development :: Embedded Systems
Requires-Dist: IntelHex (>=2.2.1,<3.0.0)
Requires-Dist: click (>=7.0,<8.0)
Requires-Dist: pyocd (==0.19.0)
Requires-Dist: uflash (>=1.1.0,<1.2.1)
Project-URL: Documentation, https://carlosperate.github.io/ubittool/
Project-URL: Repository, https://github.com/carlosperate/ubittool/
Description-Content-Type: text/markdown

# uBitTool

[![codecov](https://codecov.io/gh/carlosperate/ubittool/branch/master/graph/badge.svg)](https://codecov.io/gh/carlosperate/ubittool)
[![AppVeyor build status](https://ci.appveyor.com/api/projects/status/byfv99vlf6rinxne?svg=true)](https://ci.appveyor.com/project/carlosperate/ubitextract)
[![Travis build Status](https://travis-ci.org/carlosperate/ubittool.svg?branch=master)](https://travis-ci.org/carlosperate/ubittool)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)

Utility to extract a MicroPython program and/or interpreter from a microbit.

Install in a Python 2.7 virtual environment:

```
pip install .
```

Although pipenv is recommended:

```
pip install pipenv
pipenv install .
```

To run:

```
ubit read-code -f extracted_script.py
```

To run the GUI:

```
ubit gui
```

or from this directory:

```
python -m ubittool gui
```

To run the tests, from this directory execute:

```
python make.py check
```

To see what other make actions there are run:

```
python make.py --help
```

