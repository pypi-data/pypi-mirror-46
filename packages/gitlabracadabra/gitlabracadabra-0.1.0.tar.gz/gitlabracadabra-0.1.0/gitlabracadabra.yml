# An object ending with / is a group
gitlabracadabra/:
  create_object: true
  name: GitLabracadabra
  description: |-
    ðŸ§¹ GitLabracadabra ðŸ§™
    
    :alembic: Adds some magic to GitLab :crystal\_ball:
  visibility: public
  lfs_enabled: true
  request_access_enabled: false
  members:
    sathieu: owner
  unknown_members: delete

# The following object is a GitLab project (default type)
gitlabracadabra/gitlabracadabra:
  create_object: true
  name: GitLabracadabra
  default_branch: master
  description: |-
    ðŸ§¹ GitLabracadabra ðŸ§™
    
    :alembic: Adds some magic to GitLab :crystal\_ball:
  issues_enabled: true
  merge_requests_enabled: true
  jobs_enabled: true
  wiki_enabled: false
  snippets_enabled: false
  resolve_outdated_diff_discussions: false
  container_registry_enabled: true
  shared_runners_enabled: true
  visibility: public
  # import_url
  public_builds:
  only_allow_merge_if_pipeline_succeeds: true
  only_allow_merge_if_all_discussions_are_resolved: true
  merge_method: merge
  lfs_enabled: false
  request_access_enabled: false
  tag_list: [GitLab, API, YAML]
  # avatar
  printing_merge_request_link_enabled: true
  ci_config_path: ''
  # repository_storage
  approvals_before_merge: 0
  # external_authorization_classification_label
  # mirror
  # mirror_trigger_builds
  initialize_with_readme: true
  branches:
    - master
  groups: {}
  unknown_groups: delete
  members: {}
  unknown_members: delete
  protected_branches:
    master:
      merge_access_level: maintainer
      push_access_level: noone
  unknown_protected_branches: delete
  protected_tags:
    '*': maintainer
  unknown_protected_tags: delete
